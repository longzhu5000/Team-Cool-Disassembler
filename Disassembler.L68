00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/12/2022 1:50:29 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Disassembler
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000  6000 0002                 10          BRA     INTRO_MSGS
00001004                            11  
00001004                            12  * Put program code here
00001004                            13  
00001004                            14  *------LEA = Load effective address
00001004                            15  *------Running Trap #15 while the number 14 is in D0 will print out whatever data is in the address stored in A1
00001004                            16  
00001004                            17  INTRO_MSGS:
00001004  4280                      18          CLR.L       D0
00001006  4281                      19          CLR.L       D1
00001008  4282                      20          CLR.L       D2
0000100A  4283                      21          CLR.L       D3
0000100C  4284                      22          CLR.L       D4
0000100E  4285                      23          CLR.L       D5
00001010  4286                      24          CLR.L       D6
00001012  4287                      25          CLR.L       D7
00001014                            26  
00001014                            27  
00001014  43F9 00002A90             28          LEA         INTRO_MSG,      A1
0000101A  103C 000E                 29          MOVE.B      #14,            D0    
0000101E  4E4F                      30          TRAP        #15
00001020                            31          
00001020  43F9 00002AB6             32          LEA         STARTING_MSG,   A1
00001026  103C 000E                 33          MOVE.B      #14,            D0   
0000102A  4E4F                      34          TRAP        #15
0000102C                            35          
0000102C                            36  *----------------- 
0000102C                            37  *       Running trap command 15 while the number 2 is in D0 
0000102C                            38  *       Will ask the user to enter input
0000102C                            39  *       after the user hits enter, the length of the input is stored in D1
0000102C                            40  *       and the user data is stored in the space allocated by STA_ADDR repressented by ASSCI code
0000102C                            41  *       IE 31 = 1, 32 = 2 etc etc
0000102C                            42  *       If I store the number 1200, it will appear in memory as 31 32 30 30
0000102C                            43  
0000102C  43F9 00002B88             44          LEA         STA_ADDR,       A1
00001032  103C 0002                 45          MOVE.B      #2,             D0
00001036  4E4F                      46          TRAP        #15
00001038                            47          
00001038  4EB9 0000106A             48          JSR         CONVERT_TO_ASCII
0000103E                            49          
0000103E                            50          * A3 now has our Starting Address
0000103E  2647                      51          MOVEA.L     D7,             A3
00001040                            52          
00001040  4282                      53          CLR.L       D2
00001042  4287                      54          CLR.L       D7
00001044                            55          
00001044  43F9 00002ADA             56          LEA         ENDING_MSG,     A1
0000104A  103C 000E                 57          MOVE.B      #14,            D0
0000104E  4E4F                      58          TRAP        #15
00001050                            59          
00001050  43F9 00002BB0             60          LEA         END_ADDR,       A1
00001056  103C 0002                 61          MOVE.B      #2,             D0
0000105A  4E4F                      62          TRAP        #15
0000105C                            63          
0000105C  4EB9 0000106A             64          JSR         CONVERT_TO_ASCII
00001062                            65          * A4 now has our Ending Address
00001062  2847                      66          MOVEA.L     D7,             A4
00001064                            67          
00001064                            68  
00001064  4EB9 000010AC             69          JSR         PRINT_MEMORY_LOOP
0000106A                            70          
0000106A                            71          
0000106A                            72          
0000106A                            73          *BRA         DONE
0000106A                            74          *   ASCII conversion
0000106A                            75  *---------------------------------------        
0000106A                            76  CONVERT_TO_ASCII:             
0000106A  0C01 0000                 77          CMPI.B      #$0,            D1
0000106E  6700 0012                 78          BEQ         ASCII_DONE
00001072  1419                      79          MOVE.B      (A1)+,          D2
00001074  103C 0039                 80          MOVE.B      #$39,           D0
00001078  B400                      81          CMP.B       D0,             D2
0000107A  6F00 0008                 82          BLE         NUMBER_ASCII   
0000107E  6000 0018                 83          BRA         LETTER_ASCII  
00001082                            84  
00001082                            85  ASCII_DONE:
00001082  4E75                      86          RTS
00001084                            87          
00001084                            88  NUMBER_ASCII:
00001084  5301                      89          SUBI.B      #$1,            D1
00001086  103C 0030                 90          MOVE.B      #$30,           D0
0000108A  9400                      91          SUB.B       D0,             D2
0000108C  DE02                      92          ADD.B       D2,             D7
0000108E  0C01 0000                 93          CMPI.B      #$0,            D1
00001092  67EE                      94          BEQ         ASCII_DONE
00001094  E987                      95          ASL.L       #4,             D7
00001096  60D2                      96          BRA         CONVERT_TO_ASCII
00001098                            97  LETTER_ASCII:
00001098  5301                      98          SUBI.B      #$1,            D1
0000109A  103C 0037                 99          MOVE.B      #$37,           D0
0000109E  9400                     100          SUB.B       D0,             D2
000010A0  DE02                     101          ADD.B       D2,             D7
000010A2  0C01 0000                102          CMPI.B      #$0,            D1
000010A6  67DA                     103          BEQ         ASCII_DONE
000010A8  E987                     104          ASL.L       #4,             D7
000010AA  60BE                     105          BRA         CONVERT_TO_ASCII
000010AC                           106  *---------------------------------------        
000010AC                           107          
000010AC                           108          
000010AC                           109          *   Printing data and addresses
000010AC                           110  *---------------------------------------
000010AC                           111  
000010AC                           112  PRINT_MEMORY_LOOP:
000010AC                           113          * add code here to compare current address with end address
000010AC                           114          
000010AC                           115          * if equal to, or further than ending address jump to DONE
000010AC                           116          * SIMHALT
000010AC                           117          
000010AC  B0FC 000A                118          CMP.W       #$A,            A0
000010B0  6700 008E                119          BEQ         PAUSE_SCAN
000010B4                           120          
000010B4  B9CB                     121          CMP.L       A3,             A4
000010B6  6F00 00DE                122          BLE         RESTART
000010BA                           123          
000010BA                           124          * We are goiong to keep track of the number of byts we have examined using D1
000010BA                           125          * Before printing the address we have to reverse the order
000010BA  4281                     126          CLR.L       D1
000010BC  4282                     127          CLR.L       D2
000010BE  123C 0008                128          MOVE.B      #$8,            D1
000010C2  260B                     129          MOVE.L      A3,             D3
000010C4  4EB9 00001166            130          JSR         REVERSE_START
000010CA                           131          
000010CA  2607                     132          MOVE.L      D7,             D3
000010CC  4281                     133          CLR.L       D1
000010CE  4282                     134          CLR.L       D2
000010D0  123C 0008                135          MOVE.B      #$8,            D1
000010D4  4EB9 00001112            136          JSR         PRINT_LOOP
000010DA                           137          
000010DA                           138          
000010DA                           139          * space between address and data
000010DA  43F9 00002BD8            140          LEA         SPACE_MSG,      A1
000010E0  103C 000E                141          MOVE.B      #14,            D0    
000010E4  4E4F                     142          TRAP        #15
000010E6                           143          
000010E6  4281                     144          CLR.L       D1
000010E8  4282                     145          CLR.L       D2
000010EA  123C 0008                146          MOVE.B      #$8,            D1
000010EE  361B                     147          MOVE.W      (A3)+,          D3
000010F0                           148          *JSR         REVERSE_START
000010F0                           149          
000010F0                           150          *MOVE.L      D7,             D3
000010F0  4281                     151          CLR.L       D1
000010F2  4282                     152          CLR.L       D2
000010F4                           153          *MOVE.B      #$8,            D1
000010F4                           154          *JSR         PRINT_LOOP
000010F4                           155          
000010F4                           156          * Jump to Function in another file
000010F4  4EB9 000011D2            157          JSR         CHECK_OPCODES
000010FA                           158          
000010FA                           159          
000010FA  4281                     160          CLR.L       D1
000010FC  4282                     161          CLR.L       D2
000010FE  4283                     162          CLR.L       D3
00001100  4284                     163          CLR.L       D4
00001102                           164          * new line
00001102  43F9 00002C9D            165          LEA         NEW_LINE,       A1
00001108  103C 000E                166          MOVE.B      #14,            D0    
0000110C  4E4F                     167          TRAP        #15
0000110E                           168          
0000110E  5248                     169          ADD.W       #$1,            A0
00001110                           170  
00001110                           171          * branch to the start of this method
00001110  609A                     172          BRA         PRINT_MEMORY_LOOP
00001112                           173  
00001112                           174  
00001112                           175  PRINT_LOOP:
00001112                           176  
00001112                           177          
00001112                           178          * When D1 == 0, we are done and exit this loop
00001112  0C01 0000                179          CMPI.B      #$0,            D1
00001116  6700 004C                180          BEQ         PRINT_DONE
0000111A  5301                     181          SUBI.B      #$1,            D1
0000111C                           182          
0000111C  1403                     183          MOVE.B      D3,             D2
0000111E                           184          * Bit shifting to isolate the right most digit
0000111E                           185          * 1234 5678 => 8000 0000 => 0000 0008
0000111E  103C 001C                186          MOVE.B      #28,            D0    
00001122  E1AA                     187          LSL.L       D0,             D2     
00001124  E99A                     188          ROL.L       #4,             D2 
00001126                           189          
00001126                           190          * Bit shifting to prep the next digit
00001126                           191          * 1234 4567 => 0123 4567
00001126  E883                     192          ASR.L       #4, D3
00001128                           193          
00001128                           194          *Assuming D4 is empty
00001128                           195          
00001128  1802                     196          MOVE.B       D2,            D4
0000112A  43F9 00002BDB            197          LEA          ZERO_MSG,      A1
00001130                           198          * load the address of Zero_msg
00001130                           199          * because all of the msgs are stored next to each other in order
00001130                           200          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001130                           201          * and then add it to the address starting at zero_msg
00001130  C8FC 0002                202          MULU         #2,            D4
00001134  D3C4                     203          ADDA.L       D4,            A1
00001136                           204          
00001136                           205          * trap command 14 reads whatever address is in A1, and then spits out the data to the console
00001136  103C 000E                206          MOVE.B       #14,           D0
0000113A  4E4F                     207          TRAP         #15
0000113C  60D4                     208          BRA          PRINT_LOOP
0000113E  4644                     209          NOT          D4
00001140                           210  
00001140                           211  PAUSE_SCAN:
00001140  43F9 00002B65            212          LEA         PRESS_ENTER_MSG, A1
00001146  103C 000E                213          MOVE.B      #14,            D0
0000114A  4E4F                     214          TRAP        #15
0000114C  103C 0002                215          MOVE.B      #2,             D0
00001150  4E4F                     216          TRAP        #15
00001152                           217          
00001152  4280                     218          CLR.L       D0
00001154  4281                     219          CLR.L       D1
00001156  4282                     220          CLR.L       D2
00001158  327C 0000                221          MOVE.W      #$0000,         A1
0000115C                           222  
0000115C  307C 0000                223          MOVE.W      #$0000,         A0
00001160  6000 FF4A                224          BRA         PRINT_MEMORY_LOOP
00001164                           225          
00001164                           226  PRINT_DONE:
00001164  4E75                     227          RTS
00001166                           228          
00001166                           229      *   Reversing the address
00001166                           230  *---------------------------------------
00001166                           231  
00001166                           232  REVERSE_START:        
00001166  4281                     233          CLR.L       D1
00001168  4287                     234          CLR.L       D7
0000116A  123C 0008                235          MOVE.B      #8,             D1
0000116E  4EB9 00001176            236          JSR         REVERSE_LOOP
00001174  4E75                     237          RTS
00001176                           238          
00001176                           239  REVERSE_LOOP:
00001176                           240  
00001176                           241          
00001176  0C01 0000                242          CMPI.B      #$0,            D1
0000117A  6700 0018                243          BEQ         REVERSE_DONE
0000117E  5301                     244          SUBI.B      #$1,            D1
00001180  E987                     245          ASL.L       #4,             D7
00001182                           246          
00001182  4285                     247          CLR.L       D5
00001184                           248          
00001184  1A03                     249          MOVE.B      D3,             D5
00001186                           250          
00001186  103C 001C                251          MOVE.B      #28,            D0    
0000118A  E1AD                     252          LSL.L       D0,             D5     
0000118C  E99D                     253          ROL.L       #4,             D5
0000118E                           254          
0000118E  DE05                     255          ADD.B       D5,             D7
00001190                           256          
00001190                           257          
00001190  E883                     258          ASR.L       #4,             D3
00001192                           259          
00001192  60E2                     260          BRA         REVERSE_LOOP
00001194                           261  
00001194                           262  REVERSE_DONE:
00001194  4E75                     263          RTS
00001196                           264  
00001196                           265  RESTART:
00001196  43F9 00002AFC            266          LEA         DONE_MSG,       A1
0000119C  103C 000E                267          MOVE.B      #14,            D0
000011A0  4E4F                     268          TRAP        #15
000011A2  43F9 00002B10            269          LEA         RESTART_MSG,    A1
000011A8  103C 000E                270          MOVE.B      #14,            D0
000011AC  4E4F                     271          TRAP        #15
000011AE  103C 0002                272          MOVE.B      #2,             D0
000011B2  4E4F                     273          TRAP        #15
000011B4                           274          
000011B4  B23C 0001                275          CMP.B       #$1,            D1
000011B8  6700 0006                276          BEQ         DONE
000011BC                           277  
000011BC  6000 FE46                278          BRA         INTRO_MSGS
000011C0                           279  DONE:
000011C0                           280  
000011C0  43F9 00002B38            281          LEA         TY_MSG,         A1
000011C6  103C 000E                282          MOVE.B      #14,            D0
000011CA  4E4F                     283          TRAP        #15
000011CC  103C 0009                284          MOVE.B      #9,             D0
000011D0  4E4F                     285          TRAP        #15        
000011D2                           286          
000011D2                           287  
000011D2                           288      *SIMHALT             ; halt simulator
000011D2                           289  
000011D2                           290      INCLUDE         'Disassembler_OPCodes.x68'
000011D2                           291  
000011D2                           292  
000011D2                           293  
000011D2                           294  CHECK_OPCODES:
000011D2  4286                     295          CLR.L   D6
000011D4                           296  
000011D4  4EB9 00001288            297          JSR     ISOLATE_16
000011DA  BC3C 0001                298          CMP.B   #$1,    D6
000011DE  6700 005A                299          BEQ     RETURN
000011E2                           300          
000011E2  4EB9 00001296            301          JSR     ISOLATE_15_6
000011E8  BC3C 0001                302          CMP.B   #$1,    D6
000011EC  6700 004C                303          BEQ     RETURN
000011F0                           304  
000011F0  4EB9 000012A8            305          JSR     ISOLATE_15_8
000011F6  BC3C 0001                306          CMP.B   #$1,    D6
000011FA  6700 003E                307          BEQ     RETURN
000011FE                           308          
000011FE  4EB9 0000123C            309          JSR     ISOLATE_15_12
00001204  BC3C 0001                310          CMP.B   #$1,    D6
00001208  6700 0030                311          BEQ     RETURN
0000120C                           312          
0000120C  4EB9 000012BA            313          JSR     ISOLATE_15_11
00001212  BC3C 0001                314          CMP.B   #$1,    D6
00001216  6700 0022                315          BEQ     RETURN
0000121A                           316          
0000121A  4EB9 000012DE            317          JSR     ISOLATE_8_6
00001220  BC3C 0001                318          CMP.B   #$1,    D6        
00001224  6700 0014                319          BEQ     RETURN
00001228                           320          
00001228  4EB9 000012CC            321          JSR     ISOLATE_15_14    
0000122E  BC3C 0001                322          CMP.B   #$1,    D6
00001232  6700 0006                323          BEQ     RETURN
00001236                           324          
00001236                           325          
00001236  6000 0A5A                326          BRA   TOTAL_DECODE_FAILURE
0000123A                           327  RETURN:
0000123A  4E75                     328          RTS
0000123C                           329  
0000123C                           330  ISOLATE_15_12:
0000123C  3803                     331          MOVE.W      D3,     D4
0000123E  343C 000C                332          MOVE.W      #12,     D2
00001242  E46C                     333          LSR.W       D2,     D4
00001244                           334          
00001244  B83C 0007                335          CMP.B       #$7,    D4
00001248  6700 08AC                336          BEQ         OP_CODE_MOVEQ
0000124C  B83C 0008                337          CMP.B       #$8,    D4
00001250  6700 0982                338          BEQ         OP_CODE_OR      *may get confused with DIVU + any other opcodes that start with 1000 (ones that we are not required to cover)
00001254  B83C 000C                339          CMP.B       #$C,    D4
00001258  6700 08F6                340          BEQ         OP_CODE_AND
0000125C  4EB9 000016E8            341          JSR         OP_CODE_BCC
00001262  4EB9 00001562            342          JSR         OP_CODE_SHIFT_ROTATE
00001268  4EB9 000017AE            343          JSR         OP_CODE_ADDA
0000126E  4EB9 00001870            344          JSR         OP_CODE_ADDQ
00001274  4EB9 000014C0            345          JSR         OP_CODE_LEA
0000127A  4EB9 00001900            346          JSR         OP_CODE_ADD
00001280  4EB9 00001920            347          JSR         OP_CODE_SUB
00001286                           348          
00001286                           349  
00001286  4E75                     350          RTS
00001288                           351          
00001288                           352  ISOLATE_16:
00001288                           353  
00001288  4EB9 000016B4            354          JSR       OP_CODE_NOP
0000128E  4EB9 000016CE            355          JSR       OP_CODE_RTS
00001294  4E75                     356          RTS
00001296                           357  
00001296                           358  ISOLATE_15_6:
00001296                           359          
00001296  3803                     360          MOVE.W      D3,     D4
00001298  343C 0006                361          MOVE.W      #6,     D2
0000129C  E46C                     362          LSR.W       D2,     D4
0000129E                           363          
0000129E  B87C 013A                364          CMP.W       #$13A,  D4
000012A2  6700 09B4                365          BEQ         OP_CODE_JSR
000012A6                           366          
000012A6  4E75                     367          RTS
000012A8                           368  
000012A8                           369  ISOLATE_15_8:
000012A8  3803                     370          MOVE.W      D3,     D4
000012AA  343C 0008                371          MOVE.W      #8,     D2
000012AE  E46C                     372          LSR.W       D2,     D4
000012B0                           373          
000012B0  B83C 0046                374          CMP.B       #$46,   D4
000012B4  6700 0040                375          BEQ         OP_CODE_NOT
000012B8  4E75                     376          RTS
000012BA                           377          
000012BA                           378  ISOLATE_15_11:
000012BA  3803                     379          MOVE.W      D3,     D4
000012BC  343C 000B                380          MOVE.W      #11,    D2
000012C0  E46C                     381          LSR.W       D2,     D4
000012C2                           382          
000012C2  B83C 0009                383          CMP.B       #$9,    D4
000012C6  6700 00D0                384          BEQ         OP_CODE_MOVEM
000012CA                           385          
000012CA  4E75                     386          RTS
000012CC                           387          
000012CC                           388  ISOLATE_15_14:
000012CC  3803                     389          MOVE.W      D3,     D4
000012CE  343C 000E                390          MOVE.W      #14,    D2
000012D2  E46C                     391          LSR.W       D2,     D4
000012D4                           392          
000012D4  B83C 0000                393          CMP.B       #$0,    D4
000012D8  6700 0046                394          BEQ         OP_CODE_MOVE
000012DC                           395          
000012DC  4E75                     396          RTS
000012DE                           397          
000012DE                           398  ISOLATE_8_6:
000012DE  3803                     399          MOVE.W      D3,     D4
000012E0  343C 0007                400          MOVE.W      #7,     D2
000012E4  E56C                     401          LSL.W       D2,     D4
000012E6  343C 000D                402          MOVE.W      #13,    D2
000012EA  E46C                     403          LSR.W       D2,     D4
000012EC                           404          
000012EC  B83C 0001                405          CMP.B       #$1,    D4
000012F0  6700 006A                406          BEQ         OP_CODE_MOVEA
000012F4                           407  
000012F4  4E75                     408          RTS
000012F6                           409  
000012F6                           410  
000012F6                           411  
000012F6                           412  OP_CODE_NOT:
000012F6  43F9 00002BFB            413          LEA         NOT_MSG, A1
000012FC  103C 000E                414          MOVE.B      #14, D0
00001300  4E4F                     415          TRAP        #15
00001302                           416          
00001302  4EB9 00001D46            417          JSR         SIZE_7_6
00001308                           418          
00001308  43F9 00002C2E            419          LEA         WHITESPACE, A1
0000130E  103C 000E                420          MOVE.B      #14, D0
00001312  4E4F                     421          TRAP        #15
00001314                           422          
00001314  4EB9 00001DCA            423          JSR         EFFECTIVEADD_5_0
0000131A                           424          
0000131A  1C3C 0001                425          MOVE.B      #1,      D6
0000131E                           426          
0000131E  4E75                     427          RTS 
00001320                           428        
00001320                           429  OP_CODE_MOVE:
00001320                           430  
00001320  43F9 00002C03            431          LEA         MOVE_MSG, A1
00001326  103C 000E                432          MOVE.B      #14, D0
0000132A  4E4F                     433          TRAP        #15
0000132C                           434          
0000132C  4EB9 00001D1E            435          JSR         SIZE_13_12
00001332                           436          
00001332  43F9 00002C2E            437          LEA         WHITESPACE, A1
00001338  103C 000E                438          MOVE.B      #14, D0
0000133C  4E4F                     439          TRAP        #15
0000133E                           440          
0000133E  4EB9 00001DCA            441          JSR         EFFECTIVEADD_5_0
00001344                           442          
00001344  43F9 00002C30            443          LEA         WHITESPACE_COM, A1
0000134A  103C 000E                444          MOVE.B      #14, D0
0000134E  4E4F                     445          TRAP        #15
00001350                           446          
00001350  4EB9 00001E0A            447          JSR         DESTINATION_11_6
00001356                           448  
00001356  1C3C 0001                449          MOVE.B      #1,      D6
0000135A                           450  
0000135A  4E75                     451          RTS
0000135C                           452          
0000135C                           453  OP_CODE_MOVEA:
0000135C  43F9 00002C0E            454          LEA         MOVEA_MSG, A1
00001362  103C 000E                455          MOVE.B      #14, D0
00001366  4E4F                     456          TRAP        #15
00001368                           457          
00001368  4EB9 00001D1E            458          JSR         SIZE_13_12
0000136E                           459          
0000136E  43F9 00002C2E            460          LEA         WHITESPACE, A1
00001374  103C 000E                461          MOVE.B      #14, D0
00001378  4E4F                     462          TRAP        #15
0000137A                           463          
0000137A  4EB9 00001DCA            464          JSR         EFFECTIVEADD_5_0
00001380                           465          
00001380  43F9 00002C30            466          LEA         WHITESPACE_COM, A1
00001386  103C 000E                467          MOVE.B      #14, D0
0000138A  4E4F                     468          TRAP        #15
0000138C                           469          
0000138C  4EB9 00001E0A            470          JSR         DESTINATION_11_6
00001392                           471  
00001392  1C3C 0001                472          MOVE.B      #1,      D6
00001396                           473  
00001396  4E75                     474          RTS
00001398                           475  
00001398                           476  OP_CODE_MOVEM:
00001398  43F9 00002C08            477          LEA         MOVEM_MSG, A1
0000139E  103C 000E                478          MOVE.B      #14, D0
000013A2  4E4F                     479          TRAP        #15
000013A4                           480          
000013A4  4EB9 00001D6E            481          JSR         SIZE_6
000013AA                           482          
000013AA  3803                     483          MOVE.W      D3,     D4
000013AC                           484          
000013AC  343C 0005                485          MOVE.W      #5,     D2
000013B0  E56C                     486          LSL.W       D2,     D4
000013B2  343C 000F                487          MOVE.W      #15,    D2
000013B6  E46C                     488          LSR.W       D2,     D4
000013B8                           489          
000013B8  B83C 0000                490          CMP.B       #$0,    D4
000013BC  6700 000C                491          BEQ         REG_TO_MEM
000013C0  B83C 0001                492          CMP.B       #$1,    D4
000013C4  6700 0078                493          BEQ         MEM_TO_REG
000013C8                           494          
000013C8  4E75                     495          RTS
000013CA                           496  
000013CA                           497  REG_TO_MEM:
000013CA                           498  
000013CA  3803                     499          MOVE.W      D3,     D4
000013CC  43F9 00002C2E            500          LEA         WHITESPACE, A1
000013D2  103C 000E                501          MOVE.B      #14,    D0
000013D6  4E4F                     502          TRAP        #15
000013D8  343C 000A                503          MOVE.W      #10,    D2
000013DC  E56C                     504          LSL.W       D2,     D4
000013DE  343C 000D                505          MOVE.W      #13,    D2
000013E2  E46C                     506          LSR.W       D2,     D4
000013E4  2A4B                     507          MOVEA.L     A3,     A5
000013E6                           508  
000013E6  4280                     509          CLR.L       D0
000013E8  4281                     510          CLR.L       D1
000013EA  323C 00FF                511          MOVE.W      #$FF,   D1
000013EE  4286                     512          CLR.L       D6
000013F0  3C3C 00FF                513          MOVE.W      #$FF,   D6
000013F4  4280                     514          CLR.L       D0
000013F6  B83C 0004                515          CMP.B       #$4,    D4
000013FA  6700 0016                516          BEQ         RTM_1_B
000013FE                           517          
000013FE  103C 000F                518          MOVE.B      #$F,   D0
00001402  6000 0002                519          BRA         RTM_1_A
00001406                           520   
00001406                           521          
00001406                           522  
00001406                           523  RTM_1_A:
00001406  381D                     524          MOVE.W      (A5)+,   D4    
00001408  4EB9 0000208E            525          JSR         POST_INCR_MASK_FIELD
0000140E  6000 000E                526          BRA         RTM_2
00001412                           527  RTM_1_B: 
00001412  381D                     528          MOVE.W      (A5)+,   D4   
00001414  4EB9 00001F92            529          JSR         PRE_DECR_MASK_FIELD
0000141A  6000 0002                530          BRA         RTM_2
0000141E                           531  RTM_2:
0000141E                           532  
0000141E  43F9 00002C30            533          LEA         WHITESPACE_COM, A1
00001424  103C 000E                534          MOVE.B      #14,    D0
00001428  4E4F                     535          TRAP        #15
0000142A  554B                     536          SUB.W       #$2,     A3
0000142C  361B                     537          MOVE.W      (A3)+,   D3
0000142E                           538    
0000142E  544B                     539          ADD.W       #$2,     A3
00001430  4EB9 00001DCA            540          JSR         EFFECTIVEADD_5_0
00001436  4286                     541          CLR.L       D6
00001438                           542  
00001438  1C3C 0001                543          MOVE.B      #1,     D6
0000143C  4E75                     544          RTS
0000143E                           545      
0000143E                           546      
0000143E                           547  MEM_TO_REG:
0000143E                           548  
0000143E  3803                     549          MOVE.W      D3,     D4
00001440  43F9 00002C2E            550          LEA         WHITESPACE, A1
00001446  103C 000E                551          MOVE.B      #14, D0
0000144A  4E4F                     552          TRAP        #15
0000144C                           553          
0000144C  3A4B                     554          MOVEA.W     A3,     A5
0000144E  544B                     555          ADD.W       #$2,    A3
00001450                           556          
00001450  4EB9 00001DCA            557          JSR         EFFECTIVEADD_5_0
00001456  3C4B                     558          MOVEA.W     A3,     A6
00001458  364D                     559          MOVEA.W     A5,     A3
0000145A  3A4E                     560          MOVEA.W     A6,     A5
0000145C  2C7C 00000000            561          MOVE.L      #$00000000, A6
00001462                           562          
00001462  43F9 00002C30            563          LEA         WHITESPACE_COM, A1
00001468  103C 000E                564          MOVE.B      #14, D0
0000146C  4E4F                     565          TRAP        #15
0000146E                           566  
0000146E  3803                     567          MOVE.W      D3,     D4
00001470  343C 000A                568          MOVE.W      #10,    D2
00001474  E56C                     569          LSL.W       D2,     D4
00001476  343C 000D                570          MOVE.W      #13,    D2
0000147A  E46C                     571          LSR.W       D2,     D4
0000147C  4280                     572          CLR.L       D0
0000147E  4281                     573          CLR.L       D1
00001480  323C 00FF                574          MOVE.W      #$FF,   D1
00001484  4286                     575          CLR.L       D6
00001486  3C3C 00FF                576          MOVE.W      #$FF,   D6
0000148A                           577          
0000148A  4280                     578          CLR.L       D0
0000148C  B83C 0004                579          CMP.B       #$4,    D4
00001490  6700 001C                580          BEQ         MTR_1_B
00001494                           581          
00001494  103C 000F                582          MOVE.B      #$F,   D0
00001498                           583  
00001498  6000 0002                584          BRA         MTR_1_A
0000149C                           585          
0000149C                           586  
0000149C                           587  
0000149C                           588  MTR_1_A:
0000149C  381B                     589          MOVE.W      (A3)+,  D4   
0000149E  4EB9 0000208E            590          JSR         POST_INCR_MASK_FIELD
000014A4  4286                     591          CLR.L       D6
000014A6  1C3C 0001                592          MOVE.B      #1,     D6
000014AA  364D                     593          MOVEA.W     A5,     A3
000014AC  4E75                     594          RTS
000014AE                           595  MTR_1_B:
000014AE  381B                     596          MOVE.W      (A3)+,  D4    
000014B0  4EB9 00001F92            597          JSR         PRE_DECR_MASK_FIELD
000014B6  4286                     598          CLR.L       D6
000014B8  1C3C 0001                599          MOVE.B      #1,     D6
000014BC  364D                     600          MOVEA.W     A5,     A3
000014BE  4E75                     601          RTS
000014C0                           602  
000014C0                           603  
000014C0                           604  
000014C0                           605  
000014C0                           606  OP_CODE_LEA:
000014C0  48E7 0600                607          MOVEM.L    D5-D6, -(A7)
000014C4  7A0C                     608          MOVE.L     #12, D5
000014C6  7C0F                     609          MOVE.L     #15, D6
000014C8  4EB9 00001C7C            610          JSR        GET_BIT
000014CE  4CDF 0060                611          MOVEM.L    (A7)+, D5-D6
000014D2  B8BC 00000004            612          CMP.L      #%0100, D4
000014D8  6600 07B6                613          BNE        INSTRUCTION_DECODE_FAILURE
000014DC  48E7 0600                614          MOVEM.L    D5-D6, -(A7)
000014E0  7A06                     615          MOVE.L     #6, D5
000014E2  7C08                     616          MOVE.L     #8, D6
000014E4  4EB9 00001C7C            617          JSR        GET_BIT
000014EA  4CDF 0060                618          MOVEM.L    (A7)+, D5-D6
000014EE  B8BC 00000007            619          CMP.L      #7, D4
000014F4  6600 079A                620          BNE        INSTRUCTION_DECODE_FAILURE
000014F8  48E7 0600                621          MOVEM.L    D5-D6, -(A7)
000014FC  7A00                     622          MOVE.L     #0, D5
000014FE  7C05                     623          MOVE.L     #5, D6
00001500  4EB9 00001C7C            624          JSR        GET_BIT
00001506  4CDF 0060                625          MOVEM.L    (A7)+, D5-D6
0000150A  B8BC 00000039            626          CMP.L      #%111001, D4
00001510  6700 002E                627          BEQ        OP_CODE_LEA_PRINT
00001514  B8BC 00000038            628          CMP.L      #%111000, D4
0000151A  6700 0024                629          BEQ        OP_CODE_LEA_PRINT
0000151E  48E7 0600                630          MOVEM.L    D5-D6, -(A7)
00001522  7A03                     631          MOVE.L     #3, D5
00001524  7C05                     632          MOVE.L     #5, D6
00001526  4EB9 00001C7C            633          JSR        GET_BIT
0000152C  4CDF 0060                634          MOVEM.L    (A7)+, D5-D6
00001530  B8BC 00000002            635          CMP.L      #%010, D4
00001536  6700 0008                636          BEQ        OP_CODE_LEA_PRINT
0000153A  6000 0754                637          BRA        INSTRUCTION_DECODE_FAILURE
0000153E                           638          *Unreachable
0000153E  4E75                     639          RTS
00001540                           640  OP_CODE_LEA_PRINT
00001540  43F9 00002C4C            641          LEA         LEA_MSG, A1
00001546  103C 000E                642          MOVE.B      #14, D0
0000154A  4E4F                     643          TRAP        #15
0000154C  43F9 00002BD8            644          LEA         SPACE_MSG, A1
00001552  103C 000E                645          MOVE.B      #14, D0
00001556  4E4F                     646          TRAP        #15
00001558  4EB9 00002554            647          JSR         LEA_EA
0000155E  7C01                     648          MOVE.L      #1, D6
00001560  4E75                     649          RTS
00001562                           650  
00001562                           651  
00001562                           652  
00001562                           653  
00001562                           654  
00001562                           655  OP_CODE_SHIFT_ROTATE
00001562  48E7 0600                656          MOVEM.L    D5-D6, -(A7)
00001566  7A0C                     657          MOVE.L     #12, D5
00001568  7C0F                     658          MOVE.L     #15, D6
0000156A  4EB9 00001C7C            659          JSR        GET_BIT
00001570  4CDF 0060                660          MOVEM.L    (A7)+, D5-D6
00001574  B8BC 0000000E            661          CMP.L      #%1110, D4
0000157A  6600 0714                662          BNE        INSTRUCTION_DECODE_FAILURE
0000157E                           663          *Now check whether it is register shift or memory shift
0000157E                           664          *If the 6-7 bit is 11, then it is a memory else register shift
0000157E  48E7 0600                665          MOVEM.L    D5-D6, -(A7)
00001582  7A06                     666          MOVE.L     #6, D5
00001584  7C07                     667          MOVE.L     #7, D6
00001586  4EB9 00001C7C            668          JSR        GET_BIT
0000158C  4CDF 0060                669          MOVEM.L    (A7)+, D5-D6
00001590  B8BC 00000003            670          CMP.L      #3, D4
00001596  6700 0058                671          BEQ        OP_CODE_MEMORY_SHIFT_ROTATE
0000159A  6000 0002                672          BRA        OP_CODE_REGISTER_SHIFT_ROTATE
0000159E                           673  
0000159E                           674  
0000159E                           675  OP_CODE_REGISTER_SHIFT_ROTATE
0000159E                           676          *Messages are loaded in the order of -ASR, ASL, LSR, LSL, RORX, RORL, ROR, ROL where
0000159E                           677          *each message is of 4 bytes. Essentially using a combination of (9-11) bit + dr(8th bit) we
0000159E                           678          *can index the appropriate message. Mathy and unreadable code but prevents lot of rebudency
0000159E  43F9 00002C50            679          LEA        ASR_MSG, A1
000015A4  48E7 0600                680          MOVEM.L    D5-D6, -(A7)
000015A8  7A08                     681          MOVE.L     #8, D5
000015AA  7C08                     682          MOVE.L     #8, D6
000015AC  4EB9 00001C7C            683          JSR        GET_BIT
000015B2  4CDF 0060                684          MOVEM.L    (A7)+, D5-D6
000015B6  C8FC 0004                685          MULU         #4,            D4
000015BA  D3C4                     686          ADDA.L       D4,            A1
000015BC                           687          *Check (3, 11) bit 
000015BC                           688          *000->ASR/ASL, 001->LSR/LSL, 011->ROR/ROL
000015BC  48E7 0600                689          MOVEM.L    D5-D6, -(A7)
000015C0  7A03                     690          MOVE.L     #3, D5
000015C2  7C04                     691          MOVE.L     #4, D6
000015C4  4EB9 00001C7C            692          JSR        GET_BIT
000015CA  B8BC 00000002            693          CMP.L      #2, D4
000015D0  4CDF 0060                694          MOVEM.L    (A7)+, D5-D6
000015D4  C8FC 0008                695          MULU        #8,      D4
000015D8  D3C4                     696          ADDA.L       D4,            A1
000015DA  103C 000E                697          MOVE.B      #14, D0
000015DE  4E4F                     698          TRAP        #15
000015E0  4EB9 00002360            699          JSR         SHIFT_ROTATE_EA_SIZE
000015E6  4EB9 00002390            700          JSR         SHIFT_ROTATE_EA_REGISTER
000015EC  7C01                     701          MOVE.L      #1, D6
000015EE  4E75                     702          RTS
000015F0                           703  
000015F0                           704  
000015F0                           705  OP_CODE_MEMORY_SHIFT_ROTATE
000015F0                           706          *If mode bits are less than 010, then invalid instruction so just RTS
000015F0  48E7 0600                707          MOVEM.L    D5-D6, -(A7)
000015F4  7A03                     708          MOVE.L     #3, D5
000015F6  7C05                     709          MOVE.L     #5, D6
000015F8  4EB9 00001C7C            710          JSR        GET_BIT
000015FE  4CDF 0060                711          MOVEM.L    (A7)+, D5-D6
00001602  B8BC 00000002            712          CMP.L      #2, D4
00001608  6B00 0686                713          BMI        INSTRUCTION_DECODE_FAILURE
0000160C                           714          *If mode bits are 101 or 110, then it is dispacement address register EA which is invalid
0000160C                           715          *for the current scope
0000160C  B8BC 00000005            716          CMP.L      #5, D4
00001612  6700 067C                717          BEQ        INSTRUCTION_DECODE_FAILURE
00001616  B8BC 00000006            718          CMP.L      #6, D4
0000161C  6700 0672                719          BEQ        INSTRUCTION_DECODE_FAILURE
00001620                           720          *If mode bits+register bits are greater than 111001, then invalid instruction
00001620  48E7 0600                721          MOVEM.L    D5-D6, -(A7)
00001624  7A00                     722          MOVE.L     #0, D5
00001626  7C05                     723          MOVE.L     #5, D6
00001628  4EB9 00001C7C            724          JSR        GET_BIT
0000162E  4CDF 0060                725          MOVEM.L    (A7)+, D5-D6
00001632  B8BC 00000039            726          CMP.L      #%111001, D4
00001638  6E00 0656                727          BGT        INSTRUCTION_DECODE_FAILURE
0000163C  7A09                     728          MOVE.L     #9, D5
0000163E  7C0B                     729          MOVE.L     #11, D6
00001640  4EB9 00001C7C            730          JSR        GET_BIT
00001646  B8BC 00000002            731          CMP.L      #2, D4
0000164C  6700 0642                732          BEQ        INSTRUCTION_DECODE_FAILURE *If the 9-11 are 010(RORX, ROLX), instruction decode error.
00001650                           733          *Messages are loaded in the order of -ASR, ASL, LSR, LSL, RORX, RORL, ROR, ROL where
00001650                           734          *each message is of 4 bytes. Essentially using a combination of (9-11) bit + dr(8th bit) we
00001650                           735          *can index the appropriate message. Mathy and unreadable code but prevents lot of rebudency
00001650  43F9 00002C50            736          LEA        ASR_MSG, A1
00001656  48E7 0600                737          MOVEM.L    D5-D6, -(A7)
0000165A  7A08                     738          MOVE.L     #8, D5
0000165C  7C08                     739          MOVE.L     #8, D6
0000165E  4EB9 00001C7C            740          JSR        GET_BIT
00001664  4CDF 0060                741          MOVEM.L    (A7)+, D5-D6
00001668  C8FC 0004                742          MULU         #4,            D4
0000166C  D3C4                     743          ADDA.L       D4,            A1
0000166E                           744          *Check (9, 11) bit 
0000166E                           745          *000->ASR/ASL, 001->LSR/LSL, 011->ROR/ROL
0000166E  48E7 0600                746          MOVEM.L    D5-D6, -(A7)
00001672  7A09                     747          MOVE.L     #9, D5
00001674  7C0B                     748          MOVE.L     #11, D6
00001676  4EB9 00001C7C            749          JSR        GET_BIT
0000167C  B8BC 00000002            750          CMP.L      #2, D4
00001682  4CDF 0060                751          MOVEM.L    (A7)+, D5-D6
00001686  C8FC 0008                752          MULU        #8,      D4
0000168A  D3C4                     753          ADDA.L       D4,            A1
0000168C  103C 000E                754          MOVE.B      #14, D0
00001690  4E4F                     755          TRAP        #15
00001692  43F9 00002C89            756          LEA        WORD_MSG, A1
00001698  103C 000E                757          MOVE.B      #14, D0
0000169C  4E4F                     758          TRAP        #15
0000169E  43F9 00002BD8            759          LEA         SPACE_MSG,      A1
000016A4  103C 000E                760          MOVE.B      #14,            D0    
000016A8  4E4F                     761          TRAP        #15
000016AA  4EB9 00002474            762          JSR         SHIFT_ROTATE_EA_MEMORY
000016B0  7C01                     763          MOVE.L      #1, D6
000016B2  4E75                     764          RTS
000016B4                           765  
000016B4                           766  
000016B4                           767  
000016B4                           768  OP_CODE_NOP:
000016B4  B6BC 00004E71            769          CMP.L    #%0100111001110001, D3
000016BA  6600 05D4                770          BNE      INSTRUCTION_DECODE_FAILURE
000016BE  43F9 00002C2A            771          LEA      NOP_MSG, A1
000016C4  103C 000E                772          MOVE.B      #14, D0
000016C8  4E4F                     773          TRAP        #15 
000016CA  7C01                     774          MOVE.L      #1, D6
000016CC  4E75                     775          RTS 
000016CE                           776  
000016CE                           777  
000016CE                           778  
000016CE                           779  
000016CE                           780  OP_CODE_RTS:
000016CE  B6BC 00004E75            781          CMP.L    #%0100111001110101, D3
000016D4  6600 05BA                782          BNE      INSTRUCTION_DECODE_FAILURE
000016D8  43F9 00002C26            783          LEA      RTS_MSG, A1
000016DE  103C 000E                784          MOVE.B      #14, D0
000016E2  4E4F                     785          TRAP        #15 
000016E4  7C01                     786          MOVE.L      #1, D6
000016E6  4E75                     787          RTS 
000016E8                           788          
000016E8                           789  
000016E8                           790  
000016E8                           791  OP_CODE_BCC
000016E8  48E7 0600                792          MOVEM.L    D5-D6, -(A7)
000016EC  7A0C                     793          MOVE.L     #12, D5
000016EE  7C0F                     794          MOVE.L     #15, D6
000016F0  4EB9 00001C7C            795          JSR        GET_BIT
000016F6  4CDF 0060                796          MOVEM.L    (A7)+, D5-D6
000016FA  B8BC 00000006            797          CMP.L      #%0110, D4
00001700  6600 058E                798          BNE        INSTRUCTION_DECODE_FAILURE
00001704                           799          *Get bits from 8-11 to get the condition
00001704                           800          *Only checking for (BGT, BLE, BEQ). Rest are considered
00001704                           801          *invalid
00001704  48E7 0600                802          MOVEM.L    D5-D6, -(A7)
00001708  7A08                     803          MOVE.L     #8, D5
0000170A  7C0B                     804          MOVE.L     #11, D6
0000170C  4EB9 00001C7C            805          JSR        GET_BIT
00001712  4CDF 0060                806          MOVEM.L    (A7)+, D5-D6
00001716  B8BC 0000000F            807          CMP.L      #15, D4
0000171C  6700 001C                808          BEQ        OP_CODE_BLE
00001720  B8BC 0000000E            809          CMP.L      #14, D4
00001726  6700 0028                810          BEQ        OP_CODE_BGT
0000172A  B8BC 00000007            811          CMP.L      #7,  D4
00001730  6700 0034                812          BEQ        OP_CODE_BEQ
00001734  6000 055A                813          BRA        INSTRUCTION_DECODE_FAILURE
00001738  4E75                     814          RTS
0000173A                           815  
0000173A                           816  
0000173A                           817  OP_CODE_BLE
0000173A  43F9 00002C7A            818          LEA         BLE_MSG, A1
00001740  103C 000E                819          MOVE.B      #14, D0
00001744  4E4F                     820          TRAP        #15
00001746  4EB9 00002496            821          JSR         BR_EA_SIZE_AND_DISPLACEMENT
0000174C  7C01                     822          MOVE.L      #1, D6
0000174E  4E75                     823          RTS
00001750                           824  
00001750                           825  OP_CODE_BGT
00001750  43F9 00002C7E            826          LEA         BGT_MSG, A1
00001756  103C 000E                827          MOVE.B      #14, D0
0000175A  4E4F                     828          TRAP        #15
0000175C  4EB9 00002496            829          JSR         BR_EA_SIZE_AND_DISPLACEMENT
00001762  7C01                     830          MOVE.L      #1, D6
00001764  4E75                     831          RTS
00001766                           832  
00001766                           833  
00001766                           834  OP_CODE_BEQ
00001766  43F9 00002C82            835          LEA         BEQ_MSG, A1
0000176C  103C 000E                836          MOVE.B      #14, D0
00001770  4E4F                     837          TRAP        #15
00001772  4EB9 00002496            838          JSR         BR_EA_SIZE_AND_DISPLACEMENT
00001778  7C01                     839          MOVE.L      #1, D6
0000177A  4E75                     840          RTS
0000177C                           841  
0000177C                           842  
0000177C                           843  
0000177C                           844  
0000177C                           845  OP_CODE_BRA:
0000177C  48E7 0600                846          MOVEM.L    D5-D6, -(A7)
00001780  7A0C                     847          MOVE.L     #12, D5
00001782  7C0F                     848          MOVE.L     #15, D6
00001784  4EB9 00001C7C            849          JSR        GET_BIT
0000178A  4CDF 0060                850          MOVEM.L    (A7)+, D5-D6
0000178E  B8BC 00000006            851          CMP.L       #%0110, D4
00001794  6600 04FA                852          BNE         INSTRUCTION_DECODE_FAILURE
00001798  43F9 00002BFF            853          LEA         BRA_MSG, A1
0000179E  103C 000E                854          MOVE.B      #14, D0
000017A2  4E4F                     855          TRAP        #15
000017A4  4EB9 00002496            856          JSR         BR_EA_SIZE_AND_DISPLACEMENT
000017AA  7C01                     857          MOVE.L      #1, D6
000017AC  4E75                     858          RTS 
000017AE                           859          
000017AE                           860  
000017AE                           861  
000017AE                           862  
000017AE                           863  
000017AE                           864  
000017AE                           865  OP_CODE_ADDA
000017AE  48E7 0600                866          MOVEM.L    D5-D6, -(A7)
000017B2  7A0C                     867          MOVE.L     #12, D5
000017B4  7C0F                     868          MOVE.L     #15, D6
000017B6  4EB9 00001C7C            869          JSR        GET_BIT
000017BC  4CDF 0060                870          MOVEM.L    (A7)+, D5-D6
000017C0  B8BC 0000000D            871          CMP.L      #%1101, D4
000017C6  6600 04C8                872          BNE        INSTRUCTION_DECODE_FAILURE
000017CA  48E7 0600                873          MOVEM.L    D5-D6, -(A7)
000017CE  7A06                     874          MOVE.L     #6, D5
000017D0  7C08                     875          MOVE.L     #8, D6
000017D2  4EB9 00001C7C            876          JSR        GET_BIT
000017D8  4CDF 0060                877          MOVEM.L    (A7)+, D5-D6
000017DC  B8BC 00000002            878          CMP.L      #%010, D4
000017E2  6F00 04AC                879          BLE        INSTRUCTION_DECODE_FAILURE
000017E6  B8BC 00000004            880          CMP.L      #%100, D4
000017EC  6700 04A2                881          BEQ        INSTRUCTION_DECODE_FAILURE
000017F0  B8BC 00000005            882          CMP.L      #%101, D4
000017F6  6700 0498                883          BEQ        INSTRUCTION_DECODE_FAILURE
000017FA  B8BC 00000006            884          CMP.L      #%110, D4
00001800  6700 048E                885          BEQ        INSTRUCTION_DECODE_FAILURE
00001804  48E7 0600                886          MOVEM.L    D5-D6, -(A7)
00001808  7A00                     887          MOVE.L     #0, D5
0000180A  7C05                     888          MOVE.L     #5, D6
0000180C  4EB9 00001C7C            889          JSR        GET_BIT
00001812  4CDF 0060                890          MOVEM.L    (A7)+, D5-D6
00001816  B8BC 0000003A            891          CMP.L      #%111010, D4
0000181C  6700 0472                892          BEQ        INSTRUCTION_DECODE_FAILURE
00001820  B8BC 0000003B            893          CMP.L      #%111011, D4
00001826  6700 0468                894          BEQ        INSTRUCTION_DECODE_FAILURE
0000182A  B8BC 0000003C            895          CMP.L      #%111100, D4
00001830  6E00 045E                896          BGT        INSTRUCTION_DECODE_FAILURE
00001834  48E7 0600                897          MOVEM.L    D5-D6, -(A7)
00001838  7A03                     898          MOVE.L     #3, D5
0000183A  7C05                     899          MOVE.L     #5, D6
0000183C  4EB9 00001C7C            900          JSR        GET_BIT
00001842  4CDF 0060                901          MOVEM.L    (A7)+, D5-D6
00001846  B8BC 00000005            902          CMP.L      #%101, D4
0000184C  6700 0442                903          BEQ        INSTRUCTION_DECODE_FAILURE
00001850  B8BC 00000006            904          CMP.L      #%110, D4
00001856  6700 0438                905          BEQ        INSTRUCTION_DECODE_FAILURE
0000185A  43F9 00002C14            906          LEA        ADDA_MSG, A1
00001860  103C 000E                907          MOVE.B      #14, D0
00001864  4E4F                     908          TRAP        #15
00001866  4EB9 000025B0            909          JSR        ADDA_EA_SIZE_AND_EA  
0000186C  7C01                     910          MOVE.L      #1, D6
0000186E  4E75                     911          RTS
00001870                           912  
00001870                           913  
00001870                           914  
00001870                           915  
00001870                           916  OP_CODE_ADDQ
00001870  48E7 0600                917          MOVEM.L    D5-D6, -(A7)
00001874  7A0C                     918          MOVE.L     #12, D5
00001876  7C0F                     919          MOVE.L     #15, D6
00001878  4EB9 00001C7C            920          JSR        GET_BIT
0000187E  4CDF 0060                921          MOVEM.L    (A7)+, D5-D6
00001882  B8BC 00000005            922          CMP.L      #%0101, D4
00001888  6600 0406                923          BNE        INSTRUCTION_DECODE_FAILURE
0000188C  48E7 0600                924          MOVEM.L    D5-D6, -(A7)
00001890  7A06                     925          MOVE.L     #6, D5
00001892  7C07                     926          MOVE.L     #7, D6
00001894  4EB9 00001C7C            927          JSR        GET_BIT
0000189A  4CDF 0060                928          MOVEM.L    (A7)+, D5-D6
0000189E  B8BC 00000003            929          CMP.L      #%11, D4
000018A4  6700 03EA                930          BEQ        INSTRUCTION_DECODE_FAILURE
000018A8  48E7 0600                931          MOVEM.L    D5-D6, -(A7)
000018AC  7A00                     932          MOVE.L     #0, D5
000018AE  7C05                     933          MOVE.L     #5, D6
000018B0  4EB9 00001C7C            934          JSR        GET_BIT
000018B6  4CDF 0060                935          MOVEM.L    (A7)+, D5-D6
000018BA  B8BC 00000039            936          CMP.L      #%111001, D4
000018C0  6E00 03CE                937          BGT        INSTRUCTION_DECODE_FAILURE
000018C4  48E7 0600                938          MOVEM.L    D5-D6, -(A7)
000018C8  7A03                     939          MOVE.L     #3, D5
000018CA  7C05                     940          MOVE.L     #5, D6
000018CC  4EB9 00001C7C            941          JSR        GET_BIT
000018D2  4CDF 0060                942          MOVEM.L    (A7)+, D5-D6
000018D6  B8BC 00000005            943          CMP.L      #%101, D4
000018DC  6700 03B2                944          BEQ        INSTRUCTION_DECODE_FAILURE
000018E0  B8BC 00000006            945          CMP.L      #%110, D4
000018E6  6700 03A8                946          BEQ        INSTRUCTION_DECODE_FAILURE
000018EA  43F9 00002C19            947          LEA        ADDQ_MSG, A1
000018F0  103C 000E                948          MOVE.B      #14, D0
000018F4  4E4F                     949          TRAP        #15
000018F6  4EB9 000026AA            950          JSR        ADDQ_EA_SIZE_AND_EA
000018FC  7C01                     951          MOVE.L      #1, D6
000018FE  4E75                     952          RTS
00001900                           953  
00001900                           954  
00001900                           955  
00001900                           956  OP_CODE_ADD
00001900  48E7 0600                957          MOVEM.L    D5-D6, -(A7)
00001904  7A0C                     958          MOVE.L     #12, D5
00001906  7C0F                     959          MOVE.L     #15, D6
00001908  4EB9 00001C7C            960          JSR        GET_BIT
0000190E  4CDF 0060                961          MOVEM.L    (A7)+, D5-D6
00001912  B8BC 0000000D            962          CMP.L      #%1101, D4
00001918  6600 0376                963          BNE        INSTRUCTION_DECODE_FAILURE
0000191C  6000 0022                964          BRA        OP_CODE_ADD_SUB
00001920                           965  
00001920                           966  OP_CODE_SUB  
00001920  48E7 0600                967          MOVEM.L    D5-D6, -(A7)
00001924  7A0C                     968          MOVE.L     #12, D5
00001926  7C0F                     969          MOVE.L     #15, D6
00001928  4EB9 00001C7C            970          JSR        GET_BIT
0000192E  4CDF 0060                971          MOVEM.L    (A7)+, D5-D6 
00001932  B8BC 00000009            972          CMP.L       #%1001, D4
00001938  6600 0356                973          BNE        INSTRUCTION_DECODE_FAILURE
0000193C  6000 0002                974          BRA     OP_CODE_ADD_SUB
00001940                           975  
00001940                           976  OP_CODE_ADD_SUB
00001940  48E7 0600                977          MOVEM.L    D5-D6, -(A7)
00001944  7A06                     978          MOVE.L     #6, D5
00001946  7C08                     979          MOVE.L     #8, D6
00001948  4EB9 00001C7C            980          JSR        GET_BIT
0000194E  4CDF 0060                981          MOVEM.L    (A7)+, D5-D6
00001952  B8BC 00000002            982          CMP.L      #%010, D4
00001958  6E00 0006                983          BGT        OP_CODE_ADD_SUB_SOURCE_REG
0000195C  6000 00D2                984          BRA        OP_CODE_ADD_SUB_DEST_REG
00001960                           985  
00001960                           986  
00001960                           987  OP_CODE_ADD_SUB_SOURCE_REG      
00001960  48E7 0600                988          MOVEM.L    D5-D6, -(A7)
00001964  7A00                     989          MOVE.L     #0, D5
00001966  7C05                     990          MOVE.L     #5, D6
00001968  4EB9 00001C7C            991          JSR        GET_BIT
0000196E  4CDF 0060                992          MOVEM.L    (A7)+, D5-D6
00001972  B8BC 00000039            993          CMP.L      #%111001, D4
00001978  6E00 0316                994          BGT        INSTRUCTION_DECODE_FAILURE
0000197C  48E7 0600                995          MOVEM.L    D5-D6, -(A7)
00001980  7A03                     996          MOVE.L     #3, D5
00001982  7C05                     997          MOVE.L     #5, D6
00001984  4EB9 00001C7C            998          JSR        GET_BIT
0000198A  4CDF 0060                999          MOVEM.L    (A7)+, D5-D6
0000198E  B8BC 00000005           1000          CMP.L      #%101, D4
00001994  6700 02FA               1001          BEQ        INSTRUCTION_DECODE_FAILURE
00001998  B8BC 00000006           1002          CMP.L      #%110, D4
0000199E  6700 02F0               1003          BEQ        INSTRUCTION_DECODE_FAILURE
000019A2  B8BC 00000000           1004          CMP.L      #%000, D4
000019A8  6700 02E6               1005          BEQ        INSTRUCTION_DECODE_FAILURE
000019AC  B8BC 00000001           1006          CMP.L      #%001, D4
000019B2  6700 02DC               1007          BEQ        INSTRUCTION_DECODE_FAILURE
000019B6  48E7 0600               1008          MOVEM.L    D5-D6, -(A7)
000019BA  7A06                    1009          MOVE.L     #6, D5
000019BC  7C08                    1010          MOVE.L     #8, D6
000019BE  4EB9 00001C7C           1011          JSR        GET_BIT
000019C4  4CDF 0060               1012          MOVEM.L    (A7)+, D5-D6
000019C8  B8BC 00000007           1013          CMP.L      #%111, D4
000019CE  6700 02C0               1014          BEQ        INSTRUCTION_DECODE_FAILURE
000019D2  B8BC 00000003           1015          CMP.L      #%011, D4
000019D8  6700 02B6               1016          BEQ        INSTRUCTION_DECODE_FAILURE
000019DC  43F9 00002C1E           1017          LEA        SUB_MSG, A1
000019E2  48E7 0600               1018          MOVEM.L    D5-D6, -(A7)
000019E6  7A0C                    1019          MOVE.L     #12, D5
000019E8  7C0F                    1020          MOVE.L     #15, D6
000019EA  4EB9 00001C7C           1021          JSR        GET_BIT
000019F0  4CDF 0060               1022          MOVEM.L    (A7)+, D5-D6
000019F4  0484 00000009           1023          SUBI.L      #%1001, D4
000019FA  D3C4                    1024          ADDA.L     D4, A1
000019FC  103C 000E               1025          MOVE.B      #14, D0
00001A00  4E4F                    1026          TRAP        #15
00001A02  4EB9 00002784           1027          JSR        ADD_SUB_EA_SIZE
00001A08                          1028  
00001A08  43F9 00002BD8           1029          LEA         SPACE_MSG,   A1
00001A0E  103C 000E               1030          MOVE.B      #14,   D0    
00001A12  4E4F                    1031          TRAP        #15
00001A14                          1032  
00001A14  4EB9 000027AE           1033          JSR        ADD_SUB_EA_REG
00001A1A                          1034  
00001A1A  43F9 00002C8F           1035          LEA         COMMA_MSG,   A1
00001A20  103C 000E               1036          MOVE.B      #14,   D0    
00001A24  4E4F                    1037          TRAP        #15
00001A26  4EB9 000027DE           1038          JSR        ADD_SUB_EA_EA
00001A2C  7C01                    1039          MOVE.L      #1, D6
00001A2E  4E75                    1040          RTS
00001A30                          1041  
00001A30                          1042  
00001A30                          1043  OP_CODE_ADD_SUB_DEST_REG
00001A30  48E7 0600               1044          MOVEM.L    D5-D6, -(A7)
00001A34  7A00                    1045          MOVE.L     #0, D5
00001A36  7C05                    1046          MOVE.L     #5, D6
00001A38  4EB9 00001C7C           1047          JSR        GET_BIT
00001A3E  4CDF 0060               1048          MOVEM.L    (A7)+, D5-D6
00001A42  B8BC 0000003A           1049          CMP.L      #%111010, D4
00001A48  6700 0246               1050          BEQ        INSTRUCTION_DECODE_FAILURE
00001A4C  B8BC 0000003B           1051          CMP.L      #%111011, D4
00001A52  6700 023C               1052          BEQ        INSTRUCTION_DECODE_FAILURE
00001A56  48E7 0600               1053          MOVEM.L    D5-D6, -(A7)
00001A5A  7A03                    1054          MOVE.L     #3, D5
00001A5C  7C05                    1055          MOVE.L     #5, D6
00001A5E  4EB9 00001C7C           1056          JSR        GET_BIT
00001A64  4CDF 0060               1057          MOVEM.L    (A7)+, D5-D6
00001A68  B8BC 00000005           1058          CMP.L      #%101, D4
00001A6E  6700 0220               1059          BEQ        INSTRUCTION_DECODE_FAILURE
00001A72  B8BC 00000006           1060          CMP.L      #%110, D4
00001A78  6700 0216               1061          BEQ        INSTRUCTION_DECODE_FAILURE
00001A7C  48E7 0600               1062          MOVEM.L    D5-D6, -(A7)
00001A80  7A06                    1063          MOVE.L     #6, D5
00001A82  7C08                    1064          MOVE.L     #8, D6
00001A84  4EB9 00001C7C           1065          JSR        GET_BIT
00001A8A  4CDF 0060               1066          MOVEM.L    (A7)+, D5-D6
00001A8E  B8BC 00000007           1067          CMP.L      #%111, D4
00001A94  6700 01FA               1068          BEQ        INSTRUCTION_DECODE_FAILURE
00001A98  B8BC 00000003           1069          CMP.L      #%011, D4
00001A9E  6700 01F0               1070          BEQ        INSTRUCTION_DECODE_FAILURE
00001AA2  43F9 00002C1E           1071          LEA        SUB_MSG, A1
00001AA8  48E7 0600               1072          MOVEM.L    D5-D6, -(A7)
00001AAC  7A0C                    1073          MOVE.L     #12, D5
00001AAE  7C0F                    1074          MOVE.L     #15, D6
00001AB0  4EB9 00001C7C           1075          JSR        GET_BIT
00001AB6  4CDF 0060               1076          MOVEM.L    (A7)+, D5-D6
00001ABA  0484 00000009           1077          SUBI.L      #%1001, D4
00001AC0  D3C4                    1078          ADDA.L     D4, A1
00001AC2  103C 000E               1079          MOVE.B      #14, D0
00001AC6  4E4F                    1080          TRAP        #15
00001AC8  4EB9 00002784           1081          JSR        ADD_SUB_EA_SIZE
00001ACE                          1082  
00001ACE  43F9 00002BD8           1083          LEA         SPACE_MSG,   A1
00001AD4  103C 000E               1084          MOVE.B      #14,   D0    
00001AD8  4E4F                    1085          TRAP        #15
00001ADA                          1086          
00001ADA  4EB9 000027DE           1087          JSR        ADD_SUB_EA_EA
00001AE0                          1088  
00001AE0  43F9 00002C8F           1089          LEA         COMMA_MSG,   A1
00001AE6  103C 000E               1090          MOVE.B      #14,   D0    
00001AEA  4E4F                    1091          TRAP        #15
00001AEC  4EB9 000027AE           1092          JSR        ADD_SUB_EA_REG
00001AF2  7C01                    1093          MOVE.L      #1, D6
00001AF4  4E75                    1094          RTS
00001AF6                          1095  
00001AF6                          1096  
00001AF6                          1097  
00001AF6                          1098  
00001AF6                          1099  OP_CODE_MOVEQ:
00001AF6                          1100          *NOTE MOVEQ has static bit at index 8
00001AF6  43F9 00002C42           1101          LEA         MOVEQ_MSG, A1
00001AFC  103C 000E               1102          MOVE.B      #14, D0
00001B00  4E4F                    1103          TRAP        #15
00001B02                          1104          
00001B02  43F9 00002C2E           1105          LEA         WHITESPACE, A1
00001B08  103C 000E               1106          MOVE.B      #14, D0
00001B0C  4E4F                    1107          TRAP        #15
00001B0E                          1108          
00001B0E  43F9 00002C93           1109          LEA         HASH_MSG, A1
00001B14  103C 000E               1110          MOVE.B      #14, D0
00001B18  4E4F                    1111          TRAP        #15
00001B1A                          1112  
00001B1A  43F9 00002C91           1113          LEA         DOLLAR_MSG, A1
00001B20  103C 000E               1114          MOVE.B      #14, D0
00001B24  4E4F                    1115          TRAP        #15
00001B26                          1116         
00001B26  4EB9 0000234A           1117          JSR         DATA_7_0
00001B2C                          1118          
00001B2C  43F9 00002C30           1119          LEA         WHITESPACE_COM, A1
00001B32  103C 000E               1120          MOVE.B      #14, D0
00001B36  4E4F                    1121          TRAP        #15
00001B38                          1122          
00001B38  43F9 00002C33           1123          LEA         DATA_REG, A1
00001B3E  103C 000E               1124          MOVE.B      #14, D0
00001B42  4E4F                    1125          TRAP        #15
00001B44                          1126          
00001B44  4EB9 00001CC0           1127          JSR         REGISTER_11_9
00001B4A                          1128          
00001B4A  1C3C 0001               1129          MOVE.B      #1,      D6
00001B4E                          1130          
00001B4E  4E75                    1131          RTS
00001B50                          1132          
00001B50                          1133  OP_CODE_AND:
00001B50  43F9 00002C48           1134          LEA         AND_MSG, A1
00001B56  103C 000E               1135          MOVE.B      #14, D0
00001B5A  4E4F                    1136          TRAP        #15
00001B5C                          1137          
00001B5C                          1138          *check opmode
00001B5C                          1139          *if starts with 1 do Dn ^ <ea> -> <ea>
00001B5C                          1140          *OPMODE_8_6 will appent size next to opcode
00001B5C  4EB9 00001CD8           1141          JSR         OPMODE_8_6
00001B62  E35C                    1142          ROL.W       #1, D4
00001B64  6500 0038               1143          BCS         OP_CODE_AND2
00001B68                          1144          *else...
00001B68                          1145          
00001B68  43F9 00002C2E           1146          LEA         WHITESPACE, A1
00001B6E  103C 000E               1147          MOVE.B      #14, D0
00001B72  4E4F                    1148          TRAP        #15
00001B74                          1149          
00001B74                          1150          *check ea and print
00001B74  4EB9 00001DCA           1151          JSR         EFFECTIVEADD_5_0
00001B7A                          1152          
00001B7A  43F9 00002C30           1153          LEA         WHITESPACE_COM, A1
00001B80  103C 000E               1154          MOVE.B      #14, D0
00001B84  4E4F                    1155          TRAP        #15
00001B86                          1156          
00001B86                          1157          *print out data reg
00001B86                          1158          
00001B86  43F9 00002C33           1159          LEA         DATA_REG, A1
00001B8C  103C 000E               1160          MOVE.B      #14, D0
00001B90  4E4F                    1161          TRAP        #15
00001B92                          1162          
00001B92  4EB9 00001CC0           1163          JSR         REGISTER_11_9
00001B98                          1164          
00001B98                          1165          
00001B98  1C3C 0001               1166          MOVE.B      #1,      D6
00001B9C                          1167          
00001B9C  4E75                    1168          RTS
00001B9E                          1169  
00001B9E                          1170  OP_CODE_AND2:
00001B9E  43F9 00002C2E           1171          LEA         WHITESPACE, A1
00001BA4  103C 000E               1172          MOVE.B      #14, D0
00001BA8  4E4F                    1173          TRAP        #15
00001BAA                          1174          
00001BAA  43F9 00002C33           1175          LEA         DATA_REG, A1
00001BB0  103C 000E               1176          MOVE.B      #14, D0
00001BB4  4E4F                    1177          TRAP        #15
00001BB6                          1178          
00001BB6  4EB9 00001CC0           1179          JSR         REGISTER_11_9
00001BBC                          1180          
00001BBC  43F9 00002C30           1181          LEA         WHITESPACE_COM, A1
00001BC2  103C 000E               1182          MOVE.B      #14, D0
00001BC6  4E4F                    1183          TRAP        #15
00001BC8                          1184          
00001BC8  4EB9 00001DCA           1185          JSR         EFFECTIVEADD_5_0
00001BCE                          1186          
00001BCE  1C3C 0001               1187          MOVE.B      #1,      D6
00001BD2                          1188          
00001BD2  4E75                    1189          RTS
00001BD4                          1190  OP_CODE_OR:
00001BD4  43F9 00002C70           1191          LEA         OR_MSG, A1
00001BDA  103C 000E               1192          MOVE.B      #14, D0
00001BDE  4E4F                    1193          TRAP        #15
00001BE0                          1194          
00001BE0  4EB9 00001CD8           1195          JSR         OPMODE_8_6
00001BE6  E35C                    1196          ROL.W       #1, D4
00001BE8  6500 0038               1197          BCS         OP_CODE_OR2
00001BEC                          1198          
00001BEC  43F9 00002C2E           1199          LEA         WHITESPACE, A1
00001BF2  103C 000E               1200          MOVE.B      #14, D0
00001BF6  4E4F                    1201          TRAP        #15
00001BF8                          1202          
00001BF8  4EB9 00001DCA           1203          JSR         EFFECTIVEADD_5_0
00001BFE                          1204          
00001BFE  43F9 00002C30           1205          LEA         WHITESPACE_COM, A1
00001C04  103C 000E               1206          MOVE.B      #14, D0
00001C08  4E4F                    1207          TRAP        #15
00001C0A                          1208          
00001C0A  43F9 00002C33           1209          LEA         DATA_REG, A1
00001C10  103C 000E               1210          MOVE.B      #14, D0
00001C14  4E4F                    1211          TRAP        #15
00001C16                          1212          
00001C16  4EB9 00001CC0           1213          JSR         REGISTER_11_9
00001C1C                          1214              
00001C1C  1C3C 0001               1215          MOVE.B      #1,      D6
00001C20                          1216          
00001C20  4E75                    1217          RTS
00001C22                          1218          
00001C22                          1219  OP_CODE_OR2:
00001C22  43F9 00002C2E           1220          LEA         WHITESPACE, A1
00001C28  103C 000E               1221          MOVE.B      #14, D0
00001C2C  4E4F                    1222          TRAP        #15
00001C2E                          1223          
00001C2E  43F9 00002C33           1224          LEA         DATA_REG, A1
00001C34  103C 000E               1225          MOVE.B      #14, D0
00001C38  4E4F                    1226          TRAP        #15
00001C3A                          1227          
00001C3A  4EB9 00001CC0           1228          JSR         REGISTER_11_9
00001C40                          1229          
00001C40  43F9 00002C30           1230          LEA         WHITESPACE_COM, A1
00001C46  103C 000E               1231          MOVE.B      #14, D0
00001C4A  4E4F                    1232          TRAP        #15
00001C4C                          1233          
00001C4C  4EB9 00001DCA           1234          JSR         EFFECTIVEADD_5_0
00001C52                          1235          
00001C52  1C3C 0001               1236          MOVE.B      #1,      D6
00001C56                          1237          
00001C56  4E75                    1238          RTS
00001C58                          1239          
00001C58                          1240  OP_CODE_JSR:
00001C58  43F9 00002C3E           1241          LEA         JSR_MSG, A1
00001C5E  103C 000E               1242          MOVE.B      #14, D0
00001C62  4E4F                    1243          TRAP        #15
00001C64                          1244          
00001C64  43F9 00002C2E           1245          LEA         WHITESPACE, A1
00001C6A  103C 000E               1246          MOVE.B      #14, D0
00001C6E  4E4F                    1247          TRAP        #15
00001C70                          1248          
00001C70  4EB9 00001DCA           1249          JSR         EFFECTIVEADD_5_0
00001C76                          1250          
00001C76  1C3C 0001               1251          MOVE.B      #1,      D6
00001C7A                          1252          
00001C7A  4E75                    1253          RTS
00001C7C                          1254  
00001C7C                          1255  
00001C7C                          1256  
00001C7C                          1257  GET_BIT
00001C7C  4284                    1258          CLR.L   D4
00001C7E  3803                    1259          MOVE.W  D3, D4   
00001C80                          1260          *Shift it to left by 15-y to get rid of all the bits to the left of yth bit 
00001C80                          1261          *and then shift the bits such that the xth bit is the 0th bit
00001C80  4486                    1262          NEG.L   D6
00001C82  0686 0000000F           1263          ADDI.L  #15, D6
00001C88  DA86                    1264          ADD.L   D6, D5
00001C8A  ED6C                    1265          LSL.W   D6, D4
00001C8C  EA6C                    1266          LSR.W   D5, D4
00001C8E  4E75                    1267          RTS
00001C90                          1268  
00001C90                          1269  INSTRUCTION_DECODE_FAILURE
00001C90  4E75                    1270          RTS
00001C92                          1271          
00001C92                          1272  
00001C92                          1273  TOTAL_DECODE_FAILURE
00001C92  3803                    1274          MOVE.W  D3, D4
00001C94  43F9 00002C73           1275          LEA DATA_MSG, A1
00001C9A  103C 000E               1276          MOVE.B      #14, D0
00001C9E  4E4F                    1277          TRAP        #15
00001CA0  43F9 00002BD8           1278          LEA SPACE_MSG, A1
00001CA6  103C 000E               1279          MOVE.B      #14, D0
00001CAA  4E4F                    1280          TRAP        #15
00001CAC  43F9 00002C91           1281          LEA DOLLAR_MSG, A1
00001CB2  103C 000E               1282          MOVE.B      #14, D0
00001CB6  4E4F                    1283          TRAP        #15
00001CB8  4EB9 00002A30           1284          JSR PRINT_WORD_VALUE
00001CBE  4E75                    1285          RTS
00001CC0                          1286          
00001CC0                          1287  
00001CC0                          1288  
00001CC0                          1289  
00001CC0                          1290  
00001CC0                          1291  
00001CC0                          1292  
00001CC0                          1293  
00001CC0                          1294  
00001CC0                          1295  
00001CC0                          1296  
00001CC0                          1297  
00001CC0                          1298  -------------------- end include --------------------
00001CC0                          1299      INCLUDE         'Disassembler_EA.x68'
00001CC0                          1300  
00001CC0                          1301  
00001CC0                          1302  REGISTER_11_9:
00001CC0                          1303          *make a copy
00001CC0  3803                    1304          MOVE.W      D3,     D4
00001CC2                          1305          
00001CC2                          1306          *isolate bits 11-9 on the right
00001CC2  343C 0004               1307          MOVE.W      #4,     D2
00001CC6  E56C                    1308          LSL.W       D2,     D4
00001CC8  343C 000D               1309          MOVE.W      #13,    D2
00001CCC  E46C                    1310          LSR.W       D2,     D4
00001CCE                          1311          
00001CCE                          1312          *print out the register number
00001CCE  2204                    1313          MOVE.L      D4,     D1
00001CD0  103C 0003               1314          MOVE.B      #3,     D0
00001CD4  4E4F                    1315          TRAP        #15
00001CD6                          1316          
00001CD6  4E75                    1317          RTS
00001CD8                          1318  OPMODE_8_6:
00001CD8                          1319          *append size to opcode
00001CD8  3803                    1320          MOVE.W      D3,     D4
00001CDA                          1321          
00001CDA  343C 0007               1322          MOVE.W      #7,     D2
00001CDE  E56C                    1323          LSL.W       D2,     D4
00001CE0  343C 000D               1324          MOVE.W      #13,    D2
00001CE4  E46C                    1325          LSR.W       D2,     D4
00001CE6                          1326          
00001CE6  B83C 0000               1327          CMP.B       #$0,    D4
00001CEA  6700 00A2               1328          BEQ         BYTE_SIZE
00001CEE                          1329          
00001CEE  B83C 0004               1330          CMP.B       #$4,    D4
00001CF2  6700 009A               1331          BEQ         BYTE_SIZE
00001CF6                          1332          
00001CF6  B83C 0001               1333          CMP.B       #$1,    D4
00001CFA  6700 00A6               1334          BEQ         WORD_SIZE
00001CFE                          1335          
00001CFE  B83C 0005               1336          CMP.B       #$5,    D4
00001D02  6700 009E               1337          BEQ         WORD_SIZE
00001D06                          1338          
00001D06  B83C 0002               1339          CMP.B       #$2,    D4
00001D0A  6700 00AA               1340          BEQ         LONG_SIZE
00001D0E                          1341          
00001D0E  B83C 0006               1342          CMP.B       #$6,    D4
00001D12  6700 00A2               1343          BEQ         LONG_SIZE
00001D16                          1344             
00001D16                          1345          *isolates bits 8-6 to D4 on the left side, so rotation can be done in higher level to corresponding output for opmode
00001D16                          1346  PREP_FOR_ROT:
00001D16                          1347          *MOVE.W      D3,     D4
00001D16                          1348          
00001D16  343C 000D               1349          MOVE.W      #13,     D2
00001D1A  E56C                    1350          LSL.W       D2,     D4
00001D1C                          1351          *MOVE.W      #13,    D2
00001D1C                          1352          *LSR.W       D2,     D4
00001D1C                          1353          
00001D1C  4E75                    1354          RTS
00001D1E                          1355  
00001D1E                          1356  SIZE_13_12:
00001D1E  3803                    1357          MOVE.W      D3,     D4
00001D20                          1358          
00001D20  343C 0002               1359          MOVE.W      #2,     D2
00001D24  E56C                    1360          LSL.W       D2,     D4
00001D26  343C 000E               1361          MOVE.W      #14,    D2
00001D2A  E46C                    1362          LSR.W       D2,     D4
00001D2C                          1363          
00001D2C  B83C 0001               1364          CMP.B       #$1,    D4
00001D30  6700 005C               1365          BEQ         BYTE_SIZE
00001D34                          1366          
00001D34  B83C 0003               1367          CMP.B       #$3,    D4
00001D38  6700 0068               1368          BEQ         WORD_SIZE
00001D3C                          1369          
00001D3C  B83C 0002               1370          CMP.B       #$2,    D4
00001D40  6700 0074               1371          BEQ         LONG_SIZE
00001D44                          1372          
00001D44  4E75                    1373          RTS
00001D46                          1374          
00001D46                          1375  SIZE_7_6:
00001D46  3803                    1376          MOVE.W      D3,     D4
00001D48                          1377          
00001D48  343C 0008               1378          MOVE.W      #8,     D2
00001D4C  E56C                    1379          LSL.W       D2,     D4
00001D4E  343C 000E               1380          MOVE.W      #14,    D2
00001D52  E46C                    1381          LSR.W       D2,     D4
00001D54                          1382          
00001D54  B83C 0000               1383          CMP.B       #$0,    D4
00001D58  6700 0034               1384          BEQ         BYTE_SIZE
00001D5C                          1385          
00001D5C  B83C 0001               1386          CMP.B       #$1,    D4
00001D60  6700 0040               1387          BEQ         WORD_SIZE
00001D64                          1388          
00001D64  B83C 0002               1389          CMP.B       #$2,    D4
00001D68  6700 004C               1390          BEQ         LONG_SIZE
00001D6C                          1391          
00001D6C  4E75                    1392          RTS
00001D6E                          1393  
00001D6E                          1394  SIZE_6:
00001D6E  3803                    1395          MOVE.W      D3,     D4
00001D70                          1396          
00001D70  343C 0009               1397          MOVE.W      #9,     D2
00001D74  E56C                    1398          LSL.W       D2,     D4
00001D76  343C 000F               1399          MOVE.W      #15,    D2
00001D7A  E46C                    1400          LSR.W       D2,     D4
00001D7C                          1401  
00001D7C                          1402          
00001D7C  B83C 0000               1403          CMP.B       #$0,    D4
00001D80  6700 0020               1404          BEQ         WORD_SIZE
00001D84                          1405          
00001D84  B83C 0001               1406          CMP.B       #$1,    D4
00001D88  6700 002C               1407          BEQ         LONG_SIZE
00001D8C                          1408          
00001D8C  4E75                    1409          RTS
00001D8E                          1410          
00001D8E                          1411  BYTE_SIZE:
00001D8E  43F9 00002C86           1412          LEA         BYTE_MSG, A1
00001D94  103C 000E               1413          MOVE.B      #14, D0
00001D98  4E4F                    1414          TRAP        #15
00001D9A                          1415  
00001D9A  1C3C 0000               1416          MOVE.B      #$0,      D6
00001D9E                          1417  
00001D9E  6000 FF76               1418          BRA         PREP_FOR_ROT
00001DA2                          1419  WORD_SIZE:
00001DA2  43F9 00002C89           1420          LEA         WORD_MSG, A1
00001DA8  103C 000E               1421          MOVE.B      #14, D0
00001DAC  4E4F                    1422          TRAP        #15
00001DAE                          1423          
00001DAE  1C3C 0001               1424          MOVE.B      #$1,      D6
00001DB2                          1425          
00001DB2  6000 FF62               1426          BRA         PREP_FOR_ROT
00001DB6                          1427  LONG_SIZE:
00001DB6  43F9 00002C8C           1428          LEA         LONG_MSG, A1
00001DBC  103C 000E               1429          MOVE.B      #14, D0
00001DC0  4E4F                    1430          TRAP        #15
00001DC2                          1431          
00001DC2  1C3C 0002               1432          MOVE.B      #$2,      D6
00001DC6                          1433          
00001DC6  6000 FF4E               1434          BRA         PREP_FOR_ROT
00001DCA                          1435  EFFECTIVEADD_5_0:
00001DCA                          1436          *isolate mode bits (5-3)
00001DCA                          1437          *make a copy
00001DCA  3803                    1438          MOVE.W      D3,     D4
00001DCC                          1439          
00001DCC                          1440          *isolate bits 5-3 on the right
00001DCC  343C 000A               1441          MOVE.W      #10,     D2
00001DD0  E56C                    1442          LSL.W       D2,     D4
00001DD2  343C 000D               1443          MOVE.W      #13,    D2
00001DD6  E46C                    1444          LSR.W       D2,     D4
00001DD8                          1445          
00001DD8  B83C 0000               1446          CMP.B       #$0,    D4
00001DDC  6700 03C8               1447          BEQ         DATAR_EA
00001DE0                          1448          
00001DE0  B83C 0001               1449          CMP.B       #$1,    D4
00001DE4  6700 03E4               1450          BEQ         ADDR_EA
00001DE8                          1451          
00001DE8  B83C 0002               1452          CMP.B       #$2,    D4
00001DEC  6700 0400               1453          BEQ         ADDP_EA
00001DF0                          1454          
00001DF0  B83C 0003               1455          CMP.B       #$3,    D4
00001DF4  6700 0434               1456          BEQ         ADDPP_EA
00001DF8                          1457          
00001DF8  B83C 0004               1458          CMP.B       #$4,    D4
00001DFC  6700 0474               1459          BEQ         ADDPM_EA
00001E00                          1460          
00001E00  B83C 0007               1461          CMP.B       #$7,    D4
00001E04  6700 04B4               1462          BEQ         IDATA_EA
00001E08                          1463  
00001E08  4E75                    1464          RTS
00001E0A                          1465          
00001E0A                          1466          
00001E0A                          1467  DESTINATION_11_6: 
00001E0A                          1468         
00001E0A  3803                    1469          MOVE.W      D3,     D4
00001E0C                          1470          *isolate bits 8-6 on the right
00001E0C  343C 0007               1471          MOVE.W      #7,     D2
00001E10  E56C                    1472          LSL.W       D2,     D4
00001E12  343C 000D               1473          MOVE.W      #13,    D2
00001E16  E46C                    1474          LSR.W       D2,     D4
00001E18                          1475          
00001E18  B83C 0000               1476          CMP.B       #$0,    D4
00001E1C  6700 002C               1477          BEQ         PRINT_DESTINATION_DATA
00001E20                          1478          
00001E20  B83C 0001               1479          CMP.B       #$1,    D4
00001E24  6700 0048               1480          BEQ         DEST_A_EA
00001E28                          1481          
00001E28  B83C 0002               1482          CMP.B       #$2,    D4
00001E2C  6700 0064               1483          BEQ         DEST_P_EA
00001E30                          1484          
00001E30  B83C 0003               1485          CMP.B       #$3,    D4
00001E34  6700 0098               1486          BEQ         DEST_PP_EA
00001E38                          1487          
00001E38  B83C 0004               1488          CMP.B       #$4,    D4
00001E3C  6700 00D8               1489          BEQ         DEST_PM_EA
00001E40                          1490          
00001E40  B83C 0007               1491          CMP.B       #$7,    D4
00001E44  6700 0474               1492          BEQ         IDATA_EA
00001E48                          1493          
00001E48  4E75                    1494          RTS
00001E4A                          1495  
00001E4A                          1496  PRINT_DESTINATION_DATA:
00001E4A  43F9 00002C33           1497          LEA         DATA_REG, A1
00001E50  103C 000E               1498          MOVE.B      #14, D0
00001E54  4E4F                    1499          TRAP        #15
00001E56                          1500          
00001E56  3803                    1501          MOVE.W      D3,     D4
00001E58                          1502          
00001E58                          1503          *print the reg num
00001E58                          1504          *isolate bits 11-9 on the right
00001E58  343C 0004               1505          MOVE.W      #4,     D2
00001E5C  E56C                    1506          LSL.W       D2,     D4
00001E5E  343C 000D               1507          MOVE.W      #13,    D2
00001E62  E46C                    1508          LSR.W       D2,     D4
00001E64                          1509          
00001E64                          1510          *print out the register number
00001E64  2204                    1511          MOVE.L      D4,     D1
00001E66  103C 0003               1512          MOVE.B      #3,     D0
00001E6A  4E4F                    1513          TRAP        #15
00001E6C                          1514  
00001E6C  4E75                    1515          RTS
00001E6E                          1516  DEST_A_EA:
00001E6E                          1517          *print the 'A'
00001E6E  43F9 00002C35           1518          LEA         ADDR_REG, A1
00001E74  103C 000E               1519          MOVE.B      #14, D0
00001E78  4E4F                    1520          TRAP        #15
00001E7A                          1521          
00001E7A  3803                    1522          MOVE.W      D3,     D4
00001E7C                          1523          
00001E7C                          1524          *print the reg num
00001E7C                          1525          *isolate bits 11-9 on the right
00001E7C  343C 0004               1526          MOVE.W      #4,     D2
00001E80  E56C                    1527          LSL.W       D2,     D4
00001E82  343C 000D               1528          MOVE.W      #13,    D2
00001E86  E46C                    1529          LSR.W       D2,     D4
00001E88                          1530          
00001E88                          1531          *print out the register number
00001E88  2204                    1532          MOVE.L      D4,     D1
00001E8A  103C 0003               1533          MOVE.B      #3,     D0
00001E8E  4E4F                    1534          TRAP        #15
00001E90                          1535  
00001E90  4E75                    1536          RTS
00001E92                          1537  DEST_P_EA:
00001E92                          1538          *print the '(A'
00001E92  43F9 00002C99           1539          LEA         OPEN_PARENTHESIS_MSG, A1
00001E98  103C 000E               1540          MOVE.B      #14, D0
00001E9C  4E4F                    1541          TRAP        #15
00001E9E                          1542          
00001E9E  43F9 00002C35           1543          LEA         ADDR_REG, A1
00001EA4  103C 000E               1544          MOVE.B      #14, D0
00001EA8  4E4F                    1545          TRAP        #15
00001EAA                          1546          
00001EAA  3803                    1547          MOVE.W      D3,     D4
00001EAC                          1548          
00001EAC                          1549          *print the reg num
00001EAC                          1550          *isolate bits 11-9 on the right
00001EAC  343C 0004               1551          MOVE.W      #4,     D2
00001EB0  E56C                    1552          LSL.W       D2,     D4
00001EB2  343C 000D               1553          MOVE.W      #13,    D2
00001EB6  E46C                    1554          LSR.W       D2,     D4
00001EB8                          1555          
00001EB8                          1556          *print out the register number
00001EB8  2204                    1557          MOVE.L      D4,     D1
00001EBA  103C 0003               1558          MOVE.B      #3,     D0
00001EBE  4E4F                    1559          TRAP        #15
00001EC0                          1560          
00001EC0  43F9 00002C9B           1561          LEA         CLOSE_PARENTHESIS_MSG, A1
00001EC6  103C 000E               1562          MOVE.B      #14, D0
00001ECA  4E4F                    1563          TRAP        #15
00001ECC  4E75                    1564          RTS
00001ECE                          1565  DEST_PP_EA:
00001ECE                          1566          *print the '(A'
00001ECE  43F9 00002C99           1567          LEA         OPEN_PARENTHESIS_MSG, A1
00001ED4  103C 000E               1568          MOVE.B      #14, D0
00001ED8  4E4F                    1569          TRAP        #15
00001EDA                          1570          
00001EDA  43F9 00002C35           1571          LEA         ADDR_REG, A1
00001EE0  103C 000E               1572          MOVE.B      #14, D0
00001EE4  4E4F                    1573          TRAP        #15
00001EE6                          1574          
00001EE6  3803                    1575          MOVE.W      D3,     D4
00001EE8                          1576          
00001EE8                          1577          *print the reg num
00001EE8                          1578          *isolate bits 11-9 on the right
00001EE8  343C 0004               1579          MOVE.W      #4,     D2
00001EEC  E56C                    1580          LSL.W       D2,     D4
00001EEE  343C 000D               1581          MOVE.W      #13,    D2
00001EF2  E46C                    1582          LSR.W       D2,     D4
00001EF4                          1583          
00001EF4                          1584          *print out the register number
00001EF4  2204                    1585          MOVE.L      D4,     D1
00001EF6  103C 0003               1586          MOVE.B      #3,     D0
00001EFA  4E4F                    1587          TRAP        #15
00001EFC                          1588          
00001EFC  43F9 00002C9B           1589          LEA         CLOSE_PARENTHESIS_MSG, A1
00001F02  103C 000E               1590          MOVE.B      #14, D0
00001F06  4E4F                    1591          TRAP        #15
00001F08                          1592          
00001F08  43F9 00002C95           1593          LEA         PLUS_MSG, A1
00001F0E  103C 000E               1594          MOVE.B      #14, D0
00001F12  4E4F                    1595          TRAP        #15
00001F14                          1596          
00001F14  4E75                    1597          RTS
00001F16                          1598  DEST_PM_EA:
00001F16                          1599          *print the '-(A'
00001F16  43F9 00002C97           1600          LEA         MINUS_MSG, A1
00001F1C  103C 000E               1601          MOVE.B      #14, D0
00001F20  4E4F                    1602          TRAP        #15
00001F22                          1603          
00001F22  43F9 00002C99           1604          LEA         OPEN_PARENTHESIS_MSG, A1
00001F28  103C 000E               1605          MOVE.B      #14, D0
00001F2C  4E4F                    1606          TRAP        #15
00001F2E                          1607          
00001F2E  43F9 00002C35           1608          LEA         ADDR_REG, A1
00001F34  103C 000E               1609          MOVE.B      #14, D0
00001F38  4E4F                    1610          TRAP        #15
00001F3A                          1611          
00001F3A  3803                    1612          MOVE.W      D3,     D4
00001F3C                          1613          
00001F3C                          1614          *print the reg num
00001F3C                          1615          *isolate bits 2-0 on the right
00001F3C  343C 0004               1616          MOVE.W      #4,     D2
00001F40  E56C                    1617          LSL.W       D2,     D4
00001F42  343C 000D               1618          MOVE.W      #13,    D2
00001F46  E46C                    1619          LSR.W       D2,     D4
00001F48                          1620          
00001F48                          1621          *print out the register number
00001F48  2204                    1622          MOVE.L      D4,     D1
00001F4A  103C 0003               1623          MOVE.B      #3,     D0
00001F4E  4E4F                    1624          TRAP        #15
00001F50                          1625          
00001F50  43F9 00002C9B           1626          LEA         CLOSE_PARENTHESIS_MSG, A1
00001F56  103C 000E               1627          MOVE.B      #14, D0
00001F5A  4E4F                    1628          TRAP        #15
00001F5C                          1629          
00001F5C  4E75                    1630          RTS
00001F5E                          1631  DEST_DATA_EA:
00001F5E                          1632          *(not doing this)check register to see if it's W or L addressinG
00001F5E                          1633          *use (A3)+.W or .L to get the address data
00001F5E                          1634          *print it out
00001F5E                          1635          
00001F5E                          1636          *->take the next long and spit it out
00001F5E                          1637          *print out the data in hex form
00001F5E                          1638          *NOTE that if register = 100 it means raw data, can be in decimal b/c not address
00001F5E                          1639          
00001F5E  3803                    1640          MOVE.W      D3,     D4
00001F60                          1641          
00001F60                          1642          *get reg num
00001F60                          1643          *isolate bits 8-6 on the right
00001F60  343C 0007               1644          MOVE.W      #7,     D2
00001F64  E56C                    1645          LSL.W       D2,     D4
00001F66  343C 000D               1646          MOVE.W      #13,    D2
00001F6A  E46C                    1647          LSR.W       D2,     D4
00001F6C                          1648          
00001F6C                          1649          *raw data
00001F6C  B87C 0004               1650          CMP         #$4,    D4
00001F70  6700 037C               1651          BEQ         IDATA
00001F74                          1652          
00001F74                          1653          *W addressing
00001F74  B87C 0000               1654          CMP         #$0,    D4
00001F78  6700 03BA               1655          BEQ         WADDR
00001F7C                          1656          
00001F7C  43F9 00002C91           1657          LEA         DOLLAR_MSG, A1
00001F82  103C 000E               1658          MOVE.B      #14, D0
00001F86  4E4F                    1659          TRAP        #15
00001F88                          1660          
00001F88                          1661          *MOVE.B      #16,    D2          *base 16
00001F88                          1662          *MOVE.B      #15,    D0
00001F88  281B                    1663          MOVE.L      (A3)+,   D4
00001F8A  4EB9 00002A5E           1664          JSR         PRINT_LONG_VALUE
00001F90                          1665          *TRAP        #15
00001F90                          1666          
00001F90  4E75                    1667          RTS
00001F92                          1668  
00001F92                          1669  
00001F92                          1670  PRE_DECR_MASK_FIELD:
00001F92                          1671  
00001F92  B03C 000F               1672          CMP.B       #$F,    D0
00001F96  6E00 0034               1673          BGT         EXIT_LOOP_DECR
00001F9A  E35C                    1674          ROL         #1,     D4      
00001F9C  6500 0006               1675          BCS         PRE_DECR_LOOP_TRACK
00001FA0  6400 0016               1676          BCC         PRE_DECR_LOOP_UNTRACK
00001FA4                          1677  
00001FA4                          1678  PRE_DECR_LOOP_TRACK:
00001FA4                          1679          *   D0  keeps track of num of bits
00001FA4                          1680          *   D1  keeps track of first reg
00001FA4                          1681          *   D2  keeps track of value for some other logic
00001FA4                          1682          *   D3  keeps track of word data from memory
00001FA4                          1683          *   D4  holds the rotating word
00001FA4                          1684          *   D5  keeps track of space between reg, - if not set, and / if set
00001FA4                          1685          *   D6  keeps track of second reg
00001FA4                          1686  
00001FA4  B27C 00FF               1687          CMP.W       #$FF,   D1
00001FA8  6600 0008               1688          BNE         PRE_DECR_LOOP_TRACK_SECOND
00001FAC                          1689          
00001FAC                          1690          
00001FAC  1200                    1691          MOVE.B      D0,     D1
00001FAE  5200                    1692          ADD.B       #1,     D0
00001FB0  60E0                    1693          BRA         PRE_DECR_MASK_FIELD
00001FB2                          1694          
00001FB2                          1695  PRE_DECR_LOOP_TRACK_SECOND:
00001FB2                          1696  
00001FB2                          1697  
00001FB2  1C00                    1698          MOVE.B      D0,     D6
00001FB4  5200                    1699          ADD.B       #1,     D0
00001FB6  60DA                    1700          BRA         PRE_DECR_MASK_FIELD
00001FB8                          1701          
00001FB8                          1702  PRE_DECR_LOOP_UNTRACK:
00001FB8  5200                    1703          ADD.B       #1,     D0
00001FBA  B23C 00FF               1704          CMP.B       #$FF,   D1
00001FBE  67D2                    1705          BEQ         PRE_DECR_MASK_FIELD
00001FC0                          1706          
00001FC0  BC3C 00FF               1707          CMP.B       #$FF,    D6
00001FC4  66CC                    1708          BNE         PRE_DECR_MASK_FIELD
00001FC6  1A3C 0001               1709          MOVE.B      #$1,    D5
00001FCA                          1710  
00001FCA  60C6                    1711          BRA         PRE_DECR_MASK_FIELD
00001FCC                          1712  
00001FCC                          1713  EXIT_LOOP_DECR:
00001FCC                          1714  
00001FCC  BA3C 0000               1715          CMP.B       #$0,    D5
00001FD0  6700 0014               1716          BEQ         DECR_SWAP
00001FD4                          1717  
00001FD4  4283                    1718          CLR.L       D3
00001FD6  1601                    1719          MOVE.B      D1,     D3
00001FD8  B23C 0007               1720          CMP.B       #$7,    D1
00001FDC  6E00 001A               1721          BGT         DECR_1_A
00001FE0  6F00 0020               1722          BLE         DECR_1_B
00001FE4                          1723  
00001FE4  4E75                    1724          RTS
00001FE6                          1725  DECR_SWAP:
00001FE6  C346                    1726          EXG         D1,     D6
00001FE8  4283                    1727          CLR.L       D3
00001FEA  1601                    1728          MOVE.B      D1,     D3
00001FEC  B23C 0007               1729          CMP.B       #$7,    D1
00001FF0  6E00 0006               1730          BGT         DECR_1_A
00001FF4  6F00 000C               1731          BLE         DECR_1_B
00001FF8                          1732          
00001FF8                          1733  DECR_1_A:
00001FF8  4EB9 0000206C           1734          JSR         PRINT_A_DECR
00001FFE  6000 000C               1735          BRA         DECR_2
00002002                          1736  DECR_1_B:
00002002  4EB9 0000204C           1737          JSR         PRINT_D_DECR
00002008  6000 0002               1738          BRA         DECR_2
0000200C                          1739  
0000200C                          1740  DECR_2:
0000200C  BA3C 0000               1741          CMP.B       #$0,    D5
00002010  6700 0006               1742          BEQ         DECR_2_A
00002014  6600 000C               1743          BNE         DECR_2_B
00002018                          1744          
00002018                          1745  DECR_2_A:
00002018  4EB9 0000218A           1746          JSR         PRINT_MINUS
0000201E  6000 000C               1747          BRA         DECR_3
00002022                          1748          
00002022                          1749  DECR_2_B:
00002022  4EB9 00002198           1750          JSR         PRINT_DIV
00002028  6000 0002               1751          BRA         DECR_3
0000202C                          1752          
0000202C                          1753  DECR_3:
0000202C  4283                    1754          CLR.L       D3
0000202E  1606                    1755          MOVE.B      D6,     D3
00002030  BC3C 0007               1756          CMP.B       #$7,    D6
00002034  6E00 0006               1757          BGT         DECR_3_A
00002038  6F00 000A               1758          BLE         DECR_3_B
0000203C                          1759  
0000203C                          1760  DECR_3_A:
0000203C  4EB9 0000206C           1761          JSR         PRINT_A_DECR
00002042  4E75                    1762          RTS
00002044                          1763  DECR_3_B:
00002044  4EB9 0000204C           1764          JSR         PRINT_D_DECR
0000204A  4E75                    1765          RTS
0000204C                          1766  
0000204C                          1767  
0000204C                          1768  PRINT_D_DECR:
0000204C                          1769  
0000204C  43F9 00002C33           1770          LEA         DATA_REG, A1
00002052  103C 000E               1771          MOVE.B      #14, D0
00002056  4E4F                    1772          TRAP        #15
00002058                          1773          
00002058  43F9 00002BDB           1774          LEA         ZERO_MSG, A1
0000205E  C6FC 0002               1775          MULU        #2,       D3
00002062  D3C3                    1776          ADDA.L      D3,       A1
00002064                          1777          
00002064  103C 000E               1778          MOVE.B      #14, D0
00002068  4E4F                    1779          TRAP        #15
0000206A                          1780  
0000206A  4E75                    1781          RTS 
0000206C                          1782  PRINT_A_DECR:
0000206C  43F9 00002C35           1783          LEA         ADDR_REG, A1
00002072  103C 000E               1784          MOVE.B      #14, D0
00002076  4E4F                    1785          TRAP        #15
00002078                          1786          
00002078  5103                    1787          SUB.B       #$8,      D3
0000207A  43F9 00002BDB           1788          LEA         ZERO_MSG, A1
00002080  C6FC 0002               1789          MULU        #2,       D3
00002084  D3C3                    1790          ADDA.L      D3,       A1
00002086                          1791          
00002086  103C 000E               1792          MOVE.B      #14, D0
0000208A  4E4F                    1793          TRAP        #15
0000208C                          1794  
0000208C  4E75                    1795          RTS 
0000208E                          1796  
0000208E                          1797  
0000208E                          1798         
0000208E                          1799  POST_INCR_MASK_FIELD:
0000208E  B03C 0000               1800          CMP.B       #$0,    D0
00002092  6D00 0034               1801          BLT         EXIT_LOOP_INCR
00002096  E35C                    1802          ROL         #1,     D4      
00002098  6500 0006               1803          BCS         POST_INCR_LOOP_TRACK
0000209C  6400 0016               1804          BCC         POST_INCR_LOOP_UNTRACK
000020A0                          1805  
000020A0                          1806  POST_INCR_LOOP_TRACK:
000020A0                          1807          *   D0  keeps track of num of bits
000020A0                          1808          *   D1  keeps track of first reg
000020A0                          1809          *   D2  keeps track of value for some other logic
000020A0                          1810          *   D3  keeps track of word data from memory
000020A0                          1811          *   D4  holds the rotating word
000020A0                          1812          *   D5  keeps track of space between reg, - if not set, and / if set
000020A0                          1813          *   D6  keeps track of second reg
000020A0  B27C 00FF               1814          CMP.W       #$FF,   D1
000020A4  6600 0008               1815          BNE         POST_INCR_LOOP_TRACK_SECOND
000020A8                          1816          
000020A8                          1817          
000020A8  1200                    1818          MOVE.B      D0,     D1
000020AA  5300                    1819          SUB.B       #1,     D0
000020AC  60E0                    1820          BRA         POST_INCR_MASK_FIELD
000020AE                          1821          
000020AE                          1822  POST_INCR_LOOP_TRACK_SECOND:
000020AE                          1823  
000020AE                          1824  
000020AE  1C00                    1825          MOVE.B      D0,     D6
000020B0  5300                    1826          SUB.B       #1,     D0
000020B2  60DA                    1827          BRA         POST_INCR_MASK_FIELD
000020B4                          1828          
000020B4                          1829  POST_INCR_LOOP_UNTRACK:
000020B4  5300                    1830          SUB.B       #1,     D0
000020B6  B23C 00FF               1831          CMP.B       #$FF,   D1
000020BA  67D2                    1832          BEQ         POST_INCR_MASK_FIELD
000020BC                          1833          
000020BC  BC3C 00FF               1834          CMP.B       #$FF,    D6
000020C0  66CC                    1835          BNE         POST_INCR_MASK_FIELD
000020C2  1A3C 0001               1836          MOVE.B      #$1,    D5
000020C6                          1837  
000020C6  60C6                    1838          BRA         POST_INCR_MASK_FIELD
000020C8                          1839  
000020C8                          1840  EXIT_LOOP_INCR:
000020C8  BA3C 0000               1841          CMP.B       #$0,    D5
000020CC  6700 0014               1842          BEQ         INCR_SWAP
000020D0                          1843  
000020D0  4283                    1844          CLR.L       D3
000020D2  1601                    1845          MOVE.B      D1,     D3
000020D4  B23C 0007               1846          CMP.B       #$7,    D1
000020D8  6E00 001A               1847          BGT         INCR_1_A
000020DC  6F00 0020               1848          BLE         INCR_1_B
000020E0                          1849  
000020E0  4E75                    1850          RTS
000020E2                          1851  
000020E2                          1852  INCR_SWAP:
000020E2  C346                    1853          EXG         D1,     D6
000020E4  4283                    1854          CLR.L       D3
000020E6  1601                    1855          MOVE.B      D1,     D3
000020E8  B23C 0007               1856          CMP.B       #$7,    D1
000020EC  6E00 0006               1857          BGT         INCR_1_A
000020F0  6F00 000C               1858          BLE         INCR_1_B        
000020F4                          1859          
000020F4                          1860  INCR_1_A:
000020F4  4EB9 00002168           1861          JSR         PRINT_A_INCR
000020FA  6000 000C               1862          BRA         INCR_2
000020FE                          1863  INCR_1_B:
000020FE  4EB9 00002148           1864          JSR         PRINT_D_INCR
00002104  6000 0002               1865          BRA         INCR_2
00002108                          1866  
00002108                          1867  INCR_2:
00002108  BA3C 0000               1868          CMP.B       #$0,    D5
0000210C  6700 0006               1869          BEQ         INCR_2_A
00002110  6600 000C               1870          BNE         INCR_2_B
00002114                          1871          
00002114                          1872  INCR_2_A:
00002114  4EB9 0000218A           1873          JSR         PRINT_MINUS
0000211A  6000 000C               1874          BRA         INCR_3
0000211E                          1875          
0000211E                          1876  INCR_2_B:
0000211E  4EB9 00002198           1877          JSR         PRINT_DIV
00002124  6000 0002               1878          BRA         INCR_3
00002128                          1879          
00002128                          1880  INCR_3:
00002128  4283                    1881          CLR.L       D3
0000212A  1606                    1882          MOVE.B      D6,     D3
0000212C  BC3C 0007               1883          CMP.B       #$7,    D6
00002130  6E00 0006               1884          BGT         INCR_3_A
00002134  6F00 000A               1885          BLE         INCR_3_B
00002138                          1886  
00002138                          1887  INCR_3_A:
00002138  4EB9 00002168           1888          JSR         PRINT_A_INCR
0000213E  4E75                    1889          RTS
00002140                          1890  INCR_3_B:
00002140  4EB9 00002148           1891          JSR         PRINT_D_INCR
00002146  4E75                    1892          RTS
00002148                          1893  
00002148                          1894  
00002148                          1895  PRINT_D_INCR:
00002148                          1896  
00002148  43F9 00002C33           1897          LEA         DATA_REG, A1
0000214E  103C 000E               1898          MOVE.B      #14, D0
00002152  4E4F                    1899          TRAP        #15
00002154                          1900          
00002154                          1901          
00002154  43F9 00002BDB           1902          LEA         ZERO_MSG, A1
0000215A  C6FC 0002               1903          MULU        #2,       D3
0000215E  D3C3                    1904          ADDA.L      D3,       A1
00002160                          1905          
00002160  103C 000E               1906          MOVE.B      #14, D0
00002164  4E4F                    1907          TRAP        #15
00002166                          1908  
00002166  4E75                    1909          RTS 
00002168                          1910  PRINT_A_INCR:
00002168  43F9 00002C35           1911          LEA         ADDR_REG, A1
0000216E  103C 000E               1912          MOVE.B      #14, D0
00002172  4E4F                    1913          TRAP        #15
00002174                          1914          
00002174  5103                    1915          SUB.B       #$8,      D3
00002176  43F9 00002BDB           1916          LEA         ZERO_MSG, A1
0000217C  C6FC 0002               1917          MULU        #2,       D3
00002180  D3C3                    1918          ADDA.L      D3,       A1
00002182                          1919          
00002182  103C 000E               1920          MOVE.B      #14, D0
00002186  4E4F                    1921          TRAP        #15
00002188                          1922  
00002188  4E75                    1923          RTS
0000218A                          1924  
0000218A                          1925  PRINT_MINUS:
0000218A  43F9 00002C97           1926          LEA         MINUS_MSG, A1
00002190  103C 000E               1927          MOVE.B      #14, D0
00002194  4E4F                    1928          TRAP        #15
00002196                          1929  
00002196  4E75                    1930          RTS
00002198                          1931  
00002198                          1932  PRINT_DIV:
00002198  43F9 00002C37           1933          LEA         DIV_SIGN, A1
0000219E  103C 000E               1934          MOVE.B      #14, D0
000021A2  4E4F                    1935          TRAP        #15
000021A4                          1936  
000021A4  4E75                    1937          RTS       
000021A6                          1938  DATAR_EA:
000021A6                          1939          *print the 'D'
000021A6  43F9 00002C33           1940          LEA         DATA_REG, A1
000021AC  103C 000E               1941          MOVE.B      #14, D0
000021B0  4E4F                    1942          TRAP        #15
000021B2                          1943          
000021B2  3803                    1944          MOVE.W      D3,     D4
000021B4                          1945          
000021B4                          1946          *print the reg num
000021B4                          1947          *isolate bits 2-0 on the right
000021B4  343C 000D               1948          MOVE.W      #13,     D2
000021B8  E56C                    1949          LSL.W       D2,     D4
000021BA  343C 000D               1950          MOVE.W      #13,    D2
000021BE  E46C                    1951          LSR.W       D2,     D4
000021C0                          1952          
000021C0                          1953          *print out the register number
000021C0  2204                    1954          MOVE.L      D4,     D1
000021C2  103C 0003               1955          MOVE.B      #3,     D0
000021C6  4E4F                    1956          TRAP        #15
000021C8                          1957  
000021C8  4E75                    1958          RTS
000021CA                          1959  ADDR_EA:
000021CA                          1960          *print the 'A'
000021CA  43F9 00002C35           1961          LEA         ADDR_REG, A1
000021D0  103C 000E               1962          MOVE.B      #14, D0
000021D4  4E4F                    1963          TRAP        #15
000021D6                          1964          
000021D6  3803                    1965          MOVE.W      D3,     D4
000021D8                          1966          
000021D8                          1967          *print the reg num
000021D8                          1968          *isolate bits 2-0 on the right
000021D8  343C 000D               1969          MOVE.W      #13,     D2
000021DC  E56C                    1970          LSL.W       D2,     D4
000021DE  343C 000D               1971          MOVE.W      #13,    D2
000021E2  E46C                    1972          LSR.W       D2,     D4
000021E4                          1973          
000021E4                          1974          *print out the register number
000021E4  2204                    1975          MOVE.L      D4,     D1
000021E6  103C 0003               1976          MOVE.B      #3,     D0
000021EA  4E4F                    1977          TRAP        #15
000021EC                          1978  
000021EC  4E75                    1979          RTS
000021EE                          1980  ADDP_EA:
000021EE                          1981          *print the '(A'
000021EE  43F9 00002C99           1982          LEA         OPEN_PARENTHESIS_MSG, A1
000021F4  103C 000E               1983          MOVE.B      #14, D0
000021F8  4E4F                    1984          TRAP        #15
000021FA                          1985          
000021FA  43F9 00002C35           1986          LEA         ADDR_REG, A1
00002200  103C 000E               1987          MOVE.B      #14, D0
00002204  4E4F                    1988          TRAP        #15
00002206                          1989          
00002206  3803                    1990          MOVE.W      D3,     D4
00002208                          1991          
00002208                          1992          *print the reg num
00002208                          1993          *isolate bits 2-0 on the right
00002208  343C 000D               1994          MOVE.W      #13,     D2
0000220C  E56C                    1995          LSL.W       D2,     D4
0000220E  343C 000D               1996          MOVE.W      #13,    D2
00002212  E46C                    1997          LSR.W       D2,     D4
00002214                          1998          
00002214                          1999          *print out the register number
00002214  2204                    2000          MOVE.L      D4,     D1
00002216  103C 0003               2001          MOVE.B      #3,     D0
0000221A  4E4F                    2002          TRAP        #15
0000221C                          2003          
0000221C  43F9 00002C9B           2004          LEA         CLOSE_PARENTHESIS_MSG, A1
00002222  103C 000E               2005          MOVE.B      #14, D0
00002226  4E4F                    2006          TRAP        #15
00002228  4E75                    2007          RTS
0000222A                          2008  ADDPP_EA:
0000222A                          2009          *print the '(A'
0000222A  43F9 00002C99           2010          LEA         OPEN_PARENTHESIS_MSG, A1
00002230  103C 000E               2011          MOVE.B      #14, D0
00002234  4E4F                    2012          TRAP        #15
00002236                          2013          
00002236  43F9 00002C35           2014          LEA         ADDR_REG, A1
0000223C  103C 000E               2015          MOVE.B      #14, D0
00002240  4E4F                    2016          TRAP        #15
00002242                          2017          
00002242  3803                    2018          MOVE.W      D3,     D4
00002244                          2019          
00002244                          2020          *print the reg num
00002244                          2021          *isolate bits 2-0 on the right
00002244  343C 000D               2022          MOVE.W      #13,     D2
00002248  E56C                    2023          LSL.W       D2,     D4
0000224A  343C 000D               2024          MOVE.W      #13,    D2
0000224E  E46C                    2025          LSR.W       D2,     D4
00002250                          2026          
00002250                          2027          *print out the register number
00002250  2204                    2028          MOVE.L      D4,     D1
00002252  103C 0003               2029          MOVE.B      #3,     D0
00002256  4E4F                    2030          TRAP        #15
00002258                          2031          
00002258  43F9 00002C9B           2032          LEA         CLOSE_PARENTHESIS_MSG, A1
0000225E  103C 000E               2033          MOVE.B      #14, D0
00002262  4E4F                    2034          TRAP        #15
00002264                          2035          
00002264  43F9 00002C95           2036          LEA         PLUS_MSG, A1
0000226A  103C 000E               2037          MOVE.B      #14, D0
0000226E  4E4F                    2038          TRAP        #15
00002270                          2039          
00002270  4E75                    2040          RTS
00002272                          2041  ADDPM_EA:
00002272                          2042          *print the '-(A'
00002272  43F9 00002C97           2043          LEA         MINUS_MSG, A1
00002278  103C 000E               2044          MOVE.B      #14, D0
0000227C  4E4F                    2045          TRAP        #15
0000227E                          2046          
0000227E  43F9 00002C99           2047          LEA         OPEN_PARENTHESIS_MSG, A1
00002284  103C 000E               2048          MOVE.B      #14, D0
00002288  4E4F                    2049          TRAP        #15
0000228A                          2050          
0000228A  43F9 00002C35           2051          LEA         ADDR_REG, A1
00002290  103C 000E               2052          MOVE.B      #14, D0
00002294  4E4F                    2053          TRAP        #15
00002296                          2054          
00002296  3803                    2055          MOVE.W      D3,     D4
00002298                          2056          
00002298                          2057          *print the reg num
00002298                          2058          *isolate bits 2-0 on the right
00002298  343C 000D               2059          MOVE.W      #13,     D2
0000229C  E56C                    2060          LSL.W       D2,     D4
0000229E  343C 000D               2061          MOVE.W      #13,    D2
000022A2  E46C                    2062          LSR.W       D2,     D4
000022A4                          2063          
000022A4                          2064          *print out the register number
000022A4  2204                    2065          MOVE.L      D4,     D1
000022A6  103C 0003               2066          MOVE.B      #3,     D0
000022AA  4E4F                    2067          TRAP        #15
000022AC                          2068          
000022AC  43F9 00002C9B           2069          LEA         CLOSE_PARENTHESIS_MSG, A1
000022B2  103C 000E               2070          MOVE.B      #14, D0
000022B6  4E4F                    2071          TRAP        #15
000022B8                          2072          
000022B8  4E75                    2073          RTS
000022BA                          2074  IDATA_EA:
000022BA                          2075          *(not doing this)check register to see if it's W or L addressinG
000022BA                          2076          *use (A3)+.W or .L to get the address data
000022BA                          2077          *print it out
000022BA                          2078          
000022BA                          2079          *->take the next long and spit it out
000022BA                          2080          *print out the data in hex form
000022BA                          2081          *NOTE that if register = 100 it means raw data, can be in decimal b/c not address
000022BA                          2082          
000022BA  3803                    2083          MOVE.W      D3,     D4
000022BC                          2084          
000022BC                          2085          *get reg num
000022BC                          2086          *isolate bits 2-0 on the right
000022BC  343C 000D               2087          MOVE.W      #13,     D2
000022C0  E56C                    2088          LSL.W       D2,     D4
000022C2  343C 000D               2089          MOVE.W      #13,    D2
000022C6  E46C                    2090          LSR.W       D2,     D4
000022C8                          2091          
000022C8                          2092          *raw data
000022C8  B87C 0004               2093          CMP         #$4,    D4
000022CC  6700 0020               2094          BEQ         IDATA
000022D0                          2095          
000022D0                          2096          *W addressing
000022D0  B87C 0000               2097          CMP         #$0,    D4
000022D4  6700 005E               2098          BEQ         WADDR
000022D8                          2099          
000022D8  43F9 00002C91           2100          LEA         DOLLAR_MSG, A1
000022DE  103C 000E               2101          MOVE.B      #14, D0
000022E2  4E4F                    2102          TRAP        #15
000022E4                          2103          
000022E4                          2104          *MOVE.B      #16,    D2          *base 16
000022E4                          2105          *MOVE.B      #15,    D0
000022E4  281B                    2106          MOVE.L      (A3)+,   D4
000022E6  4EB9 00002A5E           2107          JSR         PRINT_LONG_VALUE
000022EC                          2108          *TRAP        #15
000022EC                          2109          
000022EC  4E75                    2110          RTS
000022EE                          2111  IDATA:
000022EE                          2112  
000022EE  43F9 00002C93           2113          LEA         HASH_MSG, A1
000022F4  103C 000E               2114          MOVE.B      #14, D0
000022F8  4E4F                    2115          TRAP        #15
000022FA                          2116          
000022FA  43F9 00002C91           2117          LEA         DOLLAR_MSG, A1
00002300  103C 000E               2118          MOVE.B      #14, D0
00002304  4E4F                    2119          TRAP        #15
00002306                          2120          
00002306                          2121          *MOVE.W      (A3)+,     D1
00002306                          2122          *MOVE.B      #3,     D0
00002306                          2123          *TRAP        #15
00002306                          2124          
00002306                          2125          *MOVE.B      #16,    D2          *base 16
00002306                          2126          *MOVE.B      #15,    D0
00002306  BC3C 0000               2127          CMP.B       #$0,     D6
0000230A  6700 0014               2128          BEQ         IDATA_BYTE
0000230E  BC3C 0001               2129          CMP.B       #$1,     D6
00002312  6700 0016               2130          BEQ         IDATA_WORD
00002316                          2131          
00002316  281B                    2132          MOVE.L      (A3)+,   D4
00002318  4EB9 00002A5E           2133          JSR         PRINT_LONG_VALUE
0000231E                          2134          *TRAP        #15
0000231E                          2135  
0000231E  4E75                    2136          RTS
00002320                          2137  
00002320                          2138  
00002320                          2139  IDATA_BYTE:
00002320  381B                    2140          MOVE.W      (A3)+,   D4
00002322  4EB9 00002A30           2141          JSR         PRINT_WORD_VALUE
00002328                          2142  
00002328  4E75                    2143          RTS
0000232A                          2144          
0000232A                          2145  IDATA_WORD:
0000232A  381B                    2146          MOVE.W      (A3)+,   D4
0000232C  4EB9 00002A30           2147          JSR         PRINT_WORD_VALUE
00002332                          2148  
00002332  4E75                    2149          RTS
00002334                          2150  
00002334                          2151          
00002334                          2152  WADDR:
00002334  43F9 00002C91           2153          LEA         DOLLAR_MSG, A1
0000233A  103C 000E               2154          MOVE.B      #14, D0
0000233E  4E4F                    2155          TRAP        #15
00002340                          2156          
00002340                          2157          *MOVE.B      #16,    D2          *base 16
00002340                          2158          *MOVE.B      #15,    D0
00002340  381B                    2159          MOVE.W      (A3)+,   D4
00002342  4EB9 00002A30           2160          JSR         PRINT_WORD_VALUE
00002348                          2161          *TRAP        #15
00002348                          2162          
00002348  4E75                    2163          RTS
0000234A                          2164  
0000234A                          2165          
0000234A                          2166  DATA_7_0:
0000234A                          2167          *make a copy
0000234A  3803                    2168          MOVE.W      D3,     D4
0000234C                          2169          
0000234C                          2170          *isolate bits 7-0 on the right
0000234C  343C 0008               2171          MOVE.W      #8,     D2
00002350  E56C                    2172          LSL.W       D2,     D4
00002352  343C 0008               2173          MOVE.W      #8,     D2
00002356  E46C                    2174          LSR.W       D2,     D4
00002358                          2175          
00002358                          2176           *print out the data in hex form
00002358                          2177          *MOVE.B      #16,    D2          *base 16
00002358                          2178          *MOVE.B      #15,    D0
00002358                          2179          *MOVE.W      D4,     D1
00002358  4EB9 00002A30           2180          JSR         PRINT_WORD_VALUE
0000235E                          2181          *TRAP        #15
0000235E                          2182  
0000235E                          2183  
0000235E  4E75                    2184          RTS
00002360                          2185  
00002360                          2186  
00002360                          2187  
00002360                          2188  
00002360                          2189  
00002360                          2190  SHIFT_ROTATE_EA_SIZE
00002360  48E7 0600               2191      MOVEM.L    D5-D6, -(A7)
00002364  7A06                    2192      MOVE.L     #6, D5
00002366  7C07                    2193      MOVE.L     #7, D6
00002368  4EB8 1C7C               2194      JSR        GET_BIT
0000236C  4CDF 0060               2195      MOVEM.L    (A7)+, D5-D6
00002370  43F9 00002C86           2196      LEA        BYTE_MSG, A1
00002376  C8FC 0003               2197      MULU       #3, D4
0000237A  D3C4                    2198      ADDA.L       D4,  A1
0000237C  103C 000E               2199      MOVE.B      #14, D0
00002380  4E4F                    2200      TRAP        #15
00002382  43F9 00002BD8           2201      LEA         SPACE_MSG,      A1
00002388  103C 000E               2202      MOVE.B      #14,            D0    
0000238C  4E4F                    2203      TRAP        #15
0000238E  4E75                    2204      RTS
00002390                          2205  
00002390                          2206  
00002390                          2207  
00002390                          2208  
00002390                          2209  SHIFT_ROTATE_EA_REGISTER
00002390  48E7 0600               2210      MOVEM.L    D5-D6, -(A7)
00002394  7A05                    2211      MOVE.L     #5, D5
00002396  7C05                    2212      MOVE.L     #5, D6
00002398  4EB8 1C7C               2213      JSR        GET_BIT
0000239C  4CDF 0060               2214      MOVEM.L    (A7)+, D5-D6
000023A0  B8BC 00000001           2215      CMP.L      #1,  D4
000023A6  6600 0070               2216      BNE        SHIFT_ROTATE_IMM_SOURCE
000023AA                          2217  
000023AA                          2218  SHIFT_ROTATE_REGISTER_SOURCE
000023AA  43F9 00002BF5           2219      LEA        D_MSG, A1
000023B0  103C 000E               2220      MOVE.B      #14,   D0    
000023B4  4E4F                    2221      TRAP        #15
000023B6  48E7 0600               2222      MOVEM.L    D5-D6, -(A7)
000023BA  7A09                    2223      MOVE.L     #9, D5
000023BC  7C0B                    2224      MOVE.L     #11, D6
000023BE  4EB8 1C7C               2225      JSR        GET_BIT
000023C2  4CDF 0060               2226      MOVEM.L    (A7)+, D5-D6
000023C6  43F9 00002BDB           2227      LEA       ZERO_MSG, A1
000023CC  C8FC 0002               2228      MULU      #2, D4    
000023D0  D3C4                    2229      ADDA.L    D4, A1
000023D2  103C 000E               2230      MOVE.B      #14,   D0    
000023D6  4E4F                    2231      TRAP        #15
000023D8  6000 0002               2232      BRA       SHIFT_ROTATE_REGISTER_DEST
000023DC                          2233  
000023DC                          2234  SHIFT_ROTATE_REGISTER_DEST
000023DC  43F9 00002C8F           2235      LEA        COMMA_MSG, A1    
000023E2  103C 000E               2236      MOVE.B      #14,   D0    
000023E6  4E4F                    2237      TRAP        #15
000023E8  43F9 00002BF5           2238      LEA        D_MSG, A1
000023EE  103C 000E               2239      MOVE.B      #14,   D0    
000023F2  4E4F                    2240      TRAP        #15
000023F4  48E7 0600               2241      MOVEM.L    D5-D6, -(A7)
000023F8  7A00                    2242      MOVE.L     #0, D5
000023FA  7C02                    2243      MOVE.L     #2, D6
000023FC  4EB8 1C7C               2244      JSR        GET_BIT
00002400  4CDF 0060               2245      MOVEM.L    (A7)+, D5-D6
00002404  43F9 00002BDB           2246      LEA       ZERO_MSG, A1
0000240A  C8FC 0002               2247      MULU      #2, D4    
0000240E  D3C4                    2248      ADDA.L    D4, A1
00002410  103C 000E               2249      MOVE.B      #14,   D0    
00002414  4E4F                    2250      TRAP        #15
00002416  4E75                    2251      RTS
00002418                          2252  
00002418                          2253  SHIFT_ROTATE_IMM_SOURCE
00002418  43F9 00002C93           2254      LEA        HASH_MSG, A1
0000241E  103C 000E               2255      MOVE.B      #14,   D0    
00002422  4E4F                    2256      TRAP        #15
00002424  43F9 00002C91           2257      LEA        DOLLAR_MSG, A1
0000242A  103C 000E               2258      MOVE.B      #14,   D0    
0000242E  4E4F                    2259      TRAP        #15
00002430  48E7 0600               2260      MOVEM.L    D5-D6, -(A7)
00002434  7A09                    2261      MOVE.L     #9, D5
00002436  7C0B                    2262      MOVE.L     #11, D6
00002438  4EB8 1C7C               2263      JSR        GET_BIT
0000243C  4CDF 0060               2264      MOVEM.L    (A7)+, D5-D6
00002440  B8BC 00000000           2265      CMP.L      #0, D4
00002446  6700 001C               2266      BEQ       SHIFT_ROTATE_COUNT_8
0000244A  6000 0002               2267      BRA       SHIFT_ROTATE_COUNT_1_7
0000244E                          2268   
0000244E                          2269  SHIFT_ROTATE_COUNT_1_7
0000244E  43F9 00002BDB           2270      LEA       ZERO_MSG, A1
00002454  C8FC 0002               2271      MULU      #2, D4    
00002458  D3C4                    2272      ADDA.L    D4, A1
0000245A  103C 000E               2273      MOVE.B      #14,   D0    
0000245E  4E4F                    2274      TRAP        #15
00002460  6000 FF7A               2275      BRA       SHIFT_ROTATE_REGISTER_DEST
00002464                          2276  
00002464                          2277  SHIFT_ROTATE_COUNT_8
00002464  43F9 00002BEB           2278      LEA       EIGHT_MSG, A1
0000246A  103C 000E               2279      MOVE.B      #14,   D0    
0000246E  4E4F                    2280      TRAP        #15
00002470  6000 FF6A               2281      BRA       SHIFT_ROTATE_REGISTER_DEST
00002474                          2282  
00002474                          2283  
00002474                          2284  
00002474                          2285  
00002474                          2286  
00002474                          2287  SHIFT_ROTATE_EA_MEMORY
00002474  48E7 0600               2288      MOVEM.L    D5-D6, -(A7)
00002478  7A00                    2289      MOVE.L     #0, D5
0000247A  7C05                    2290      MOVE.L     #5, D6
0000247C  4EB8 1C7C               2291      JSR        GET_BIT
00002480  4CDF 0060               2292      MOVEM.L    (A7)+, D5-D6
00002484  48E7 1600               2293      MOVEM.L    D3/D5-D6, -(A7)
00002488  2604                    2294      MOVE.L     D4, D3
0000248A  4EB9 00002856           2295      JSR        GET_EA
00002490  4CDF 0068               2296      MOVEM.L    (A7)+, D3/D5-D6
00002494  4E75                    2297      RTS
00002496                          2298  
00002496                          2299  
00002496                          2300  
00002496                          2301  BR_EA_SIZE_AND_DISPLACEMENT
00002496  48E7 0600               2302      MOVEM.L    D5-D6, -(A7)
0000249A  7A00                    2303      MOVE.L     #0, D5
0000249C  7C07                    2304      MOVE.L     #7, D6
0000249E  4EB8 1C7C               2305      JSR        GET_BIT
000024A2  4CDF 0060               2306      MOVEM.L    (A7)+, D5-D6
000024A6  B8BC 00000000           2307      CMP.L      #0, D4
000024AC  6700 0050               2308      BEQ        BR_WORD_DISPLACEMENT
000024B0                          2309  BR_BYTE_DISPLACEMENT
000024B0  43F9 00002C86           2310      LEA         BYTE_MSG, A1
000024B6  103C 000E               2311      MOVE.B      #14, D0
000024BA  4E4F                    2312      TRAP        #15
000024BC  43F9 00002BD8           2313      LEA         SPACE_MSG,   A1
000024C2  103C 000E               2314      MOVE.B      #14,   D0    
000024C6  4E4F                    2315      TRAP        #15
000024C8  48E7 0400               2316      MOVEM.L     D5, -(A7)
000024CC  2A04                    2317      MOVE.L      D4, D5
000024CE  E31D                    2318      ROL.B       #1, D5
000024D0  0285 00000001           2319      ANDI.L      #1, D5
000024D6  BA3C 0001               2320      CMP.B       #1, D5
000024DA  6700 0010               2321      BEQ         NEG_BYTE_DISPLACEMENT
000024DE  4CDF 0020               2322      MOVEM.L    (A7)+, D5
000024E2  D88B                    2323      ADD.L       A3, D4
000024E4  4EB9 00002A5E           2324      JSR         PRINT_LONG_VALUE
000024EA  4E75                    2325      RTS
000024EC                          2326  NEG_BYTE_DISPLACEMENT
000024EC  4CDF 0020               2327      MOVEM.L    (A7)+, D5
000024F0  4404                    2328      NEG.B       D4
000024F2  988B                    2329      SUB.L       A3, D4
000024F4  4484                    2330      NEG.L       D4
000024F6  4EB9 00002A5E           2331      JSR         PRINT_LONG_VALUE
000024FC  4E75                    2332      RTS
000024FE                          2333  BR_WORD_DISPLACEMENT
000024FE  43F9 00002C89           2334      LEA         WORD_MSG, A1
00002504  103C 000E               2335      MOVE.B      #14, D0
00002508  4E4F                    2336      TRAP        #15
0000250A  43F9 00002BD8           2337      LEA         SPACE_MSG,   A1
00002510  103C 000E               2338      MOVE.B      #14,   D0    
00002514  4E4F                    2339      TRAP        #15 
00002516  4284                    2340      CLR.L       D4
00002518  381B                    2341      MOVE.W      (A3)+, D4
0000251A  48E7 0400               2342      MOVEM.L     D5, -(A7)
0000251E  2A04                    2343      MOVE.L      D4, D5
00002520  E35D                    2344      ROL.W       #1, D5
00002522  0285 00000001           2345      ANDI.L      #1, D5
00002528  BA3C 0001               2346      CMP.B       #1, D5
0000252C  6700 0012               2347      BEQ         NEG_WORD_DISPLACEMENT
00002530  4CDF 0020               2348      MOVEM.L    (A7)+, D5
00002534  D88B                    2349      ADD.L       A3, D4
00002536  5584                    2350      SUB.L       #2, D4
00002538  4EB9 00002A5E           2351      JSR         PRINT_LONG_VALUE
0000253E  4E75                    2352      RTS
00002540                          2353  NEG_WORD_DISPLACEMENT
00002540  4CDF 0020               2354      MOVEM.L    (A7)+, D5
00002544  4444                    2355      NEG.W       D4
00002546  988B                    2356      SUB.L       A3, D4
00002548  4484                    2357      NEG.L       D4
0000254A  5584                    2358      SUB.L       #2, D4
0000254C  4EB9 00002A5E           2359      JSR         PRINT_LONG_VALUE
00002552  4E75                    2360      RTS
00002554                          2361  
00002554                          2362  
00002554                          2363  
00002554                          2364  
00002554                          2365  
00002554                          2366  LEA_EA
00002554                          2367      *Prints the source operand
00002554  48E7 0600               2368      MOVEM.L    D5-D6, -(A7)
00002558  7A00                    2369      MOVE.L     #0, D5
0000255A  7C05                    2370      MOVE.L     #5, D6
0000255C  4EB8 1C7C               2371      JSR        GET_BIT
00002560  4CDF 0060               2372      MOVEM.L    (A7)+, D5-D6
00002564  48E7 1600               2373      MOVEM.L    D3/D5-D6, -(A7)
00002568  2604                    2374      MOVE.L     D4, D3
0000256A  4EB9 00002856           2375      JSR        GET_EA
00002570  4CDF 0068               2376      MOVEM.L    (A7)+, D3/D5-D6
00002574                          2377  
00002574  43F9 00002C8F           2378      LEA        COMMA_MSG, A1
0000257A  103C 000E               2379      MOVE.B      #14,   D0    
0000257E  4E4F                    2380      TRAP        #15
00002580                          2381  
00002580                          2382      *Prints the dest operand
00002580  43F9 00002BEF           2383      LEA        A_MSG, A1
00002586  103C 000E               2384      MOVE.B      #14,   D0    
0000258A  4E4F                    2385      TRAP        #15
0000258C  48E7 0600               2386      MOVEM.L    D5-D6, -(A7)
00002590  7A09                    2387      MOVE.L     #9, D5
00002592  7C0B                    2388      MOVE.L     #11, D6
00002594  4EB8 1C7C               2389      JSR        GET_BIT
00002598  4CDF 0060               2390      MOVEM.L    (A7)+, D5-D6
0000259C  43F9 00002BDB           2391      LEA       ZERO_MSG, A1
000025A2  C8FC 0002               2392      MULU      #2, D4    
000025A6  D3C4                    2393      ADDA.L    D4, A1
000025A8  103C 000E               2394      MOVE.B      #14,   D0    
000025AC  4E4F                    2395      TRAP        #15
000025AE  4E75                    2396      RTS
000025B0                          2397  
000025B0                          2398  
000025B0                          2399  
000025B0                          2400  
000025B0                          2401  ADDA_EA_SIZE_AND_EA 
000025B0  48E7 0600               2402      MOVEM.L    D5-D6, -(A7)
000025B4  7A08                    2403      MOVE.L     #8, D5
000025B6  7C08                    2404      MOVE.L     #8, D6
000025B8  4EB8 1C7C               2405      JSR        GET_BIT
000025BC  4CDF 0060               2406      MOVEM.L    (A7)+, D5-D6
000025C0  43F9 00002C89           2407      LEA        WORD_MSG, A1
000025C6  C8FC 0003               2408      MULU       #3, D4
000025CA  D3C4                    2409      ADDA.L     D4, A1
000025CC  103C 000E               2410      MOVE.B      #14, D0
000025D0  4E4F                    2411      TRAP        #15
000025D2                          2412  
000025D2  43F9 00002BD8           2413      LEA         SPACE_MSG,   A1
000025D8  103C 000E               2414      MOVE.B      #14,   D0    
000025DC  4E4F                    2415      TRAP        #15
000025DE                          2416  
000025DE  48E7 0600               2417      MOVEM.L    D5-D6, -(A7)
000025E2  7A00                    2418      MOVE.L     #0, D5
000025E4  7C05                    2419      MOVE.L     #5, D6
000025E6  4EB8 1C7C               2420      JSR        GET_BIT
000025EA  4CDF 0060               2421      MOVEM.L    (A7)+, D5-D6
000025EE  B8BC 0000003C           2422      CMP.L      #%111100, D4
000025F4  6700 0022               2423      BEQ        ADDA_EA_IMM_SOURCE
000025F8                          2424  ADDA_EA_NON_IMM_SOURCE
000025F8  48E7 1600               2425      MOVEM.L    D3/D5-D6, -(A7)
000025FC  2604                    2426      MOVE.L     D4, D3     
000025FE  4EB9 00002856           2427      JSR        GET_EA
00002604  43F9 00002C8F           2428      LEA         COMMA_MSG,   A1
0000260A  103C 000E               2429      MOVE.B      #14,   D0    
0000260E  4E4F                    2430      TRAP        #15
00002610  4CDF 0068               2431      MOVEM.L    (A7)+, D3/D5-D6
00002614  6000 0064               2432      BRA        ADDA_EA_DEST
00002618                          2433  ADDA_EA_IMM_SOURCE
00002618  43F9 00002C93           2434      LEA        HASH_MSG, A1
0000261E  103C 000E               2435      MOVE.B      #14,   D0    
00002622  4E4F                    2436      TRAP        #15
00002624  43F9 00002C91           2437      LEA        DOLLAR_MSG, A1
0000262A  103C 000E               2438      MOVE.B      #14,   D0    
0000262E  4E4F                    2439      TRAP        #15
00002630  48E7 0600               2440      MOVEM.L    D5-D6, -(A7)
00002634  7A06                    2441      MOVE.L     #6, D5
00002636  7C08                    2442      MOVE.L     #8, D6
00002638  4EB8 1C7C               2443      JSR        GET_BIT
0000263C  4CDF 0060               2444      MOVEM.L    (A7)+, D5-D6
00002640  B8BC 00000003           2445      CMP.L      #%011, D4
00002646  6700 001A               2446      BEQ        ADDA_EA_IMM_WORD
0000264A                          2447  ADDA_EA_IMM_LONG
0000264A  281B                    2448      MOVE.L     (A3)+, D4
0000264C  4EB9 00002A5E           2449      JSR        PRINT_LONG_VALUE
00002652                          2450  
00002652  43F9 00002C8F           2451      LEA         COMMA_MSG,   A1
00002658  103C 000E               2452      MOVE.B      #14,   D0    
0000265C  4E4F                    2453      TRAP        #15
0000265E  6000 001A               2454      BRA         ADDA_EA_DEST
00002662                          2455  ADDA_EA_IMM_WORD
00002662  381B                    2456      MOVE.W     (A3)+, D4
00002664  4EB9 00002A30           2457      JSR        PRINT_WORD_VALUE
0000266A                          2458  
0000266A  43F9 00002C8F           2459      LEA         COMMA_MSG,   A1
00002670  103C 000E               2460      MOVE.B      #14,   D0    
00002674  4E4F                    2461      TRAP        #15
00002676  6000 0002               2462      BRA         ADDA_EA_DEST
0000267A                          2463  
0000267A                          2464  ADDA_EA_DEST   
0000267A  48E7 0600               2465      MOVEM.L    D5-D6, -(A7)
0000267E  7A09                    2466      MOVE.L     #9, D5
00002680  7C0B                    2467      MOVE.L     #11, D6
00002682  4EB8 1C7C               2468      JSR        GET_BIT
00002686  4CDF 0060               2469      MOVEM.L    (A7)+, D5-D6
0000268A  43F9 00002BEF           2470      LEA   A_MSG, A1
00002690  103C 000E               2471      MOVE.B   #14,  D0    
00002694  4E4F                    2472      TRAP     #15
00002696  43F9 00002BDB           2473      LEA    ZERO_MSG, A1
0000269C  C8FC 0002               2474      MULU       #2, D4
000026A0  D3C4                    2475      ADDA.L     D4, A1
000026A2  103C 000E               2476      MOVE.B   #14,  D0    
000026A6  4E4F                    2477      TRAP     #15
000026A8  4E75                    2478      RTS
000026AA                          2479  
000026AA                          2480  
000026AA                          2481  
000026AA                          2482  
000026AA                          2483  ADDQ_EA_SIZE_AND_EA
000026AA  48E7 0600               2484      MOVEM.L    D5-D6, -(A7)
000026AE  7A06                    2485      MOVE.L     #6, D5
000026B0  7C07                    2486      MOVE.L     #7, D6
000026B2  4EB8 1C7C               2487      JSR        GET_BIT
000026B6  4CDF 0060               2488      MOVEM.L    (A7)+, D5-D6
000026BA  43F9 00002C86           2489      LEA        BYTE_MSG, A1
000026C0  C8FC 0003               2490      MULU       #3, D4
000026C4  D3C4                    2491      ADDA.L       D4,  A1
000026C6  103C 000E               2492      MOVE.B      #14, D0
000026CA  4E4F                    2493      TRAP        #15
000026CC  43F9 00002BD8           2494      LEA         SPACE_MSG,      A1
000026D2  103C 000E               2495      MOVE.B      #14,            D0    
000026D6  4E4F                    2496      TRAP        #15
000026D8                          2497  
000026D8  48E7 0600               2498      MOVEM.L    D5-D6, -(A7)
000026DC  7A09                    2499      MOVE.L     #9, D5
000026DE  7C0B                    2500      MOVE.L     #11, D6
000026E0  4EB8 1C7C               2501      JSR        GET_BIT
000026E4  4CDF 0060               2502      MOVEM.L    (A7)+, D5-D6
000026E8  43F9 00002C93           2503      LEA        HASH_MSG, A1
000026EE  103C 000E               2504      MOVE.B      #14,   D0    
000026F2  4E4F                    2505      TRAP        #15
000026F4  43F9 00002C91           2506      LEA        DOLLAR_MSG, A1
000026FA  103C 000E               2507      MOVE.B      #14,   D0    
000026FE  4E4F                    2508      TRAP        #15
00002700  B8BC 00000000           2509      CMP.L      #0, D4
00002706  6700 0042               2510      BEQ       ADDQ_ADD_COUNT_8
0000270A                          2511  
0000270A                          2512  ADDQ_ADD_COUNT_1_7
0000270A  43F9 00002BDB           2513      LEA       ZERO_MSG, A1
00002710  C8FC 0002               2514      MULU      #2, D4    
00002714  D3C4                    2515      ADDA.L    D4, A1
00002716  103C 000E               2516      MOVE.B      #14,   D0    
0000271A  4E4F                    2517      TRAP        #15
0000271C  43F9 00002C8F           2518      LEA         COMMA_MSG,   A1
00002722  103C 000E               2519      MOVE.B      #14,   D0    
00002726  4E4F                    2520      TRAP        #15
00002728  48E7 0600               2521      MOVEM.L    D5-D6, -(A7)
0000272C  7A00                    2522      MOVE.L     #0, D5
0000272E  7C05                    2523      MOVE.L     #5, D6
00002730  4EB8 1C7C               2524      JSR        GET_BIT
00002734  4CDF 0060               2525      MOVEM.L    (A7)+, D5-D6
00002738  48E7 1600               2526      MOVEM.L    D3/D5-D6, -(A7)
0000273C  2604                    2527      MOVE.L     D4, D3
0000273E  4EB9 00002856           2528      JSR        GET_EA
00002744  4CDF 0068               2529      MOVEM.L    (A7)+, D3/D5-D6
00002748  4E75                    2530      RTS
0000274A                          2531  
0000274A                          2532  ADDQ_ADD_COUNT_8
0000274A  43F9 00002BEB           2533      LEA       EIGHT_MSG, A1
00002750  103C 000E               2534      MOVE.B      #14,   D0    
00002754  4E4F                    2535      TRAP        #15
00002756  43F9 00002C8F           2536      LEA         COMMA_MSG,   A1
0000275C  103C 000E               2537      MOVE.B      #14,   D0    
00002760  4E4F                    2538      TRAP        #15
00002762  48E7 0600               2539      MOVEM.L    D5-D6, -(A7)
00002766  7A00                    2540      MOVE.L     #0, D5
00002768  7C05                    2541      MOVE.L     #5, D6
0000276A  4EB8 1C7C               2542      JSR        GET_BIT
0000276E  4CDF 0060               2543      MOVEM.L    (A7)+, D5-D6
00002772  48E7 1600               2544      MOVEM.L    D3/D5-D6, -(A7)
00002776  2604                    2545      MOVE.L     D4, D3   
00002778  4EB9 00002856           2546      JSR        GET_EA
0000277E  4CDF 0068               2547      MOVEM.L    (A7)+, D3/D5-D6
00002782  4E75                    2548      RTS
00002784                          2549  
00002784                          2550  
00002784                          2551  
00002784                          2552  
00002784                          2553  
00002784                          2554  
00002784                          2555  ADD_SUB_EA_SIZE
00002784  48E7 0600               2556      MOVEM.L    D5-D6, -(A7)
00002788  7A06                    2557      MOVE.L     #6, D5
0000278A  7C08                    2558      MOVE.L     #8, D6
0000278C  4EB8 1C7C               2559      JSR        GET_BIT
00002790  4CDF 0060               2560      MOVEM.L    (A7)+, D5-D6
00002794  0284 00000003           2561      ANDI.L     #%011, D4
0000279A  43F9 00002C86           2562      LEA        BYTE_MSG, A1
000027A0  C8FC 0003               2563      MULU       #3, D4
000027A4  D3C4                    2564      ADDA.L       D4,  A1
000027A6  103C 000E               2565      MOVE.B      #14, D0
000027AA  4E4F                    2566      TRAP        #15
000027AC  4E75                    2567      RTS
000027AE                          2568  
000027AE                          2569  ADD_SUB_EA_REG
000027AE  43F9 00002BF5           2570      LEA        D_MSG, A1
000027B4  103C 000E               2571      MOVE.B      #14,   D0    
000027B8  4E4F                    2572      TRAP        #15
000027BA  48E7 0600               2573      MOVEM.L    D5-D6, -(A7)
000027BE  7A09                    2574      MOVE.L     #9, D5
000027C0  7C0B                    2575      MOVE.L     #11, D6
000027C2  4EB8 1C7C               2576      JSR        GET_BIT
000027C6  4CDF 0060               2577      MOVEM.L    (A7)+, D5-D6
000027CA  43F9 00002BDB           2578      LEA       ZERO_MSG, A1
000027D0  C8FC 0002               2579      MULU      #2, D4    
000027D4  D3C4                    2580      ADDA.L    D4, A1
000027D6  103C 000E               2581      MOVE.B      #14,   D0    
000027DA  4E4F                    2582      TRAP        #15
000027DC  4E75                    2583      RTS
000027DE                          2584  
000027DE                          2585  
000027DE                          2586  ADD_SUB_EA_EA
000027DE  48E7 0600               2587      MOVEM.L    D5-D6, -(A7)
000027E2  7A00                    2588      MOVE.L     #0, D5
000027E4  7C05                    2589      MOVE.L     #5, D6
000027E6  4EB8 1C7C               2590      JSR        GET_BIT
000027EA  4CDF 0060               2591      MOVEM.L    (A7)+, D5-D6
000027EE  B8BC 0000003C           2592      CMP.L      #%111100, D4
000027F4  6700 0014               2593      BEQ        ADD_SUB_EA_EA_IMM
000027F8  48E7 1600               2594      MOVEM.L    D3/D5-D6, -(A7)
000027FC  2604                    2595      MOVE.L     D4, D3   
000027FE  4EB9 00002856           2596      JSR        GET_EA
00002804  4CDF 0068               2597      MOVEM.L    (A7)+, D3/D5-D6
00002808  4E75                    2598      RTS
0000280A                          2599  
0000280A                          2600  ADD_SUB_EA_EA_IMM
0000280A  43F9 00002C93           2601      LEA        HASH_MSG, A1
00002810  103C 000E               2602      MOVE.B      #14,   D0    
00002814  4E4F                    2603      TRAP        #15
00002816  43F9 00002C91           2604      LEA        DOLLAR_MSG, A1
0000281C  103C 000E               2605      MOVE.B      #14,   D0    
00002820  4E4F                    2606      TRAP        #15
00002822  48E7 0600               2607      MOVEM.L    D5-D6, -(A7)
00002826  7A06                    2608      MOVE.L     #6, D5
00002828  7C08                    2609      MOVE.L     #8, D6
0000282A  4EB8 1C7C               2610      JSR        GET_BIT
0000282E  4CDF 0060               2611      MOVEM.L    (A7)+, D5-D6
00002832  0284 00000003           2612      ANDI.L     #%011, D4
00002838  B8BC 00000002           2613      CMP.L      #%010, D4
0000283E  6600 000C               2614      BNE        ADD_SUB_EA_EA_IMM_WORD
00002842                          2615  ADD_SUB_EA_EA_IMM_LONG
00002842  281B                    2616      MOVE.L     (A3)+, D4
00002844  4EB9 00002A5E           2617      JSR         PRINT_LONG_VALUE
0000284A  4E75                    2618      RTS
0000284C                          2619  ADD_SUB_EA_EA_IMM_WORD
0000284C  381B                    2620      MOVE.W     (A3)+, D4
0000284E  4EB9 00002A30           2621      JSR        PRINT_WORD_VALUE
00002854  4E75                    2622      RTS
00002856                          2623  
00002856                          2624  
00002856                          2625  
00002856                          2626  
00002856                          2627  
00002856                          2628  
00002856                          2629  
00002856                          2630  
00002856                          2631  
00002856                          2632  
00002856                          2633  
00002856                          2634  
00002856                          2635  
00002856                          2636  
00002856                          2637  
00002856                          2638  
00002856                          2639  
00002856                          2640  
00002856                          2641  
00002856                          2642  
00002856                          2643  GET_EA
00002856  7A03                    2644      MOVE.L     #3, D5
00002858  7C05                    2645      MOVE.L     #5, D6
0000285A  4EB8 1C7C               2646      JSR        GET_BIT
0000285E  B8BC 00000000           2647      CMP.L      #0, D4
00002864  6700 0048               2648      BEQ        EA_DATA_REGISTER
00002868  B8BC 00000001           2649      CMP.L      #1, D4
0000286E  6700 0066               2650      BEQ        EA_ADDR_REGISTER
00002872  B8BC 00000002           2651      CMP.L      #2, D4
00002878  6700 0084               2652      BEQ        EA_INDIRECT
0000287C  B8BC 00000003           2653      CMP.L      #3, D4
00002882  6700 00BA               2654      BEQ        EA_INDIRECT_INCREMENT
00002886  B8BC 00000004           2655      CMP.L      #4, D4
0000288C  6700 00FC               2656      BEQ        EA_INDIRECT_DECREMENT
00002890                          2657      *101, and 110 mode bits should be detected in disassembler_OPCodes 
00002890  7A00                    2658      MOVE.L     #0, D5
00002892  7C02                    2659      MOVE.L     #2, D6
00002894  4EB8 1C7C               2660      JSR        GET_BIT
00002898  B8BC 00000000           2661      CMP.L      #0, D4
0000289E  6700 0136               2662      BEQ        EA_ABS_WORD
000028A2  B8BC 00000001           2663      CMP.L      #1, D4
000028A8  6700 0144               2664      BEQ        EA_ABS_LONG
000028AC                          2665      *Unreachable
000028AC  4E75                    2666      RTS
000028AE                          2667      
000028AE                          2668  
000028AE                          2669  EA_DATA_REGISTER
000028AE  43F9 00002BF5           2670      LEA   D_MSG, A1
000028B4  103C 000E               2671      MOVE.B   #14,  D0    
000028B8  4E4F                    2672      TRAP     #15
000028BA  43F9 00002BDB           2673      LEA    ZERO_MSG, A1
000028C0  7A00                    2674      MOVE.L     #0, D5
000028C2  7C02                    2675      MOVE.L     #2, D6
000028C4  4EB8 1C7C               2676      JSR        GET_BIT
000028C8  C8FC 0002               2677      MULU       #2, D4
000028CC  D3C4                    2678      ADDA.L     D4, A1
000028CE  103C 000E               2679      MOVE.B   #14,  D0    
000028D2  4E4F                    2680      TRAP     #15
000028D4  4E75                    2681      RTS
000028D6                          2682  
000028D6                          2683  
000028D6                          2684  EA_ADDR_REGISTER
000028D6  43F9 00002BEF           2685      LEA   A_MSG, A1
000028DC  103C 000E               2686      MOVE.B   #14,  D0    
000028E0  4E4F                    2687      TRAP     #15
000028E2  43F9 00002BDB           2688      LEA    ZERO_MSG, A1
000028E8  7A00                    2689      MOVE.L     #0, D5
000028EA  7C02                    2690      MOVE.L     #2, D6
000028EC  4EB8 1C7C               2691      JSR        GET_BIT
000028F0  C8FC 0002               2692      MULU       #2, D4
000028F4  D3C4                    2693      ADDA.L     D4, A1
000028F6  103C 000E               2694      MOVE.B   #14,  D0    
000028FA  4E4F                    2695      TRAP     #15
000028FC  4E75                    2696      RTS
000028FE                          2697  
000028FE                          2698  
000028FE                          2699  EA_INDIRECT
000028FE  43F9 00002C99           2700      LEA   OPEN_PARENTHESIS_MSG, A1
00002904  103C 000E               2701      MOVE.B   #14,  D0    
00002908  4E4F                    2702      TRAP     #15
0000290A  43F9 00002BEF           2703      LEA   A_MSG, A1
00002910  103C 000E               2704      MOVE.B   #14,  D0    
00002914  4E4F                    2705      TRAP     #15
00002916  43F9 00002BDB           2706      LEA    ZERO_MSG, A1
0000291C  7A00                    2707      MOVE.L     #0, D5
0000291E  7C02                    2708      MOVE.L     #2, D6
00002920  4EB8 1C7C               2709      JSR        GET_BIT
00002924  C8FC 0002               2710      MULU       #2, D4
00002928  D3C4                    2711      ADDA.L     D4, A1
0000292A  103C 000E               2712      MOVE.B   #14,  D0    
0000292E  4E4F                    2713      TRAP     #15
00002930  43F9 00002C9B           2714      LEA   CLOSE_PARENTHESIS_MSG, A1
00002936  103C 000E               2715      MOVE.B   #14,  D0    
0000293A  4E4F                    2716      TRAP     #15
0000293C  4E75                    2717      RTS
0000293E                          2718  
0000293E                          2719  
0000293E                          2720  
0000293E                          2721  EA_INDIRECT_INCREMENT
0000293E  43F9 00002C99           2722      LEA   OPEN_PARENTHESIS_MSG, A1
00002944  103C 000E               2723      MOVE.B   #14,  D0    
00002948  4E4F                    2724      TRAP     #15
0000294A  43F9 00002BEF           2725      LEA   A_MSG, A1
00002950  103C 000E               2726      MOVE.B   #14,  D0    
00002954  4E4F                    2727      TRAP     #15
00002956  43F9 00002BDB           2728      LEA    ZERO_MSG, A1
0000295C  7A00                    2729      MOVE.L     #0, D5
0000295E  7C02                    2730      MOVE.L     #2, D6
00002960  4EB8 1C7C               2731      JSR        GET_BIT
00002964  C8FC 0002               2732      MULU       #2, D4
00002968  D3C4                    2733      ADDA.L     D4, A1
0000296A  103C 000E               2734      MOVE.B   #14,  D0    
0000296E  4E4F                    2735      TRAP     #15
00002970  43F9 00002C9B           2736      LEA   CLOSE_PARENTHESIS_MSG, A1
00002976  103C 000E               2737      MOVE.B   #14,  D0    
0000297A  4E4F                    2738      TRAP     #15
0000297C  43F9 00002C95           2739      LEA   PLUS_MSG, A1
00002982  103C 000E               2740      MOVE.B   #14,  D0    
00002986  4E4F                    2741      TRAP     #15
00002988  4E75                    2742      RTS
0000298A                          2743  
0000298A                          2744  
0000298A                          2745  EA_INDIRECT_DECREMENT
0000298A  43F9 00002C97           2746      LEA   MINUS_MSG, A1
00002990  103C 000E               2747      MOVE.B   #14,  D0    
00002994  4E4F                    2748      TRAP     #15
00002996  43F9 00002C99           2749      LEA   OPEN_PARENTHESIS_MSG, A1
0000299C  103C 000E               2750      MOVE.B   #14,  D0    
000029A0  4E4F                    2751      TRAP     #15
000029A2  43F9 00002BEF           2752      LEA   A_MSG, A1
000029A8  103C 000E               2753      MOVE.B   #14,  D0    
000029AC  4E4F                    2754      TRAP     #15
000029AE  43F9 00002BDB           2755      LEA    ZERO_MSG, A1
000029B4  7A00                    2756      MOVE.L     #0, D5
000029B6  7C02                    2757      MOVE.L     #2, D6
000029B8  4EB8 1C7C               2758      JSR        GET_BIT
000029BC  C8FC 0002               2759      MULU       #2, D4
000029C0  D3C4                    2760      ADDA.L     D4, A1
000029C2  103C 000E               2761      MOVE.B   #14,  D0    
000029C6  4E4F                    2762      TRAP     #15
000029C8  43F9 00002C9B           2763      LEA   CLOSE_PARENTHESIS_MSG, A1
000029CE  103C 000E               2764      MOVE.B   #14,  D0    
000029D2  4E4F                    2765      TRAP     #15
000029D4  4E75                    2766      RTS
000029D6                          2767  
000029D6                          2768  
000029D6                          2769  
000029D6                          2770  EA_ABS_WORD
000029D6  4284                    2771      CLR.L      D4
000029D8  381B                    2772      MOVE.W     (A3)+, D4
000029DA  43F9 00002C91           2773      LEA        DOLLAR_MSG,       A1
000029E0  103C 000E               2774      MOVE.B      #14,            D0    
000029E4  4E4F                    2775      TRAP        #15
000029E6  4EB9 00002A30           2776      JSR        PRINT_WORD_VALUE
000029EC  4E75                    2777      RTS
000029EE                          2778  
000029EE                          2779  EA_ABS_LONG
000029EE  281B                    2780      MOVE.L    (A3)+, D4
000029F0  43F9 00002C91           2781      LEA        DOLLAR_MSG,       A1
000029F6  103C 000E               2782      MOVE.B      #14,            D0    
000029FA  4E4F                    2783      TRAP        #15
000029FC  4EB9 00002A5E           2784      JSR        PRINT_LONG_VALUE
00002A02  4E75                    2785      RTS
00002A04                          2786  
00002A04                          2787  
00002A04                          2788  
00002A04                          2789  
00002A04                          2790  PRINT_BYTE_VALUE
00002A04  48E7 0600               2791          MOVEM.L    D5-D6, -(A7)
00002A08  7C02                    2792          MOVE.L     #2, D6
00002A0A                          2793  PRINT_BYTE_VALUE_LOOP
00002A0A                          2794          *Gets the most significant bit basically
00002A0A                          2795          *Could use GET_BIT subroutine but it is 
00002A0A                          2796          *costly in terms of registers used
00002A0A  1A04                    2797          MOVE.B     D4, D5
00002A0C  E80D                    2798          LSR.B      #4, D5
00002A0E  E90C                    2799          LSL.B      #4, D4
00002A10  43F9 00002BDB           2800          LEA        ZERO_MSG,      A1
00002A16                          2801          * load the address of Zero_msg
00002A16                          2802          * because all of the msgs are stored next to each other in order
00002A16                          2803          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002A16                          2804          * and then add it to the address starting at zero_msg
00002A16  CAFC 0002               2805          MULU         #2,            D5
00002A1A  D3C5                    2806          ADDA.L       D5,            A1
00002A1C  103C 000E               2807          MOVE.B      #14, D0
00002A20  4E4F                    2808          TRAP        #15
00002A22  5386                    2809          SUBI.L      #1, D6
00002A24  BC3C 0000               2810          CMP.B       #0, D6
00002A28  66E0                    2811          BNE         PRINT_BYTE_VALUE_LOOP
00002A2A  4CDF 0060               2812          MOVEM.L    (A7)+, D5-D6
00002A2E  4E75                    2813          RTS
00002A30                          2814  
00002A30                          2815  
00002A30                          2816  
00002A30                          2817  PRINT_WORD_VALUE
00002A30  48E7 0600               2818          MOVEM.L    D5-D6, -(A7)
00002A34  7C04                    2819          MOVE.L     #4, D6
00002A36                          2820  PRINT_WORD_VALUE_LOOP
00002A36                          2821          *Gets the most significant bit basically
00002A36                          2822          *Could use GET_BIT subroutine but it is 
00002A36                          2823          *costly in terms of registers used
00002A36  3A04                    2824          MOVE.W     D4, D5
00002A38  EC4D                    2825          LSR.W      #6, D5
00002A3A  EC4D                    2826          LSR.W      #6, D5
00002A3C  E94C                    2827          LSL.W      #4, D4
00002A3E  43F9 00002BDB           2828          LEA        ZERO_MSG,      A1
00002A44                          2829          * load the address of Zero_msg
00002A44                          2830          * because all of the msgs are stored next to each other in order
00002A44                          2831          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002A44                          2832          * and then add it to the address starting at zero_msg
00002A44  CAFC 0002               2833          MULU         #2,            D5
00002A48  D3C5                    2834          ADDA.L       D5,            A1
00002A4A  103C 000E               2835          MOVE.B      #14, D0
00002A4E  4E4F                    2836          TRAP        #15
00002A50  5386                    2837          SUBI.L      #1, D6
00002A52  BC3C 0000               2838          CMP.B       #0, D6
00002A56  66DE                    2839          BNE         PRINT_WORD_VALUE_LOOP
00002A58  4CDF 0060               2840          MOVEM.L    (A7)+, D5-D6
00002A5C  4E75                    2841          RTS
00002A5E                          2842  
00002A5E                          2843  
00002A5E                          2844  PRINT_LONG_VALUE
00002A5E  48E7 0600               2845          MOVEM.L    D5-D6, -(A7)
00002A62  7C08                    2846          MOVE.L     #8, D6
00002A64                          2847  PRINT_LONG_VALUE_LOOP
00002A64                          2848          *Gets the most significant bit basically
00002A64                          2849          *Could use GET_BIT subroutine but it is 
00002A64                          2850          *costly in terms of registers used
00002A64  2A04                    2851          MOVE.L     D4, D5
00002A66  E08D                    2852          LSR.L      #8, D5
00002A68  E08D                    2853          LSR.L      #8, D5
00002A6A  E08D                    2854          LSR.L      #8, D5
00002A6C  E88D                    2855          LSR.L      #4, D5
00002A6E  E98C                    2856          LSL.L      #4, D4
00002A70  43F9 00002BDB           2857          LEA        ZERO_MSG,      A1
00002A76                          2858          * load the address of Zero_msg
00002A76                          2859          * because all of the msgs are stored next to each other in order
00002A76                          2860          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002A76                          2861          * and then add it to the address starting at zero_msg
00002A76  CAFC 0002               2862          MULU         #2,            D5
00002A7A  D3C5                    2863          ADDA.L       D5,            A1
00002A7C  103C 000E               2864          MOVE.B      #14, D0
00002A80  4E4F                    2865          TRAP        #15
00002A82  5386                    2866          SUBI.L      #1, D6
00002A84  BC3C 0000               2867          CMP.B       #0, D6
00002A88  66DA                    2868          BNE         PRINT_LONG_VALUE_LOOP
00002A8A  4CDF 0060               2869          MOVEM.L    (A7)+, D5-D6
00002A8E  4E75                    2870          RTS
00002A90                          2871  
00002A90                          2872  
00002A90                          2873   
00002A90                          2874  
00002A90                          2875  
00002A90                          2876  
00002A90                          2877  
00002A90                          2878  
00002A90                          2879  
00002A90                          2880  
00002A90                          2881  
00002A90                          2882  
00002A90                          2883  
00002A90                          2884  -------------------- end include --------------------
00002A90                          2885      INCLUDE         'Disassembler_Msgs.x68'
00002A90                          2886  
00002A90= 57 65 6C 63 6F 6D ...   2887  INTRO_MSG:       DC.B       'Welcome to Team Cools Disassembler!',CR,LF,0
00002AB6= 50 6C 65 61 73 65 ...   2888  STARTING_MSG:    DC.B       'Please enter the Starting Address',CR,LF,0
00002ADA= 50 6C 65 61 73 65 ...   2889  ENDING_MSG:      DC.B       'Please enter the Ending Address',CR,LF,0
00002AFC= 44 6F 6E 65 20 52 ...   2890  DONE_MSG:        DC.B       'Done Reading data',CR,LF,0
00002B10= 50 72 65 73 73 20 ...   2891  RESTART_MSG:     DC.B       'Press Enter to restart, and 1 to exit',CR,LF,0
00002B38= 54 68 61 6E 6B 20 ...   2892  TY_MSG:          DC.B       'Thank you for trying out this disassembler',CR,LF,0
00002B65= 50 72 65 73 73 20 ...   2893  PRESS_ENTER_MSG: DC.B       'Press Enter to continue Scanning',CR,LF,0
00002B88                          2894  
00002B88                          2895  
00002B88                          2896  STA_ADDR         DS.B        40
00002BB0                          2897  END_ADDR         DS.B        40
00002BD8                          2898  
00002BD8                          2899  
00002BD8= 20 20 00                2900  SPACE_MSG:       DC.B        '  ',0
00002BDB                          2901  
00002BDB= 30 00                   2902  ZERO_MSG:        DC.B        '0',0
00002BDD= 31 00                   2903  ONE_MSG:         DC.B        '1',0
00002BDF= 32 00                   2904  TWO_MSG:         DC.B        '2',0
00002BE1= 33 00                   2905  THREE_MSG:       DC.B        '3',0
00002BE3= 34 00                   2906  FOUR_MSG:        DC.B        '4',0
00002BE5= 35 00                   2907  FIVE_MSG:        DC.B        '5',0
00002BE7= 36 00                   2908  SIX_MSG:         DC.B        '6',0
00002BE9= 37 00                   2909  SEVEN_MSG:       DC.B        '7',0
00002BEB= 38 00                   2910  EIGHT_MSG:       DC.B        '8',0
00002BED= 39 00                   2911  NINE_MSG:        DC.B        '9',0
00002BEF= 41 00                   2912  A_MSG:           DC.B        'A',0
00002BF1= 42 00                   2913  B_MSG:           DC.B        'B',0
00002BF3= 43 00                   2914  C_MSG:           DC.B        'C',0
00002BF5= 44 00                   2915  D_MSG:           DC.B        'D',0
00002BF7= 45 00                   2916  E_MSG:           DC.B        'E',0
00002BF9= 46 00                   2917  F_MSG:           DC.B        'F',0 
00002BFB= 4E 4F 54 00             2918  NOT_MSG:        DC.B        'NOT',0
00002BFF= 42 52 41 00             2919  BRA_MSG:        DC.B        'BRA',0
00002C03                          2920  
00002C03= 4D 4F 56 45 00          2921  MOVE_MSG:       DC.B        'MOVE',0
00002C08= 4D 4F 56 45 4D 00       2922  MOVEM_MSG:      DC.B        'MOVEM',0
00002C0E= 4D 4F 56 45 41 00       2923  MOVEA_MSG:      DC.B        'MOVEA',0
00002C14                          2924  
00002C14                          2925  
00002C14                          2926  
00002C14= 41 44 44 41 00          2927  ADDA_MSG:       DC.B        'ADDA',0
00002C19= 41 44 44 51 00          2928  ADDQ_MSG:       DC.B        'ADDQ',0
00002C1E= 53 55 42 00             2929  SUB_MSG:        DC.B        'SUB',0
00002C22= 41 44 44 00             2930  ADD_MSG:        DC.B        'ADD',0
00002C26= 52 54 53 00             2931  RTS_MSG:        DC.B        'RTS',0
00002C2A= 4E 4F 50 00             2932  NOP_MSG:        DC.B        'NOP',0
00002C2E                          2933  
00002C2E                          2934  
00002C2E                          2935  
00002C2E                          2936  
00002C2E                          2937  
00002C2E                          2938  
00002C2E= 20 00                   2939  WHITESPACE:     DC.B        ' ',0
00002C30= 2C 20 00                2940  WHITESPACE_COM: DC.B        ', ',0
00002C33                          2941  
00002C33= 44 00                   2942  DATA_REG:       DC.B        'D',0
00002C35= 41 00                   2943  ADDR_REG:       DC.B        'A',0
00002C37                          2944  
00002C37                          2945  
00002C37                          2946  
00002C37                          2947  
00002C37= 2F 00                   2948  DIV_SIGN        DC.B        '/',0
00002C39= 4A 53 52 20 00          2949  JSRMSG:         DC.B        'JSR ',0
00002C3E= 4A 53 52 00             2950  JSR_MSG:        DC.B        'JSR',0
00002C42= 4D 4F 56 45 51 00       2951  MOVEQ_MSG:      DC.B        'MOVEQ',0
00002C48= 41 4E 44 00             2952  AND_MSG:        DC.B        'AND',0
00002C4C= 4C 45 41 00             2953  LEA_MSG         DC.B        'LEA',0
00002C50= 41 53 52 00             2954  ASR_MSG         DC.B        'ASR',0
00002C54= 41 53 4C 00             2955  ASL_MSG         DC.B        'ASL',0
00002C58= 4C 53 52 00             2956  LSR_MSG         DC.B        'LSR',0
00002C5C= 4C 53 4C 00             2957  LSL_MSG         DC.B        'LSL',0
00002C60= 52 4F 58 00             2958  ROXR_MSG        DC.B        'ROX',0  *Unused messages but present because helps in indexing, DONT USE IT
00002C64= 52 4F 58 00             2959  ROXL_MSG        DC.B        'ROX',0  *Unused messages but present because helps in indexing, DONT USE IT
00002C68= 52 4F 52 00             2960  ROR_MSG         DC.B        'ROR',0
00002C6C= 52 4F 4C 00             2961  ROL_MSG         DC.B        'ROL',0
00002C70= 4F 52 00                2962  OR_MSG:         DC.B        'OR',0
00002C73= 44 41 54 41 00          2963  DATA_MSG:       DC.B        'DATA',0
00002C78= 42 00                   2964  BCC_MSG         DC.B        'B', 0
00002C7A= 42 4C 45 00             2965  BLE_MSG         DC.B        'BLE', 0
00002C7E= 42 47 54 00             2966  BGT_MSG         DC.B        'BGT',0
00002C82= 42 45 51 00             2967  BEQ_MSG         DC.B        'BEQ',0
00002C86                          2968  
00002C86= 2E 42 00                2969  BYTE_MSG        DC.B        '.B', 0
00002C89= 2E 57 00                2970  WORD_MSG        DC.B        '.W', 0
00002C8C= 2E 4C 00                2971  LONG_MSG        DC.B        '.L', 0
00002C8F                          2972  
00002C8F= 2C 00                   2973  COMMA_MSG       DC.B        ',', 0
00002C91= 24 00                   2974  DOLLAR_MSG      DC.B        '$', 0
00002C93= 23 00                   2975  HASH_MSG        DC.B        '#', 0
00002C95= 2B 00                   2976  PLUS_MSG        DC.B        '+', 0
00002C97= 2D 00                   2977  MINUS_MSG       DC.B        '-', 0
00002C99= 28 00                   2978  OPEN_PARENTHESIS_MSG  DC.B   '(', 0
00002C9B= 29 00                   2979  CLOSE_PARENTHESIS_MSG DC.B  ')', 0
00002C9D                          2980  
00002C9D                          2981  
00002C9D  =0000000D               2982  CR              EQU          $0D
00002C9D  =0000000A               2983  LF              EQU          $0A
00002C9D                          2984  
00002C9D= 0D 0A 00                2985  NEW_LINE:       DC.B         '',CR,LF,0
00002CA0                          2986  
00002CA0                          2987  
00002CA0                          2988  
00002CA0                          2989  
00002CA0                          2990  -------------------- end include --------------------
00002CA0                          2991      INCLUDE         'Sample_Test.x68'
00002CA0                          2992  
00002CA0                          2993                    ; first instruction of program
00002CA0                          2994  
00002CA0                          2995  TEST
00002CA0  4E75                    2996      RTS
00002CA2  4E71                    2997      NOP
00002CA4                          2998      
00002CA4  1401                    2999      MOVE.B      D1,     D2
00002CA6  343C 1231               3000      MOVE.W      #$1231, D2
00002CAA  2409                    3001      MOVE.L      A1,     D2
00002CAC  3459                    3002      MOVEA.W     (A1)+,  A2
00002CAE  2461                    3003      MOVEA.L     -(A1),  A2
00002CB0  48A1 007F               3004      MOVEM.W     A1-A7,  -(A1)
00002CB4  7000                    3005      MOVEQ       #$0,    D0
00002CB6  7C32                    3006      MOVEQ       #50,  D6
00002CB8  45D1                    3007      LEA         (A1),   A2
00002CBA                          3008      
00002CBA  C401                    3009      AND.B       D1,     D2
00002CBC  CA93                    3010      AND.L       (A3),   D5
00002CBE  C262                    3011      AND.W       -(A2),  D1
00002CC0  C07C 007B               3012      AND.W       #123,   D0         
00002CC4  C4B9 0000A000           3013      AND.L       $A000,  D2          *shows up as A000 in data
00002CCA  C479 0000A000           3014      AND.W       $0000A000, D2       *shows up as 0000A000 in data
00002CD0  C01E                    3015      AND.B       (A6)+,  D0
00002CD2  C312                    3016      AND.B       D1,     (A2)
00002CD4  C579 FFFF1234           3017      AND.W       D2, $FFFF1234       *shows up as A000 in data, MOVE.L will take word from next opcode
00002CDA                          3018      
00002CDA  8401                    3019      OR.B        D1,     D2
00002CDC  8C38 1234               3020      OR.B        $00001234,  D6
00002CE0  8E39 0000ABCD           3021      OR.B        $ABCD,  D7
00002CE6  8D39 1234ABCD           3022      OR.B        D6,     $1234ABCD
00002CEC  8F39 0000ABCD           3023      OR.B        D7,     $ABCD
00002CF2                          3024      
00002CF2  70CD                    3025      MOVEQ       #$CD,    D0
00002CF4  7C32                    3026      MOVEQ       #50,  D6
00002CF6                          3027      
00002CF6  4600                    3028      NOT.B       D0
00002CF8  465A                    3029      NOT.W       (A2)+
00002CFA  46B9 0000A000           3030      NOT.L       $A000
00002D00                          3031  
00002D00                          3032  
00002D00  D401                    3033      ADD.B       D1,     D2
00002D02  D4C1                    3034      ADDA.W      D1,     A2
00002D04  524A                    3035      ADDQ.W      #$1,    A2
00002D06  9401                    3036      SUB.B       D1,     D2
00002D08                          3037      
00002D08  4EB8 2CA0               3038      JSR         TEST
00002D0C  6E92                    3039      BGT.B       TEST
00002D0E  6F00 FF90               3040      BLE.W       TEST
00002D12  6700 FF8C               3041      BEQ.W       TEST
00002D16  6088                    3042      BRA         TEST
00002D18  4678 2CA0               3043      NOT         TEST
00002D1C                          3044      
00002D1C  E32A                    3045      LSL.B       D1,     D2
00002D1E  E22A                    3046      LSR.B       D1,     D2
00002D20  E322                    3047      ASL.B       D1,     D2
00002D22  E222                    3048      ASR.B       D1,     D2
00002D24  E33A                    3049      ROL.B       D1,     D2
00002D26  E23A                    3050      ROR.B       D1,     D2
00002D28                          3051  
00002D28                          3052  
00002D28                          3053  
00002D28                          3054  
00002D28                          3055  
00002D28                          3056  
00002D28                          3057  -------------------- end include --------------------
00002D28                          3058      INCLUDE         'demo_test.x68'
00002D28                          3059  
00002D28                          3060  
00002D28                          3061  
00002D28                          3062  
00002D28                          3063  TEST2:
00002D28  4E75                    3064      RTS
00002D2A  4E71                    3065      NOP
00002D2C  4E75                    3066      RTS
00002D2E  41D0                    3067      LEA     (A0),A0
00002D30  41D5                    3068      LEA     (A5),A0
00002D32  41D7                    3069      LEA     (A7),A0
00002D34  4FD0                    3070      LEA     (A0),A7
00002D36  4FD5                    3071      LEA     (A5),A7
00002D38  4FD7                    3072      LEA     (A7),A7
00002D3A  1200                    3073      MOVE.B    D0,D1
00002D3C  1080                    3074      MOVE.B    D0,(A0)
00002D3E  10C0                    3075      MOVE.B    D0,(A0)+
00002D40  1100                    3076      MOVE.B    D0,-(A0)
00002D42  1010                    3077      MOVE.B    (A0),D0
00002D44  1290                    3078      MOVE.B    (A0),(A1)
00002D46  12D0                    3079      MOVE.B    (A0),(A1)+
00002D48  1310                    3080      MOVE.B    (A0),-(A1)
00002D4A  1018                    3081      MOVE.B    (A0)+,D0
00002D4C  1298                    3082      MOVE.B    (A0)+,(A1)
00002D4E  12D8                    3083      MOVE.B    (A0)+,(A1)+
00002D50  1318                    3084      MOVE.B    (A0)+,-(A1)
00002D52  1020                    3085      MOVE.B    -(A0),D0
00002D54  12A0                    3086      MOVE.B    -(A0),(A1)
00002D56  12E0                    3087      MOVE.B    -(A0),(A1)+
00002D58  1320                    3088      MOVE.B    -(A0),-(A1)
00002D5A  3200                    3089      MOVE.W    D0,D1
00002D5C  3080                    3090      MOVE.W    D0,(A0)
00002D5E  30C0                    3091      MOVE.W    D0,(A0)+
00002D60  3100                    3092      MOVE.W    D0,-(A0)
00002D62  3008                    3093      MOVE.W    A0,D0
00002D64  3288                    3094      MOVE.W    A0,(A1)
00002D66  32C8                    3095      MOVE.W    A0,(A1)+
00002D68  3308                    3096      MOVE.W    A0,-(A1)
00002D6A  3010                    3097      MOVE.W    (A0),D0
00002D6C  3290                    3098      MOVE.W    (A0),(A1)
00002D6E  32D0                    3099      MOVE.W    (A0),(A1)+
00002D70  3310                    3100      MOVE.W    (A0),-(A1)
00002D72  3018                    3101      MOVE.W    (A0)+,D0
00002D74  3298                    3102      MOVE.W    (A0)+,(A1)
00002D76  32D8                    3103      MOVE.W    (A0)+,(A1)+
00002D78  3318                    3104      MOVE.W    (A0)+,-(A1)
00002D7A  3020                    3105      MOVE.W    -(A0),D0
00002D7C  32A0                    3106      MOVE.W    -(A0),(A1)
00002D7E  32E0                    3107      MOVE.W    -(A0),(A1)+
00002D80  3320                    3108      MOVE.W    -(A0),-(A1)
00002D82  2200                    3109      MOVE.L    D0,D1
00002D84  2080                    3110      MOVE.L    D0,(A0)
00002D86  20C0                    3111      MOVE.L    D0,(A0)+
00002D88  2100                    3112      MOVE.L    D0,-(A0)
00002D8A  2008                    3113      MOVE.L    A0,D0
00002D8C  2288                    3114      MOVE.L    A0,(A1)
00002D8E  22C8                    3115      MOVE.L    A0,(A1)+
00002D90  2308                    3116      MOVE.L    A0,-(A1)
00002D92  2010                    3117      MOVE.L    (A0),D0
00002D94  2290                    3118      MOVE.L    (A0),(A1)
00002D96  22D0                    3119      MOVE.L    (A0),(A1)+
00002D98  2310                    3120      MOVE.L    (A0),-(A1)
00002D9A  2018                    3121      MOVE.L    (A0)+,D0
00002D9C  2298                    3122      MOVE.L    (A0)+,(A1)
00002D9E  22D8                    3123      MOVE.L    (A0)+,(A1)+
00002DA0  2318                    3124      MOVE.L    (A0)+,-(A1)
00002DA2  2020                    3125      MOVE.L    -(A0),D0
00002DA4  22A0                    3126      MOVE.L    -(A0),(A1)
00002DA6  22E0                    3127      MOVE.L    -(A0),(A1)+
00002DA8  2320                    3128      MOVE.L    -(A0),-(A1)
00002DAA  48A1 007F               3129      MOVEM.W   A1-A7,-(A1)
00002DAE  48E1 7F00               3130      MOVEM.L   D1-D7,-(A1)
00002DB2  48A1 0140               3131      MOVEM.W   A1/D7,-(A1)
00002DB6  48E1 0140               3132      MOVEM.L   A1/D7,-(A1)
00002DBA  4891 FE00               3133      MOVEM.W   A1-A7,(A1)
00002DBE  48D1 00FE               3134      MOVEM.L   D1-D7,(A1)
00002DC2  4891 0280               3135      MOVEM.W   A1/D7,(A1)
00002DC6  48D1 0280               3136      MOVEM.L   A1/D7,(A1)
00002DCA  4C99 FE00               3137      MOVEM.W   (A1)+,A1-A7
00002DCE  4CD9 00FE               3138      MOVEM.L   (A1)+,D1-D7
00002DD2  4C99 0280               3139      MOVEM.W   (A1)+,A1/D7
00002DD6  4CD9 0280               3140      MOVEM.L   (A1)+,A1/D7
00002DDA  4C91 FE00               3141      MOVEM.W   (A1),A1-A7
00002DDE  4CD1 00FE               3142      MOVEM.L   (A1),D1-D7
00002DE2  4C91 0280               3143      MOVEM.W   (A1),A1/D7
00002DE6  4CD1 0280               3144      MOVEM.L   (A1),A1/D7
00002DEA  3040                    3145      MOVEA.W    D0,A0
00002DEC  3048                    3146      MOVEA.W    A0,A0
00002DEE  3050                    3147      MOVEA.W    (A0),A0
00002DF0  3058                    3148      MOVEA.W    (A0)+,A0
00002DF2  3060                    3149      MOVEA.W    -(A0),A0
00002DF4  2040                    3150      MOVEA.L    D0,A0
00002DF6  2048                    3151      MOVEA.L    A0,A0
00002DF8  2050                    3152      MOVEA.L    (A0),A0
00002DFA  2058                    3153      MOVEA.L    (A0)+,A0
00002DFC  2060                    3154      MOVEA.L    -(A0),A0  
00002DFE  D401                    3155      ADD.B     D1,D2
00002E00  D311                    3156      ADD.B     D1,(A1)
00002E02  D319                    3157      ADD.B     D1,(A1)+
00002E04  D321                    3158      ADD.B     D1,-(A1)
00002E06  D211                    3159      ADD.B     (A1),D1
00002E08  D219                    3160      ADD.B     (A1)+,D1
00002E0A  D221                    3161      ADD.B     -(A1),D1
00002E0C  D441                    3162      ADD.W     D1,D2
00002E0E  D351                    3163      ADD.W     D1,(A1)
00002E10  D359                    3164      ADD.W     D1,(A1)+
00002E12  D361                    3165      ADD.W     D1,-(A1)
00002E14  D251                    3166      ADD.W     (A1),D1
00002E16  D259                    3167      ADD.W     (A1)+,D1
00002E18  D261                    3168      ADD.W     -(A1),D1
00002E1A  D481                    3169      ADD.L     D1,D2
00002E1C  D391                    3170      ADD.L     D1,(A1)
00002E1E  D399                    3171      ADD.L     D1,(A1)+
00002E20  D3A1                    3172      ADD.L     D1,-(A1)
00002E22  D291                    3173      ADD.L     (A1),D1
00002E24  D299                    3174      ADD.L     (A1)+,D1
00002E26  D2A1                    3175      ADD.L     -(A1),D1
00002E28  D4C1                    3176      ADDA.W        D1,A2
00002E2A  D4D1                    3177      ADDA.W        (A1),A2
00002E2C  D4D9                    3178      ADDA.W        (A1)+,A2
00002E2E  D4E1                    3179      ADDA.W        -(A1),A2
00002E30  D5C1                    3180      ADDA.L        D1,A2
00002E32  D5D1                    3181      ADDA.L        (A1),A2
00002E34  D5D9                    3182      ADDA.L        (A1)+,A2
00002E36  D5E1                    3183      ADDA.L        -(A1),A2
00002E38  9401                    3184      SUB.B     D1,D2
00002E3A  9311                    3185      SUB.B     D1,(A1)
00002E3C  9319                    3186      SUB.B     D1,(A1)+
00002E3E  9321                    3187      SUB.B     D1,-(A1)
00002E40  9211                    3188      SUB.B     (A1),D1
00002E42  9219                    3189      SUB.B     (A1)+,D1
00002E44  9221                    3190      SUB.B     -(A1),D1
00002E46  9441                    3191      SUB.W     D1,D2
00002E48  92C1                    3192      SUB.W     D1,A1
00002E4A  9351                    3193      SUB.W     D1,(A1)
00002E4C  9359                    3194      SUB.W     D1,(A1)+
00002E4E  9361                    3195      SUB.W     D1,-(A1)
00002E50  9249                    3196      SUB.W     A1,D1
00002E52  9251                    3197      SUB.W     (A1),D1
00002E54  9259                    3198      SUB.W     (A1)+,D1
00002E56  9261                    3199      SUB.W     -(A1),D1
00002E58  9481                    3200      SUB.L     D1,D2
00002E5A  93C1                    3201      SUB.L     D1,A1
00002E5C  9391                    3202      SUB.L     D1,(A1)
00002E5E  9399                    3203      SUB.L     D1,(A1)+
00002E60  93A1                    3204      SUB.L     D1,-(A1)
00002E62  9289                    3205      SUB.L     A1,D1
00002E64  9291                    3206      SUB.L     (A1),D1
00002E66  9299                    3207      SUB.L     (A1)+,D1
00002E68  92A1                    3208      SUB.L     -(A1),D1    
00002E6A  C3C0                    3209      MULS.W    D0,D1
00002E6C  C3D0                    3210      MULS.W    (A0),D1
00002E6E  C3E0                    3211      MULS.W    -(A0),D1
00002E70  C3D8                    3212      MULS.W    (A0)+,D1
00002E72  82C0                    3213      DIVU.W    D0,D1
00002E74  82D0                    3214      DIVU.W    (A0),D1
00002E76  82E0                    3215      DIVU.W    -(A0),D1
00002E78  82D8                    3216      DIVU.W    (A0)+,D1
00002E7A  C401                    3217      AND.B     D1,D2
00002E7C  C311                    3218      AND.B     D1,(A1)
00002E7E  C319                    3219      AND.B     D1,(A1)+
00002E80  C321                    3220      AND.B     D1,-(A1)
00002E82  C211                    3221      AND.B     (A1),D1
00002E84  C219                    3222      AND.B     (A1)+,D1
00002E86  C221                    3223      AND.B     -(A1),D1
00002E88  C441                    3224      AND.W     D1,D2
00002E8A  C351                    3225      AND.W     D1,(A1)
00002E8C  C359                    3226      AND.W     D1,(A1)+
00002E8E  C361                    3227      AND.W     D1,-(A1)
00002E90  C251                    3228      AND.W     (A1),D1
00002E92  C259                    3229      AND.W     (A1)+,D1
00002E94  C261                    3230      AND.W     -(A1),D1
00002E96  C481                    3231      AND.L     D1,D2
00002E98  C391                    3232      AND.L     D1,(A1)
00002E9A  C399                    3233      AND.L     D1,(A1)+
00002E9C  C3A1                    3234      AND.L     D1,-(A1)
00002E9E  C291                    3235      AND.L     (A1),D1
00002EA0  C299                    3236      AND.L     (A1)+,D1
00002EA2  C2A1                    3237      AND.L     -(A1),D1
00002EA4  8401                    3238      OR.B     D1,D2
00002EA6  8311                    3239      OR.B     D1,(A1)
00002EA8  8319                    3240      OR.B     D1,(A1)+
00002EAA  8321                    3241      OR.B     D1,-(A1)
00002EAC  8211                    3242      OR.B     (A1),D1
00002EAE  8219                    3243      OR.B     (A1)+,D1
00002EB0  8221                    3244      OR.B     -(A1),D1
00002EB2  8441                    3245      OR.W     D1,D2
00002EB4  8351                    3246      OR.W     D1,(A1)
00002EB6  8359                    3247      OR.W     D1,(A1)+
00002EB8  8361                    3248      OR.W     D1,-(A1)
00002EBA  8251                    3249      OR.W     (A1),D1
00002EBC  8259                    3250      OR.W     (A1)+,D1
00002EBE  8261                    3251      OR.W     -(A1),D1
00002EC0  8481                    3252      OR.L     D1,D2
00002EC2  8391                    3253      OR.L     D1,(A1)
00002EC4  8399                    3254      OR.L     D1,(A1)+
00002EC6  83A1                    3255      OR.L     D1,-(A1)
00002EC8  8291                    3256      OR.L     (A1),D1
00002ECA  8299                    3257      OR.L     (A1)+,D1
00002ECC  82A1                    3258      OR.L     -(A1),D1
00002ECE  E32A                    3259      LSL.B     D1,D2
00002ED0  E36A                    3260      LSL.W     D1,D2
00002ED2  E3D1                    3261      LSL.W     (A1)
00002ED4  E3D9                    3262      LSL.W     (A1)+
00002ED6  E3E1                    3263      LSL.W     -(A1)
00002ED8  E3AA                    3264      LSL.L     D1,D2
00002EDA  E22A                    3265      LSR.B     D1,D2
00002EDC  E26A                    3266      LSR.W     D1,D2
00002EDE  E2D1                    3267      LSR.W     (A1)
00002EE0  E2D9                    3268      LSR.W     (A1)+
00002EE2  E2E1                    3269      LSR.W     -(A1)
00002EE4  E2AA                    3270      LSR.L     D1,D2    
00002EE6  E222                    3271      ASR.B     D1,D2
00002EE8  E262                    3272      ASR.W     D1,D2
00002EEA  E0D1                    3273      ASR.W     (A1)
00002EEC  E0D9                    3274      ASR.W     (A1)+
00002EEE  E0E1                    3275      ASR.W     -(A1)
00002EF0  E2A2                    3276      ASR.L     D1,D2
00002EF2  E322                    3277      ASL.B     D1,D2
00002EF4  E362                    3278      ASL.W     D1,D2
00002EF6  E1D1                    3279      ASL.W     (A1)
00002EF8  E1D9                    3280      ASL.W     (A1)+
00002EFA  E1E1                    3281      ASL.W     -(A1)
00002EFC  E3A2                    3282      ASL.L     D1,D2  
00002EFE  6E30                    3283      BGT.B     label1
00002F00  6E40                    3284      BGT.B     label2
00002F02  6F2C                    3285      BLE.B     label1
00002F04  6F3C                    3286      BLE.B     label2
00002F06  6C28                    3287      BGE.B     label1
00002F08  6738                    3288      BEQ.B     label2
00002F0A  6700 0024               3289      BEQ.W     label1
00002F0E  4E90                    3290      JSR       (A0)
00002F10  4EB8 1234               3291      JSR       $1234
00002F14  4EB9 12345678           3292      JSR       $12345678
00002F1A  4EB9 00002F30           3293      JSR       label1
00002F20  4EB9 00002F42           3294      JSR       label2
00002F26  4EB9 00002F48           3295      JSR       label3
00002F2C  4E71                    3296      NOP
00002F2E  4E75                    3297      RTS
00002F30                          3298  label1
00002F30  4E71                    3299      NOP
00002F32  4E75                    3300      RTS
00002F34  41F8 0012               3301      LEA       $12,A0
00002F38  41F8 1234               3302      LEA       $1234,A0
00002F3C  41F9 12345678           3303      LEA       $12345678,A0
00002F42                          3304  label2
00002F42  7000                    3305      MOVEQ     #$0,D0
00002F44  7012                    3306      MOVEQ     #$12,D0
00002F46  70FF                    3307      MOVEQ     #$FF,D0
00002F48                          3308  label3
00002F48  48B8 FE00 0012          3309      MOVEM.W   A1-A7,$12
00002F4E  48F8 00FE 0012          3310      MOVEM.L   D1-D7,$12
00002F54  48B8 0280 0012          3311      MOVEM.W   A1/D7,$12
00002F5A  48F8 0280 0012          3312      MOVEM.L   A1/D7,$12
00002F60  48B8 FE00 1234          3313      MOVEM.W   A1-A7,$1234
00002F66  48F8 00FE 1234          3314      MOVEM.L   D1-D7,$1234
00002F6C  48B8 0280 1234          3315      MOVEM.W   A1/D7,$1234
00002F72  48F8 0280 1234          3316      MOVEM.L   A1/D7,$1234
00002F78  48B9 FE00 12345678      3317      MOVEM.W   A1-A7,$12345678
00002F80  48F9 00FE 12345678      3318      MOVEM.L   D1-D7,$12345678
00002F88  48B9 0280 12345678      3319      MOVEM.W   A1/D7,$12345678
00002F90  48F9 0280 12345678      3320      MOVEM.L   A1/D7,$12345678
00002F98  4CB8 FE00 0012          3321      MOVEM.W   $12,A1-A7
00002F9E  4CF8 00FE 0012          3322      MOVEM.L   $12,D1-D7
00002FA4  4CB8 0280 0012          3323      MOVEM.W   $12,A1/D7
00002FAA  4CF8 0280 0012          3324      MOVEM.L   $12,A1/D7
00002FB0  4CB8 FE00 1234          3325      MOVEM.W   $1234,A1-A7
00002FB6  4CF8 00FE 1234          3326      MOVEM.L   $1234,D1-D7
00002FBC  4CB8 0280 1234          3327      MOVEM.W   $1234,A1/D7
00002FC2  4CF8 0280 1234          3328      MOVEM.L   $1234,A1/D7
00002FC8  4CB9 FE00 12345678      3329      MOVEM.W   $12345678,A1-A7
00002FD0  4CF9 00FE 12345678      3330      MOVEM.L   $12345678,D1-D7
00002FD8  4CB9 0280 12345678      3331      MOVEM.W   $12345678,A1/D7
00002FE0  4CF9 0280 12345678      3332      MOVEM.L   $12345678,A1/D7
00002FE8  D4F8 0012               3333      ADDA.W    $12,A2
00002FEC  D4F8 1234               3334      ADDA.W    $1234,A2
00002FF0  D4F9 12345678           3335      ADDA.W    $12345678,A2
00002FF6  D4FC 1234               3336      ADDA.W    #$1234,A2
00002FFA  D5F8 0012               3337      ADDA.L    $12,A2
00002FFE  D5F8 1234               3338      ADDA.L    $1234,A2
00003002  D5F9 12345678           3339      ADDA.L    $12345678,A2
00003008  D5FC 12345678           3340      ADDA.L    #$12345678,A2
0000300E  C3F8 0012               3341      MULS.W    $12,D1
00003012  C3F8 1234               3342      MULS.W    $1234,D1
00003016  C3F9 12345678           3343      MULS.W    $12345678,D1
0000301C  C3FC 1234               3344      MULS.W    #$1234,D1
00003020  82F8 0012               3345      DIVU.W    $12,D1
00003024  82F8 1234               3346      DIVU.W    $1234,D1
00003028  82F9 12345678           3347      DIVU.W    $12345678,D1
0000302E  82FC 1234               3348      DIVU.W    #$1234,D1
00003032  C338 0012               3349      AND.B     D1,$12
00003036  C338 1234               3350      AND.B     D1,$1234
0000303A  C339 12345678           3351      AND.B     D1,$12345678
00003040  C238 0012               3352      AND.B     $12,D1
00003044  C238 1234               3353      AND.B     $1234,D1
00003048  C239 12345678           3354      AND.B     $12345678,D1
0000304E  C23C 0012               3355      AND.B     #$12,D1
00003052  C378 0012               3356      AND.W     D1,$12
00003056  C378 1234               3357      AND.W     D1,$1234
0000305A  C379 12345678           3358      AND.W     D1,$12345678
00003060  C278 0012               3359      AND.W     $12,D1
00003064  C278 1234               3360      AND.W     $1234,D1
00003068  C279 12345678           3361      AND.W     $12345678,D1
0000306E  C27C 1234               3362      AND.W     #$1234,D1
00003072  C3B8 0012               3363      AND.L     D1,$12
00003076  C3B8 1234               3364      AND.L     D1,$1234
0000307A  C3B9 12345678           3365      AND.L     D1,$12345678
00003080  C2B8 0012               3366      AND.L     $12,D1
00003084  C2B8 1234               3367      AND.L     $1234,D1
00003088  C2B9 12345678           3368      AND.L     $12345678,D1
0000308E  C2BC 12345678           3369      AND.L     #$12345678,D1
00003094  E30A                    3370      LSL.B     #$1,D2
00003096  E54A                    3371      LSL.W     #$2,D2
00003098  E78A                    3372      LSL.L     #$3,D2
0000309A  E3F8 0012               3373      LSL.W     $12
0000309E  E3F8 1234               3374      LSL.W     $1234
000030A2  E3F9 12345678           3375      LSL.W     $12345678
000030A8  E202                    3376      ASR.B     #$1,D2
000030AA  E442                    3377      ASR.W     #$2,D2
000030AC  E682                    3378      ASR.L     #$3,D2
000030AE  E0F8 0012               3379      ASR.W     $12
000030B2  E0F8 1234               3380      ASR.W     $1234
000030B6  E0F9 12345678           3381      ASR.W     $12345678
000030BC                          3382  label4
000030BC  6EFE                    3383      BGT.B     label4
000030BE  6EFC                    3384      BGT.B     label4
000030C0  6EFA                    3385      BGT.B     label4
000030C2  6F00 FE6C               3386      BLE.W     label1
000030C6  6F00 FE7A               3387      BLE.W     label2
000030CA  6F00 FE7C               3388      BLE.W     label3
000030CE  6700 FE60               3389      BEQ.W     label1
000030D2  6700 FE6E               3390      BEQ.W     label2
000030D6  6700 FE70               3391      BEQ.W     label3
000030DA  4EB8 2F30               3392      JSR       label1
000030DE  4EB8 2F42               3393      JSR       label2
000030E2  4EB8 2F48               3394      JSR       label3
000030E6                          3395  
000030E6                          3396  
000030E6                          3397  
000030E6                          3398  
000030E6                          3399  
000030E6                          3400  
000030E6                          3401  
000030E6                          3402  
000030E6                          3403  
000030E6                          3404  
000030E6                          3405  
000030E6                          3406  
000030E6                          3407  
000030E6                          3408  
000030E6                          3409  
000030E6                          3410  
000030E6                          3411  
000030E6                          3412  -------------------- end include --------------------
000030E6                          3413  
000030E6                          3414  
000030E6                          3415  
000030E6                          3416  
000030E6                          3417      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_EA_DEST        267A
ADDA_EA_IMM_LONG    264A
ADDA_EA_IMM_SOURCE  2618
ADDA_EA_IMM_WORD    2662
ADDA_EA_NON_IMM_SOURCE  25F8
ADDA_EA_SIZE_AND_EA  25B0
ADDA_MSG            2C14
ADDPM_EA            2272
ADDPP_EA            222A
ADDP_EA             21EE
ADDQ_ADD_COUNT_1_7  270A
ADDQ_ADD_COUNT_8    274A
ADDQ_EA_SIZE_AND_EA  26AA
ADDQ_MSG            2C19
ADDR_EA             21CA
ADDR_REG            2C35
ADD_MSG             2C22
ADD_SUB_EA_EA       27DE
ADD_SUB_EA_EA_IMM   280A
ADD_SUB_EA_EA_IMM_LONG  2842
ADD_SUB_EA_EA_IMM_WORD  284C
ADD_SUB_EA_REG      27AE
ADD_SUB_EA_SIZE     2784
AND_MSG             2C48
ASCII_DONE          1082
ASL_MSG             2C54
ASR_MSG             2C50
A_MSG               2BEF
BCC_MSG             2C78
BEQ_MSG             2C82
BGT_MSG             2C7E
BLE_MSG             2C7A
BRA_MSG             2BFF
BR_BYTE_DISPLACEMENT  24B0
BR_EA_SIZE_AND_DISPLACEMENT  2496
BR_WORD_DISPLACEMENT  24FE
BYTE_MSG            2C86
BYTE_SIZE           1D8E
B_MSG               2BF1
CHECK_OPCODES       11D2
CLOSE_PARENTHESIS_MSG  2C9B
COMMA_MSG           2C8F
CONVERT_TO_ASCII    106A
CR                  D
C_MSG               2BF3
DATAR_EA            21A6
DATA_7_0            234A
DATA_MSG            2C73
DATA_REG            2C33
DECR_1_A            1FF8
DECR_1_B            2002
DECR_2              200C
DECR_2_A            2018
DECR_2_B            2022
DECR_3              202C
DECR_3_A            203C
DECR_3_B            2044
DECR_SWAP           1FE6
DESTINATION_11_6    1E0A
DEST_A_EA           1E6E
DEST_DATA_EA        1F5E
DEST_PM_EA          1F16
DEST_PP_EA          1ECE
DEST_P_EA           1E92
DIV_SIGN            2C37
DOLLAR_MSG          2C91
DONE                11C0
DONE_MSG            2AFC
D_MSG               2BF5
EA_ABS_LONG         29EE
EA_ABS_WORD         29D6
EA_ADDR_REGISTER    28D6
EA_DATA_REGISTER    28AE
EA_INDIRECT         28FE
EA_INDIRECT_DECREMENT  298A
EA_INDIRECT_INCREMENT  293E
EFFECTIVEADD_5_0    1DCA
EIGHT_MSG           2BEB
ENDING_MSG          2ADA
END_ADDR            2BB0
EXIT_LOOP_DECR      1FCC
EXIT_LOOP_INCR      20C8
E_MSG               2BF7
FIVE_MSG            2BE5
FOUR_MSG            2BE3
F_MSG               2BF9
GET_BIT             1C7C
GET_EA              2856
HASH_MSG            2C93
IDATA               22EE
IDATA_BYTE          2320
IDATA_EA            22BA
IDATA_WORD          232A
INCR_1_A            20F4
INCR_1_B            20FE
INCR_2              2108
INCR_2_A            2114
INCR_2_B            211E
INCR_3              2128
INCR_3_A            2138
INCR_3_B            2140
INCR_SWAP           20E2
INSTRUCTION_DECODE_FAILURE  1C90
INTRO_MSG           2A90
INTRO_MSGS          1004
ISOLATE_15_11       12BA
ISOLATE_15_12       123C
ISOLATE_15_14       12CC
ISOLATE_15_6        1296
ISOLATE_15_8        12A8
ISOLATE_16          1288
ISOLATE_8_6         12DE
JSRMSG              2C39
JSR_MSG             2C3E
LABEL1              2F30
LABEL2              2F42
LABEL3              2F48
LABEL4              30BC
LEA_EA              2554
LEA_MSG             2C4C
LETTER_ASCII        1098
LF                  A
LONG_MSG            2C8C
LONG_SIZE           1DB6
LSL_MSG             2C5C
LSR_MSG             2C58
MEM_TO_REG          143E
MINUS_MSG           2C97
MOVEA_MSG           2C0E
MOVEM_MSG           2C08
MOVEQ_MSG           2C42
MOVE_MSG            2C03
MTR_1_A             149C
MTR_1_B             14AE
NEG_BYTE_DISPLACEMENT  24EC
NEG_WORD_DISPLACEMENT  2540
NEW_LINE            2C9D
NINE_MSG            2BED
NOP_MSG             2C2A
NOT_MSG             2BFB
NUMBER_ASCII        1084
ONE_MSG             2BDD
OPEN_PARENTHESIS_MSG  2C99
OPMODE_8_6          1CD8
OP_CODE_ADD         1900
OP_CODE_ADDA        17AE
OP_CODE_ADDQ        1870
OP_CODE_ADD_SUB     1940
OP_CODE_ADD_SUB_DEST_REG  1A30
OP_CODE_ADD_SUB_SOURCE_REG  1960
OP_CODE_AND         1B50
OP_CODE_AND2        1B9E
OP_CODE_BCC         16E8
OP_CODE_BEQ         1766
OP_CODE_BGT         1750
OP_CODE_BLE         173A
OP_CODE_BRA         177C
OP_CODE_JSR         1C58
OP_CODE_LEA         14C0
OP_CODE_LEA_PRINT   1540
OP_CODE_MEMORY_SHIFT_ROTATE  15F0
OP_CODE_MOVE        1320
OP_CODE_MOVEA       135C
OP_CODE_MOVEM       1398
OP_CODE_MOVEQ       1AF6
OP_CODE_NOP         16B4
OP_CODE_NOT         12F6
OP_CODE_OR          1BD4
OP_CODE_OR2         1C22
OP_CODE_REGISTER_SHIFT_ROTATE  159E
OP_CODE_RTS         16CE
OP_CODE_SHIFT_ROTATE  1562
OP_CODE_SUB         1920
OR_MSG              2C70
PAUSE_SCAN          1140
PLUS_MSG            2C95
POST_INCR_LOOP_TRACK  20A0
POST_INCR_LOOP_TRACK_SECOND  20AE
POST_INCR_LOOP_UNTRACK  20B4
POST_INCR_MASK_FIELD  208E
PREP_FOR_ROT        1D16
PRESS_ENTER_MSG     2B65
PRE_DECR_LOOP_TRACK  1FA4
PRE_DECR_LOOP_TRACK_SECOND  1FB2
PRE_DECR_LOOP_UNTRACK  1FB8
PRE_DECR_MASK_FIELD  1F92
PRINT_A_DECR        206C
PRINT_A_INCR        2168
PRINT_BYTE_VALUE    2A04
PRINT_BYTE_VALUE_LOOP  2A0A
PRINT_DESTINATION_DATA  1E4A
PRINT_DIV           2198
PRINT_DONE          1164
PRINT_D_DECR        204C
PRINT_D_INCR        2148
PRINT_LONG_VALUE    2A5E
PRINT_LONG_VALUE_LOOP  2A64
PRINT_LOOP          1112
PRINT_MEMORY_LOOP   10AC
PRINT_MINUS         218A
PRINT_WORD_VALUE    2A30
PRINT_WORD_VALUE_LOOP  2A36
REGISTER_11_9       1CC0
REG_TO_MEM          13CA
RESTART             1196
RESTART_MSG         2B10
RETURN              123A
REVERSE_DONE        1194
REVERSE_LOOP        1176
REVERSE_START       1166
ROL_MSG             2C6C
ROR_MSG             2C68
ROXL_MSG            2C64
ROXR_MSG            2C60
RTM_1_A             1406
RTM_1_B             1412
RTM_2               141E
RTS_MSG             2C26
SEVEN_MSG           2BE9
SHIFT_ROTATE_COUNT_1_7  244E
SHIFT_ROTATE_COUNT_8  2464
SHIFT_ROTATE_EA_MEMORY  2474
SHIFT_ROTATE_EA_REGISTER  2390
SHIFT_ROTATE_EA_SIZE  2360
SHIFT_ROTATE_IMM_SOURCE  2418
SHIFT_ROTATE_REGISTER_DEST  23DC
SHIFT_ROTATE_REGISTER_SOURCE  23AA
SIX_MSG             2BE7
SIZE_13_12          1D1E
SIZE_6              1D6E
SIZE_7_6            1D46
SPACE_MSG           2BD8
START               1000
STARTING_MSG        2AB6
STA_ADDR            2B88
SUB_MSG             2C1E
TEST                2CA0
TEST2               2D28
THREE_MSG           2BE1
TOTAL_DECODE_FAILURE  1C92
TWO_MSG             2BDF
TY_MSG              2B38
WADDR               2334
WHITESPACE          2C2E
WHITESPACE_COM      2C30
WORD_MSG            2C89
WORD_SIZE           1DA2
ZERO_MSG            2BDB
