00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 7/28/2022 1:08:47 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Disassembler
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  
00001000                            12  *------LEA = Load effective address
00001000                            13  *------Running Trap #15 while the number 14 is in D0 will print out whatever data is in the address stored in A1
00001000                            14  
00001000  43F9 0000177A             15          LEA         INTRO_MSG,      A1
00001006  103C 000E                 16          MOVE.B      #14,            D0    
0000100A  4E4F                      17          TRAP        #15
0000100C                            18          
0000100C  43F9 000017A0             19          LEA         STARTING_MSG,   A1
00001012  103C 000E                 20          MOVE.B      #14,            D0   
00001016  4E4F                      21          TRAP        #15
00001018                            22          
00001018                            23  *----------------- 
00001018                            24  *       Running trap command 15 while the number 2 is in D0 
00001018                            25  *       Will ask the user to enter input
00001018                            26  *       after the user hits enter, the length of the input is stored in D1
00001018                            27  *       and the user data is stored in the space allocated by STA_ADDR repressented by ASSCI code
00001018                            28  *       IE 31 = 1, 32 = 2 etc etc
00001018                            29  *       If I store the number 1200, it will appear in memory as 31 32 30 30
00001018                            30  
00001018  43F9 000017FA             31          LEA         STA_ADDR,       A1
0000101E  103C 0002                 32          MOVE.B      #2,             D0
00001022  4E4F                      33          TRAP        #15
00001024                            34          
00001024  4EB9 00001056             35          JSR         CONVERT_TO_ASCII
0000102A                            36          
0000102A                            37          * A3 now has our Starting Address
0000102A  2647                      38          MOVEA.L     D7,             A3
0000102C                            39          
0000102C  4282                      40          CLR.L       D2
0000102E  4287                      41          CLR.L       D7
00001030                            42          
00001030  43F9 000017C4             43          LEA         ENDING_MSG,     A1
00001036  103C 000E                 44          MOVE.B      #14,            D0
0000103A  4E4F                      45          TRAP        #15
0000103C                            46          
0000103C  43F9 00001822             47          LEA         END_ADDR,       A1
00001042  103C 0002                 48          MOVE.B      #2,             D0
00001046  4E4F                      49          TRAP        #15
00001048                            50          
00001048  4EB9 00001056             51          JSR         CONVERT_TO_ASCII
0000104E                            52          * A4 now has our Ending Address
0000104E  2847                      53          MOVEA.L     D7,             A4
00001050                            54          
00001050                            55  
00001050  4EB9 00001098             56          JSR         PRINT_MEMORY_LOOP
00001056                            57          
00001056                            58          
00001056                            59          
00001056                            60          *BRA         DONE
00001056                            61          *   ASCII conversion
00001056                            62  *---------------------------------------        
00001056                            63  CONVERT_TO_ASCII:             
00001056  0C01 0000                 64          CMPI.B      #$0,            D1
0000105A  6700 0012                 65          BEQ         ASCII_DONE
0000105E  1419                      66          MOVE.B      (A1)+,          D2
00001060  103C 0039                 67          MOVE.B      #$39,           D0
00001064  B400                      68          CMP.B       D0,             D2
00001066  6F00 0008                 69          BLE         NUMBER_ASCII   
0000106A  6000 0018                 70          BRA         LETTER_ASCII  
0000106E                            71  
0000106E                            72  ASCII_DONE:
0000106E  4E75                      73          RTS
00001070                            74          
00001070                            75  NUMBER_ASCII:
00001070  5301                      76          SUBI.B      #$1,            D1
00001072  103C 0030                 77          MOVE.B      #$30,           D0
00001076  9400                      78          SUB.B       D0,             D2
00001078  DE02                      79          ADD.B       D2,             D7
0000107A  0C01 0000                 80          CMPI.B      #$0,            D1
0000107E  67EE                      81          BEQ         ASCII_DONE
00001080  E987                      82          ASL.L       #4,             D7
00001082  60D2                      83          BRA         CONVERT_TO_ASCII
00001084                            84  LETTER_ASCII:
00001084  5301                      85          SUBI.B      #$1,            D1
00001086  103C 0037                 86          MOVE.B      #$37,           D0
0000108A  9400                      87          SUB.B       D0,             D2
0000108C  DE02                      88          ADD.B       D2,             D7
0000108E  0C01 0000                 89          CMPI.B      #$0,            D1
00001092  67DA                      90          BEQ         ASCII_DONE
00001094  E987                      91          ASL.L       #4,             D7
00001096  60BE                      92          BRA         CONVERT_TO_ASCII
00001098                            93  *---------------------------------------        
00001098                            94          
00001098                            95          
00001098                            96          *   Printing data and addresses
00001098                            97  *---------------------------------------
00001098                            98  
00001098                            99  PRINT_MEMORY_LOOP:
00001098                           100          * add code here to compare current address with end address
00001098                           101          
00001098                           102          * if equal to, or further than ending address jump to DONE
00001098                           103          * SIMHALT
00001098  B9CB                     104          CMP.L       A3,             A4
0000109A  6700 00BC                105          BEQ         DONE
0000109E  6F00 00B8                106          BLE         DONE
000010A2                           107          
000010A2                           108          * We are goiong to keep track of the number of byts we have examined using D1
000010A2                           109          * Before printing the address we have to reverse the order
000010A2  4281                     110          CLR.L       D1
000010A4  4282                     111          CLR.L       D2
000010A6  123C 0008                112          MOVE.B      #$8,            D1
000010AA  260B                     113          MOVE.L      A3,             D3
000010AC  4EB9 00001128            114          JSR         REVERSE_START
000010B2                           115          
000010B2  2607                     116          MOVE.L      D7,             D3
000010B4  4281                     117          CLR.L       D1
000010B6  4282                     118          CLR.L       D2
000010B8  123C 0008                119          MOVE.B      #$8,            D1
000010BC  4EB9 000010F8            120          JSR         PRINT_LOOP
000010C2                           121          
000010C2                           122          
000010C2                           123          * space between address and data
000010C2  43F9 0000184A            124          LEA         SPACE_MSG,      A1
000010C8  103C 000E                125          MOVE.B      #14,            D0    
000010CC  4E4F                     126          TRAP        #15
000010CE                           127          
000010CE  4281                     128          CLR.L       D1
000010D0  4282                     129          CLR.L       D2
000010D2  123C 0008                130          MOVE.B      #$8,            D1
000010D6  361B                     131          MOVE.W      (A3)+,          D3
000010D8                           132          *JSR         REVERSE_START
000010D8                           133          
000010D8                           134          *MOVE.L      D7,             D3
000010D8  4281                     135          CLR.L       D1
000010DA  4282                     136          CLR.L       D2
000010DC                           137          *MOVE.B      #$8,            D1
000010DC                           138          *JSR         PRINT_LOOP
000010DC                           139          
000010DC                           140          * Jump to Function in another file
000010DC  4EB9 0000116A            141          JSR         CHECK_OPCODES
000010E2                           142          
000010E2                           143          
000010E2  4281                     144          CLR.L       D1
000010E4  4282                     145          CLR.L       D2
000010E6  4283                     146          CLR.L       D3
000010E8  4284                     147          CLR.L       D4
000010EA                           148          * new line
000010EA  43F9 0000186D            149          LEA         NEW_LINE,       A1
000010F0  103C 000E                150          MOVE.B      #14,            D0    
000010F4  4E4F                     151          TRAP        #15
000010F6                           152  
000010F6                           153          * branch to the start of this method
000010F6  60A0                     154          BRA         PRINT_MEMORY_LOOP
000010F8                           155  
000010F8                           156  
000010F8                           157  PRINT_LOOP:
000010F8                           158  
000010F8                           159          
000010F8                           160          * When D1 == 0, we are done and exit this loop
000010F8  0C01 0000                161          CMPI.B      #$0,            D1
000010FC  6700 0028                162          BEQ         PRINT_DONE
00001100  5301                     163          SUBI.B      #$1,            D1
00001102                           164          
00001102  1403                     165          MOVE.B      D3,             D2
00001104                           166          * Bit shifting to isolate the right most digit
00001104                           167          * 1234 5678 => 8000 0000 => 0000 0008
00001104  103C 001C                168          MOVE.B      #28,            D0    
00001108  E1AA                     169          LSL.L       D0,             D2     
0000110A  E99A                     170          ROL.L       #4,             D2 
0000110C                           171          
0000110C                           172          * Bit shifting to prep the next digit
0000110C                           173          * 1234 4567 => 0123 4567
0000110C  E88B                     174          LSR.L       #4, D3
0000110E                           175          
0000110E                           176          *Assuming D4 is empty
0000110E                           177          
0000110E  1802                     178          MOVE.B       D2,            D4
00001110  43F9 0000184D            179          LEA          ZERO_MSG,      A1
00001116                           180          * load the address of Zero_msg
00001116                           181          * because all of the msgs are stored next to each other in order
00001116                           182          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001116                           183          * and then add it to the address starting at zero_msg
00001116  C8FC 0002                184          MULU         #2,            D4
0000111A  D3C4                     185          ADDA.L       D4,            A1
0000111C                           186          
0000111C                           187          * trap command 14 reads whatever address is in A1, and then spits out the data to the console
0000111C  103C 000E                188          MOVE.B       #14,           D0
00001120  4E4F                     189          TRAP         #15
00001122  60D4                     190          BRA          PRINT_LOOP
00001124  4644                     191          NOT          D4
00001126                           192          
00001126                           193  PRINT_DONE:
00001126  4E75                     194          RTS
00001128                           195          
00001128                           196      *   Reversing the address
00001128                           197  *---------------------------------------
00001128                           198  
00001128                           199  REVERSE_START:        
00001128  4281                     200          CLR.L       D1
0000112A  4287                     201          CLR.L       D7
0000112C  123C 0008                202          MOVE.B      #8,             D1
00001130  4EB9 00001138            203          JSR         REVERSE_LOOP
00001136  4E75                     204          RTS
00001138                           205          
00001138                           206  REVERSE_LOOP:
00001138                           207  
00001138                           208          
00001138  0C01 0000                209          CMPI.B      #$0,            D1
0000113C  6700 0018                210          BEQ         REVERSE_DONE
00001140  5301                     211          SUBI.B      #$1,            D1
00001142  E987                     212          ASL.L       #4,             D7
00001144                           213          
00001144  4285                     214          CLR.L       D5
00001146                           215          
00001146  1A03                     216          MOVE.B      D3,             D5
00001148                           217          
00001148  103C 001C                218          MOVE.B      #28,            D0    
0000114C  E1AD                     219          LSL.L       D0,             D5     
0000114E  E99D                     220          ROL.L       #4,             D5
00001150                           221          
00001150  DE05                     222          ADD.B       D5,             D7
00001152                           223          
00001152                           224          
00001152  E883                     225          ASR.L       #4,             D3
00001154                           226          
00001154  60E2                     227          BRA         REVERSE_LOOP
00001156                           228  
00001156                           229  REVERSE_DONE:
00001156  4E75                     230          RTS
00001158                           231  DONE:
00001158                           232  
00001158  43F9 000017E6            233          LEA         GOODBYE_MSG,    A1
0000115E  103C 000E                234          MOVE.B      #14,            D0
00001162  4E4F                     235          TRAP        #15
00001164  103C 0009                236          MOVE.B      #9,             D0
00001168  4E4F                     237          TRAP        #15        
0000116A                           238          
0000116A                           239  
0000116A                           240      *SIMHALT             ; halt simulator
0000116A                           241  
0000116A                           242      INCLUDE         'Disassembler_OPCodes.x68'
0000116A                           243  
0000116A                           244  
0000116A                           245  CHECK_OPCODES:
0000116A                           246  
0000116A  4EB9 0000117E            247          JSR     ISOLATE_15_6
00001170  4EB9 0000118E            248          JSR     ISOLATE_15_8
00001176  4EB9 000011A6            249          JSR     ISOLATE_15_12
0000117C  4E75                     250          RTS
0000117E                           251          
0000117E                           252  ISOLATE_15_6:
0000117E                           253          
0000117E  2803                     254          MOVE.L      D3,     D4
00001180  7406                     255          MOVE.L      #6,     D2
00001182  E4AC                     256          LSR.L       D2,     D4
00001184                           257          
00001184  B87C 013A                258          CMP.W       #$13A,  D4
00001188  6700 0060                259          BEQ         OP_CODE_JSR
0000118C                           260          
0000118C  4E75                     261          RTS
0000118E                           262  
0000118E                           263  
0000118E                           264  ISOLATE_15_8:
0000118E                           265          *SIMHALT
0000118E  2803                     266          MOVE.L      D3,     D4
00001190  7408                     267          MOVE.L      #8,     D2
00001192  E4AC                     268          LSR.L       D2,     D4
00001194                           269          
00001194  B83C 0046                270          CMP.B       #$46,   D4
00001198  6700 0034                271          BEQ         OP_CODE_NOT
0000119C  B83C 0060                272          CMP.B       #$60,   D4
000011A0  6700 003A                273          BEQ         OP_CODE_BRA
000011A4                           274  
000011A4  4E75                     275          RTS
000011A6                           276          
000011A6                           277  ISOLATE_15_12:
000011A6  2803                     278          MOVE.L      D3,     D4
000011A8  740C                     279          MOVE.L      #12,    D2
000011AA  E4AC                     280          LSR.L       D2,     D4
000011AC                           281          
000011AC  B83C 0007                282          CMP.B       #$7,    D4
000011B0  6700 0046                283          BEQ         OP_CODE_MOVEQ
000011B4  B83C 0008                284          CMP.B       #$8,    D4
000011B8  6700 0190                285          BEQ         OP_CODE_OR      *may get confused with DIVU + any other opcodes that start with 1000 (ones that we are not required to cover)
000011BC  B83C 000C                286          CMP.B       #$C,    D4
000011C0  6700 0044                287          BEQ         OP_CODE_AND
000011C4                           288          *If the 15-12 are 0110
000011C4  B83C 0006                289          CMP.B       #6,     D4
000011C8  6700 004A                290          BEQ         OP_CODE_BCC
000011CC  4E75                     291          RTS
000011CE                           292  
000011CE                           293  
000011CE                           294  
000011CE                           295  OP_CODE_NOT:
000011CE  43F9 0000138A            296          LEA         NOT_MSG, A1
000011D4  103C 000E                297          MOVE.B      #14, D0
000011D8  4E4F                     298          TRAP        #15
000011DA                           299          
000011DA  4E75                     300          RTS 
000011DC                           301  OP_CODE_BRA:
000011DC  43F9 0000138E            302          LEA         BRA_MSG, A1
000011E2  103C 000E                303          MOVE.B      #14, D0
000011E6  4E4F                     304          TRAP        #15
000011E8                           305          
000011E8  4E75                     306          RTS 
000011EA                           307  OP_CODE_JSR:
000011EA  43F9 00001392            308          LEA         JSR_MSG, A1
000011F0  103C 000E                309          MOVE.B      #14, D0
000011F4  4E4F                     310          TRAP        #15
000011F6                           311          
000011F6  4E75                     312          RTS
000011F8                           313  OP_CODE_MOVEQ:
000011F8  43F9 00001396            314          LEA         MOVEQ_MSG, A1
000011FE  103C 000E                315          MOVE.B      #14, D0
00001202  4E4F                     316          TRAP        #15
00001204                           317          
00001204  4E75                     318          RTS
00001206                           319  OP_CODE_AND:
00001206  43F9 0000139C            320          LEA         AND_MSG, A1
0000120C  103C 000E                321          MOVE.B      #14, D0
00001210  4E4F                     322          TRAP        #15
00001212                           323          
00001212  4E75                     324          RTS
00001214                           325  
00001214                           326  OP_CODE_BCC
00001214                           327          *Get bits from 8-11 to get the condition
00001214                           328          *Only checking for (BGT, BLE, BEQ). Rest are considered
00001214                           329          *invalid
00001214  48E7 0600                330          MOVEM.L    D5-D6, -(A7)
00001218  7A08                     331          MOVE.L     #8, D5
0000121A  7C0B                     332          MOVE.L     #11, D6
0000121C  4EB9 00001378            333          JSR        GET_BIT
00001222  4CDF 0060                334          MOVEM.L    (A7)+, D5-D6
00001226  B8BC 0000000F            335          CMP.L      #15, D4
0000122C  6700 0018                336          BEQ        OP_CODE_BLE
00001230  B8BC 0000000E            337          CMP.L      #14, D4
00001236  6700 001E                338          BEQ        OP_CODE_BGT
0000123A  B8BC 00000007            339          CMP.L      #7,  D4
00001240  6700 0024                340          BEQ        OP_CODE_BEQ
00001244                           341          *Invalid instruction for the scope
00001244  4E75                     342          RTS
00001246                           343  
00001246                           344  
00001246                           345  OP_CODE_BLE
00001246  43F9 000013AA            346          LEA         BLE_MSG, A1
0000124C  103C 000E                347          MOVE.B      #14, D0
00001250  4E4F                     348          TRAP        #15
00001252  6000 0022                349          BRA PRINT_BCC_SIZE_ATTR
00001256                           350  
00001256                           351  OP_CODE_BGT
00001256  43F9 000013AE            352          LEA         BGT_MSG, A1
0000125C  103C 000E                353          MOVE.B      #14, D0
00001260  4E4F                     354          TRAP        #15
00001262  6000 0012                355          BRA PRINT_BCC_SIZE_ATTR
00001266                           356  
00001266                           357  
00001266                           358  OP_CODE_BEQ
00001266  43F9 000013B2            359          LEA         BEQ_MSG, A1
0000126C  103C 000E                360          MOVE.B      #14, D0
00001270  4E4F                     361          TRAP        #15
00001272  6000 0002                362          BRA PRINT_BCC_SIZE_ATTR
00001276                           363  
00001276                           364  
00001276                           365  PRINT_BCC_SIZE_ATTR
00001276  48E7 0600                366          MOVEM.L    D5-D6, -(A7)
0000127A  7A08                     367          MOVE.L     #8, D5
0000127C  7C0B                     368          MOVE.L     #11, D6
0000127E  4EB9 00001378            369          JSR        GET_BIT
00001284  4CDF 0060                370          MOVEM.L    (A7)+, D5-D6
00001288  B8BC 00000000            371          CMP.L      #0, D4
0000128E  6700 0066                372          BEQ        PRINT_WORD_SIZE_ATTR
00001292                           373  PRINT_BYTE_SIZE_ATTR
00001292  43F9 000013B6            374          LEA         BYTE_MSG, A1
00001298  103C 000E                375          MOVE.B      #14, D0
0000129C  4E4F                     376          TRAP        #15
0000129E  43F9 0000184A            377          LEA         SPACE_MSG,      A1
000012A4  103C 000E                378          MOVE.B      #14,            D0    
000012A8  4E4F                     379          TRAP        #15
000012AA  48E7 0600                380          MOVEM.L    D5-D6, -(A7)
000012AE  7A00                     381          MOVE.L     #0, D5
000012B0  7C07                     382          MOVE.L     #7, D6
000012B2  4EB9 00001378            383          JSR        GET_BIT
000012B8  4CDF 0060                384          MOVEM.L    (A7)+, D5-D6
000012BC                           385  
000012BC                           386  
000012BC  48E7 0600                387          MOVEM.L    D5-D6, -(A7)
000012C0  7C08                     388          MOVE.L     #8, D6
000012C2                           389  BYTE_DISPLACEMENT_PRINT_LOOP
000012C2                           390          *Gets the most significant bit basically
000012C2                           391          *Could use GET_BIT subroutine but it is 
000012C2                           392          *costly in terms of registers used
000012C2  1A04                     393          MOVE.B     D4, D5
000012C4  0205 0080                394          ANDI.B     #$80, D5
000012C8  EE0D                     395          LSR.B      #7, D5
000012CA  43F9 0000184D            396          LEA        ZERO_MSG,      A1
000012D0                           397          * load the address of Zero_msg
000012D0                           398          * because all of the msgs are stored next to each other in order
000012D0                           399          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
000012D0                           400          * and then add it to the address starting at zero_msg
000012D0  CAFC 0002                401          MULU         #2,            D5
000012D4  D3C5                     402          ADDA.L       D5,            A1
000012D6  103C 000E                403          MOVE.B      #14, D0
000012DA  4E4F                     404          TRAP        #15
000012DC  5386                     405          SUBI.L      #1, D6
000012DE  BC3C 0000                406          CMP.B        #0, D6
000012E2  66DE                     407          BNE         BYTE_DISPLACEMENT_PRINT_LOOP
000012E4                           408          
000012E4  43F9 0000186D            409          LEA         NEW_LINE,       A1
000012EA  103C 000E                410          MOVE.B      #14,            D0    
000012EE  4E4F                     411          TRAP        #15
000012F0  4CDF 0060                412          MOVEM.L    (A7)+, D5-D6
000012F4  4E75                     413          RTS
000012F6                           414          
000012F6                           415  PRINT_WORD_SIZE_ATTR
000012F6  43F9 000013B9            416          LEA         WORD_MSG, A1
000012FC  103C 000E                417          MOVE.B      #14, D0
00001300  4E4F                     418          TRAP        #15
00001302  43F9 0000184A            419          LEA         SPACE_MSG,      A1
00001308  103C 000E                420          MOVE.B      #14,            D0    
0000130C  4E4F                     421          TRAP        #15
0000130E  361B                     422          MOVE.W      (A3)+,  D3
00001310                           423          
00001310                           424  
00001310  48E7 0600                425          MOVEM.L    D5-D6, -(A7)
00001314  7C10                     426          MOVE.L     #16, D6
00001316                           427  WORD_DISPLACEMENT_PRINT_LOOP
00001316                           428          *Gets the most significant bit basically
00001316                           429          *Could use GET_BIT subroutine but it is 
00001316                           430          *costly in terms of registers used
00001316  1A04                     431          MOVE.B     D4, D5
00001318  0205 0080                432          ANDI.B     #$80, D5
0000131C  EE0D                     433          LSR.B      #7, D5
0000131E  43F9 0000184D            434          LEA        ZERO_MSG,      A1
00001324                           435          * load the address of Zero_msg
00001324                           436          * because all of the msgs are stored next to each other in order
00001324                           437          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001324                           438          * and then add it to the address starting at zero_msg
00001324  CAFC 0002                439          MULU         #2,            D5
00001328  D3C5                     440          ADDA.L       D5,            A1
0000132A  103C 000E                441          MOVE.B      #14, D0
0000132E  4E4F                     442          TRAP        #15
00001330  5386                     443          SUBI.L      #1, D6
00001332  BC3C 0000                444          CMP.B       #0, D6
00001336  66DE                     445          BNE         WORD_DISPLACEMENT_PRINT_LOOP
00001338                           446          
00001338  43F9 0000186D            447          LEA         NEW_LINE,       A1
0000133E  103C 000E                448          MOVE.B      #14,            D0    
00001342  4E4F                     449          TRAP        #15
00001344  4CDF 0060                450          MOVEM.L    (A7)+, D5-D6
00001348  4E75                     451          RTS
0000134A                           452          
0000134A                           453  
0000134A                           454  OP_CODE_OR:
0000134A                           455          *check for divu/other opcodes that start with 1000
0000134A                           456          *isolate bits 8-6 to check for DIVU
0000134A  2803                     457          MOVE.L      D3,     D4
0000134C  7407                     458          MOVE.L      #7,     D2
0000134E  E56C                     459          LSL.W       D2,     D4
00001350  740D                     460          MOVE.L      #13,    D2
00001352  E46C                     461          LSR.W       D2,     D4
00001354                           462          
00001354  B83C 0003                463          CMP.B       #$3,    D4
00001358  6700 0010                464          BEQ         OP_CODE_DATA
0000135C                           465          
0000135C  43F9 000013A0            466          LEA         OR_MSG, A1
00001362  103C 000E                467          MOVE.B      #14, D0
00001366  4E4F                     468          TRAP        #15
00001368                           469          
00001368  4E75                     470          RTS
0000136A                           471  OP_CODE_DATA:
0000136A  43F9 000013A3            472          LEA         DATA_MSG, A1
00001370  103C 000E                473          MOVE.B      #14, D0
00001374  4E4F                     474          TRAP        #15
00001376                           475          
00001376  4E75                     476          RTS        
00001378                           477  
00001378                           478  
00001378                           479  
00001378                           480  GET_BIT
00001378  4284                     481          CLR.L   D4
0000137A  3803                     482          MOVE.W  D3, D4   
0000137C                           483          *Shift it to left by 15-y to get rid of all the bits to the left of yth bit 
0000137C                           484          *and then shift the bits such that the xth bit is the 0th bit
0000137C  4486                     485          NEG.L   D6
0000137E  0686 0000000F            486          ADDI.L  #15, D6
00001384  ED6C                     487          LSL.W   D6, D4 
00001386  EA6C                     488          LSR.W   D5, D4
00001388  4E75                     489          RTS
0000138A                           490  
0000138A                           491  
0000138A                           492  
0000138A                           493  
0000138A= 4E 4F 54 00              494  NOT_MSG:        DC.B        'NOT',0
0000138E= 42 52 41 00              495  BRA_MSG:        DC.B        'BRA',0
00001392= 4A 53 52 00              496  JSR_MSG:        DC.B        'JSR',0
00001396= 4D 4F 56 45 51 00        497  MOVEQ_MSG:      DC.B        'MOVEQ',0
0000139C= 41 4E 44 00              498  AND_MSG:        DC.B        'AND',0
000013A0= 4F 52 00                 499  OR_MSG:         DC.B        'OR',0
000013A3= 44 41 54 41 00           500  DATA_MSG:       DC.B        'DATA',0
000013A8= 42 00                    501  BCC_MSG         DC.B        'B', 0
000013AA= 42 4C 45 00              502  BLE_MSG         DC.B        'BLE', 0
000013AE= 42 47 54 00              503  BGT_MSG         DC.B        'BGT',0
000013B2= 42 45 51 00              504  BEQ_MSG         DC.B        'BEQ',0
000013B6= 2E 42 00                 505  BYTE_MSG        DC.B        '.B', 0
000013B9= 2E 57 00                 506  WORD_MSG        DC.B        '.W', 0
000013BC                           507  
000013BC                           508  
000013BC                           509  
000013BC                           510  
000013BC                           511  -------------------- end include --------------------
000013BC                           512      INCLUDE         'demo_test.x68'
000013BC                           513  
000013BC                           514  
000013BC                           515  
000013BC                           516  
000013BC                           517  NOP
000013BC  4E75                     518      RTS
000013BE  4E71                     519      NOP
000013C0  4E75                     520      RTS
000013C2  41D0                     521      LEA     (A0),A0
000013C4  41D5                     522      LEA     (A5),A0
000013C6  41D7                     523      LEA     (A7),A0
000013C8  4FD0                     524      LEA     (A0),A7
000013CA  4FD5                     525      LEA     (A5),A7
000013CC  4FD7                     526      LEA     (A7),A7
000013CE  1200                     527      MOVE.B    D0,D1
000013D0  1080                     528      MOVE.B    D0,(A0)
000013D2  10C0                     529      MOVE.B    D0,(A0)+
000013D4  1100                     530      MOVE.B    D0,-(A0)
000013D6  1010                     531      MOVE.B    (A0),D0
000013D8  1290                     532      MOVE.B    (A0),(A1)
000013DA  12D0                     533      MOVE.B    (A0),(A1)+
000013DC  1310                     534      MOVE.B    (A0),-(A1)
000013DE  1018                     535      MOVE.B    (A0)+,D0
000013E0  1298                     536      MOVE.B    (A0)+,(A1)
000013E2  12D8                     537      MOVE.B    (A0)+,(A1)+
000013E4  1318                     538      MOVE.B    (A0)+,-(A1)
000013E6  1020                     539      MOVE.B    -(A0),D0
000013E8  12A0                     540      MOVE.B    -(A0),(A1)
000013EA  12E0                     541      MOVE.B    -(A0),(A1)+
000013EC  1320                     542      MOVE.B    -(A0),-(A1)
000013EE  3200                     543      MOVE.W    D0,D1
000013F0  3080                     544      MOVE.W    D0,(A0)
000013F2  30C0                     545      MOVE.W    D0,(A0)+
000013F4  3100                     546      MOVE.W    D0,-(A0)
000013F6  3008                     547      MOVE.W    A0,D0
000013F8  3288                     548      MOVE.W    A0,(A1)
000013FA  32C8                     549      MOVE.W    A0,(A1)+
000013FC  3308                     550      MOVE.W    A0,-(A1)
000013FE  3010                     551      MOVE.W    (A0),D0
00001400  3290                     552      MOVE.W    (A0),(A1)
00001402  32D0                     553      MOVE.W    (A0),(A1)+
00001404  3310                     554      MOVE.W    (A0),-(A1)
00001406  3018                     555      MOVE.W    (A0)+,D0
00001408  3298                     556      MOVE.W    (A0)+,(A1)
0000140A  32D8                     557      MOVE.W    (A0)+,(A1)+
0000140C  3318                     558      MOVE.W    (A0)+,-(A1)
0000140E  3020                     559      MOVE.W    -(A0),D0
00001410  32A0                     560      MOVE.W    -(A0),(A1)
00001412  32E0                     561      MOVE.W    -(A0),(A1)+
00001414  3320                     562      MOVE.W    -(A0),-(A1)
00001416  2200                     563      MOVE.L    D0,D1
00001418  2080                     564      MOVE.L    D0,(A0)
0000141A  20C0                     565      MOVE.L    D0,(A0)+
0000141C  2100                     566      MOVE.L    D0,-(A0)
0000141E  2008                     567      MOVE.L    A0,D0
00001420  2288                     568      MOVE.L    A0,(A1)
00001422  22C8                     569      MOVE.L    A0,(A1)+
00001424  2308                     570      MOVE.L    A0,-(A1)
00001426  2010                     571      MOVE.L    (A0),D0
00001428  2290                     572      MOVE.L    (A0),(A1)
0000142A  22D0                     573      MOVE.L    (A0),(A1)+
0000142C  2310                     574      MOVE.L    (A0),-(A1)
0000142E  2018                     575      MOVE.L    (A0)+,D0
00001430  2298                     576      MOVE.L    (A0)+,(A1)
00001432  22D8                     577      MOVE.L    (A0)+,(A1)+
00001434  2318                     578      MOVE.L    (A0)+,-(A1)
00001436  2020                     579      MOVE.L    -(A0),D0
00001438  22A0                     580      MOVE.L    -(A0),(A1)
0000143A  22E0                     581      MOVE.L    -(A0),(A1)+
0000143C  2320                     582      MOVE.L    -(A0),-(A1)
0000143E  48A1 007F                583      MOVEM.W   A1-A7,-(A1)
00001442  48E1 7F00                584      MOVEM.L   D1-D7,-(A1)
00001446  48A1 0140                585      MOVEM.W   A1/D7,-(A1)
0000144A  48E1 0140                586      MOVEM.L   A1/D7,-(A1)
0000144E  4891 FE00                587      MOVEM.W   A1-A7,(A1)
00001452  48D1 00FE                588      MOVEM.L   D1-D7,(A1)
00001456  4891 0280                589      MOVEM.W   A1/D7,(A1)
0000145A  48D1 0280                590      MOVEM.L   A1/D7,(A1)
0000145E  4C99 FE00                591      MOVEM.W   (A1)+,A1-A7
00001462  4CD9 00FE                592      MOVEM.L   (A1)+,D1-D7
00001466  4C99 0280                593      MOVEM.W   (A1)+,A1/D7
0000146A  4CD9 0280                594      MOVEM.L   (A1)+,A1/D7
0000146E  4C91 FE00                595      MOVEM.W   (A1),A1-A7
00001472  4CD1 00FE                596      MOVEM.L   (A1),D1-D7
00001476  4C91 0280                597      MOVEM.W   (A1),A1/D7
0000147A  4CD1 0280                598      MOVEM.L   (A1),A1/D7
0000147E  3040                     599      MOVEA.W    D0,A0
00001480  3048                     600      MOVEA.W    A0,A0
00001482  3050                     601      MOVEA.W    (A0),A0
00001484  3058                     602      MOVEA.W    (A0)+,A0
00001486  3060                     603      MOVEA.W    -(A0),A0
00001488  2040                     604      MOVEA.L    D0,A0
0000148A  2048                     605      MOVEA.L    A0,A0
0000148C  2050                     606      MOVEA.L    (A0),A0
0000148E  2058                     607      MOVEA.L    (A0)+,A0
00001490  2060                     608      MOVEA.L    -(A0),A0  
00001492  D401                     609      ADD.B     D1,D2
00001494  D311                     610      ADD.B     D1,(A1)
00001496  D319                     611      ADD.B     D1,(A1)+
00001498  D321                     612      ADD.B     D1,-(A1)
0000149A  D211                     613      ADD.B     (A1),D1
0000149C  D219                     614      ADD.B     (A1)+,D1
0000149E  D221                     615      ADD.B     -(A1),D1
000014A0  D441                     616      ADD.W     D1,D2
000014A2  D351                     617      ADD.W     D1,(A1)
000014A4  D359                     618      ADD.W     D1,(A1)+
000014A6  D361                     619      ADD.W     D1,-(A1)
000014A8  D251                     620      ADD.W     (A1),D1
000014AA  D259                     621      ADD.W     (A1)+,D1
000014AC  D261                     622      ADD.W     -(A1),D1
000014AE  D481                     623      ADD.L     D1,D2
000014B0  D391                     624      ADD.L     D1,(A1)
000014B2  D399                     625      ADD.L     D1,(A1)+
000014B4  D3A1                     626      ADD.L     D1,-(A1)
000014B6  D291                     627      ADD.L     (A1),D1
000014B8  D299                     628      ADD.L     (A1)+,D1
000014BA  D2A1                     629      ADD.L     -(A1),D1
000014BC  D4C1                     630      ADDA.W        D1,A2
000014BE  D4D1                     631      ADDA.W        (A1),A2
000014C0  D4D9                     632      ADDA.W        (A1)+,A2
000014C2  D4E1                     633      ADDA.W        -(A1),A2
000014C4  D5C1                     634      ADDA.L        D1,A2
000014C6  D5D1                     635      ADDA.L        (A1),A2
000014C8  D5D9                     636      ADDA.L        (A1)+,A2
000014CA  D5E1                     637      ADDA.L        -(A1),A2
000014CC  9401                     638      SUB.B     D1,D2
000014CE  9311                     639      SUB.B     D1,(A1)
000014D0  9319                     640      SUB.B     D1,(A1)+
000014D2  9321                     641      SUB.B     D1,-(A1)
000014D4  9211                     642      SUB.B     (A1),D1
000014D6  9219                     643      SUB.B     (A1)+,D1
000014D8  9221                     644      SUB.B     -(A1),D1
000014DA  9441                     645      SUB.W     D1,D2
000014DC  92C1                     646      SUB.W     D1,A1
000014DE  9351                     647      SUB.W     D1,(A1)
000014E0  9359                     648      SUB.W     D1,(A1)+
000014E2  9361                     649      SUB.W     D1,-(A1)
000014E4  9249                     650      SUB.W     A1,D1
000014E6  9251                     651      SUB.W     (A1),D1
000014E8  9259                     652      SUB.W     (A1)+,D1
000014EA  9261                     653      SUB.W     -(A1),D1
000014EC  9481                     654      SUB.L     D1,D2
000014EE  93C1                     655      SUB.L     D1,A1
000014F0  9391                     656      SUB.L     D1,(A1)
000014F2  9399                     657      SUB.L     D1,(A1)+
000014F4  93A1                     658      SUB.L     D1,-(A1)
000014F6  9289                     659      SUB.L     A1,D1
000014F8  9291                     660      SUB.L     (A1),D1
000014FA  9299                     661      SUB.L     (A1)+,D1
000014FC  92A1                     662      SUB.L     -(A1),D1    
000014FE  C3C0                     663      MULS.W    D0,D1
00001500  C3D0                     664      MULS.W    (A0),D1
00001502  C3E0                     665      MULS.W    -(A0),D1
00001504  C3D8                     666      MULS.W    (A0)+,D1
00001506  82C0                     667      DIVU.W    D0,D1
00001508  82D0                     668      DIVU.W    (A0),D1
0000150A  82E0                     669      DIVU.W    -(A0),D1
0000150C  82D8                     670      DIVU.W    (A0)+,D1
0000150E  C401                     671      AND.B     D1,D2
00001510  C311                     672      AND.B     D1,(A1)
00001512  C319                     673      AND.B     D1,(A1)+
00001514  C321                     674      AND.B     D1,-(A1)
00001516  C211                     675      AND.B     (A1),D1
00001518  C219                     676      AND.B     (A1)+,D1
0000151A  C221                     677      AND.B     -(A1),D1
0000151C  C441                     678      AND.W     D1,D2
0000151E  C351                     679      AND.W     D1,(A1)
00001520  C359                     680      AND.W     D1,(A1)+
00001522  C361                     681      AND.W     D1,-(A1)
00001524  C251                     682      AND.W     (A1),D1
00001526  C259                     683      AND.W     (A1)+,D1
00001528  C261                     684      AND.W     -(A1),D1
0000152A  C481                     685      AND.L     D1,D2
0000152C  C391                     686      AND.L     D1,(A1)
0000152E  C399                     687      AND.L     D1,(A1)+
00001530  C3A1                     688      AND.L     D1,-(A1)
00001532  C291                     689      AND.L     (A1),D1
00001534  C299                     690      AND.L     (A1)+,D1
00001536  C2A1                     691      AND.L     -(A1),D1
00001538  8401                     692      OR.B     D1,D2
0000153A  8311                     693      OR.B     D1,(A1)
0000153C  8319                     694      OR.B     D1,(A1)+
0000153E  8321                     695      OR.B     D1,-(A1)
00001540  8211                     696      OR.B     (A1),D1
00001542  8219                     697      OR.B     (A1)+,D1
00001544  8221                     698      OR.B     -(A1),D1
00001546  8441                     699      OR.W     D1,D2
00001548  8351                     700      OR.W     D1,(A1)
0000154A  8359                     701      OR.W     D1,(A1)+
0000154C  8361                     702      OR.W     D1,-(A1)
0000154E  8251                     703      OR.W     (A1),D1
00001550  8259                     704      OR.W     (A1)+,D1
00001552  8261                     705      OR.W     -(A1),D1
00001554  8481                     706      OR.L     D1,D2
00001556  8391                     707      OR.L     D1,(A1)
00001558  8399                     708      OR.L     D1,(A1)+
0000155A  83A1                     709      OR.L     D1,-(A1)
0000155C  8291                     710      OR.L     (A1),D1
0000155E  8299                     711      OR.L     (A1)+,D1
00001560  82A1                     712      OR.L     -(A1),D1
00001562  E32A                     713      LSL.B     D1,D2
00001564  E36A                     714      LSL.W     D1,D2
00001566  E3D1                     715      LSL.W     (A1)
00001568  E3D9                     716      LSL.W     (A1)+
0000156A  E3E1                     717      LSL.W     -(A1)
0000156C  E3AA                     718      LSL.L     D1,D2
0000156E  E22A                     719      LSR.B     D1,D2
00001570  E26A                     720      LSR.W     D1,D2
00001572  E2D1                     721      LSR.W     (A1)
00001574  E2D9                     722      LSR.W     (A1)+
00001576  E2E1                     723      LSR.W     -(A1)
00001578  E2AA                     724      LSR.L     D1,D2    
0000157A  E222                     725      ASR.B     D1,D2
0000157C  E262                     726      ASR.W     D1,D2
0000157E  E0D1                     727      ASR.W     (A1)
00001580  E0D9                     728      ASR.W     (A1)+
00001582  E0E1                     729      ASR.W     -(A1)
00001584  E2A2                     730      ASR.L     D1,D2
00001586  E322                     731      ASL.B     D1,D2
00001588  E362                     732      ASL.W     D1,D2
0000158A  E1D1                     733      ASL.W     (A1)
0000158C  E1D9                     734      ASL.W     (A1)+
0000158E  E1E1                     735      ASL.W     -(A1)
00001590  E3A2                     736      ASL.L     D1,D2  
00001592  6E30                     737      BGT.B     label1
00001594  6E40                     738      BGT.B     label2
00001596  6F2C                     739      BLE.B     label1
00001598  6F3C                     740      BLE.B     label2
0000159A  6C28                     741      BGE.B     label1
0000159C  6738                     742      BEQ.B     label2
0000159E  6700 0024                743      BEQ.W     label1
000015A2  4E90                     744      JSR       (A0)
000015A4  4EB8 1234                745      JSR       $1234
000015A8  4EB9 12345678            746      JSR       $12345678
000015AE  4EB9 000015C4            747      JSR       label1
000015B4  4EB9 000015D6            748      JSR       label2
000015BA  4EB9 000015DC            749      JSR       label3
000015C0  4E71                     750      NOP
000015C2  4E75                     751      RTS
000015C4                           752  label1
000015C4  4E71                     753      NOP
000015C6  4E75                     754      RTS
000015C8  41F8 0012                755      LEA       $12,A0
000015CC  41F8 1234                756      LEA       $1234,A0
000015D0  41F9 12345678            757      LEA       $12345678,A0
000015D6                           758  label2
000015D6  7000                     759      MOVEQ     #$0,D0
000015D8  7012                     760      MOVEQ     #$12,D0
000015DA  70FF                     761      MOVEQ     #$FF,D0
000015DC                           762  label3
000015DC  48B8 FE00 0012           763      MOVEM.W   A1-A7,$12
000015E2  48F8 00FE 0012           764      MOVEM.L   D1-D7,$12
000015E8  48B8 0280 0012           765      MOVEM.W   A1/D7,$12
000015EE  48F8 0280 0012           766      MOVEM.L   A1/D7,$12
000015F4  48B8 FE00 1234           767      MOVEM.W   A1-A7,$1234
000015FA  48F8 00FE 1234           768      MOVEM.L   D1-D7,$1234
00001600  48B8 0280 1234           769      MOVEM.W   A1/D7,$1234
00001606  48F8 0280 1234           770      MOVEM.L   A1/D7,$1234
0000160C  48B9 FE00 12345678       771      MOVEM.W   A1-A7,$12345678
00001614  48F9 00FE 12345678       772      MOVEM.L   D1-D7,$12345678
0000161C  48B9 0280 12345678       773      MOVEM.W   A1/D7,$12345678
00001624  48F9 0280 12345678       774      MOVEM.L   A1/D7,$12345678
0000162C  4CB8 FE00 0012           775      MOVEM.W   $12,A1-A7
00001632  4CF8 00FE 0012           776      MOVEM.L   $12,D1-D7
00001638  4CB8 0280 0012           777      MOVEM.W   $12,A1/D7
0000163E  4CF8 0280 0012           778      MOVEM.L   $12,A1/D7
00001644  4CB8 FE00 1234           779      MOVEM.W   $1234,A1-A7
0000164A  4CF8 00FE 1234           780      MOVEM.L   $1234,D1-D7
00001650  4CB8 0280 1234           781      MOVEM.W   $1234,A1/D7
00001656  4CF8 0280 1234           782      MOVEM.L   $1234,A1/D7
0000165C  4CB9 FE00 12345678       783      MOVEM.W   $12345678,A1-A7
00001664  4CF9 00FE 12345678       784      MOVEM.L   $12345678,D1-D7
0000166C  4CB9 0280 12345678       785      MOVEM.W   $12345678,A1/D7
00001674  4CF9 0280 12345678       786      MOVEM.L   $12345678,A1/D7
0000167C  D4F8 0012                787      ADDA.W    $12,A2
00001680  D4F8 1234                788      ADDA.W    $1234,A2
00001684  D4F9 12345678            789      ADDA.W    $12345678,A2
0000168A  D4FC 1234                790      ADDA.W    #$1234,A2
0000168E  D5F8 0012                791      ADDA.L    $12,A2
00001692  D5F8 1234                792      ADDA.L    $1234,A2
00001696  D5F9 12345678            793      ADDA.L    $12345678,A2
0000169C  D5FC 12345678            794      ADDA.L    #$12345678,A2
000016A2  C3F8 0012                795      MULS.W    $12,D1
000016A6  C3F8 1234                796      MULS.W    $1234,D1
000016AA  C3F9 12345678            797      MULS.W    $12345678,D1
000016B0  C3FC 1234                798      MULS.W    #$1234,D1
000016B4  82F8 0012                799      DIVU.W    $12,D1
000016B8  82F8 1234                800      DIVU.W    $1234,D1
000016BC  82F9 12345678            801      DIVU.W    $12345678,D1
000016C2  82FC 1234                802      DIVU.W    #$1234,D1
000016C6  C338 0012                803      AND.B     D1,$12
000016CA  C338 1234                804      AND.B     D1,$1234
000016CE  C339 12345678            805      AND.B     D1,$12345678
000016D4  C238 0012                806      AND.B     $12,D1
000016D8  C238 1234                807      AND.B     $1234,D1
000016DC  C239 12345678            808      AND.B     $12345678,D1
000016E2  C23C 0012                809      AND.B     #$12,D1
000016E6  C378 0012                810      AND.W     D1,$12
000016EA  C378 1234                811      AND.W     D1,$1234
000016EE  C379 12345678            812      AND.W     D1,$12345678
000016F4  C278 0012                813      AND.W     $12,D1
000016F8  C278 1234                814      AND.W     $1234,D1
000016FC  C279 12345678            815      AND.W     $12345678,D1
00001702  C27C 1234                816      AND.W     #$1234,D1
00001706  C3B8 0012                817      AND.L     D1,$12
0000170A  C3B8 1234                818      AND.L     D1,$1234
0000170E  C3B9 12345678            819      AND.L     D1,$12345678
00001714  C2B8 0012                820      AND.L     $12,D1
00001718  C2B8 1234                821      AND.L     $1234,D1
0000171C  C2B9 12345678            822      AND.L     $12345678,D1
00001722  C2BC 12345678            823      AND.L     #$12345678,D1
00001728  E30A                     824      LSL.B     #$1,D2
0000172A  E54A                     825      LSL.W     #$2,D2
0000172C  E78A                     826      LSL.L     #$3,D2
0000172E  E3F8 0012                827      LSL.W     $12
00001732  E3F8 1234                828      LSL.W     $1234
00001736  E3F9 12345678            829      LSL.W     $12345678
0000173C  E202                     830      ASR.B     #$1,D2
0000173E  E442                     831      ASR.W     #$2,D2
00001740  E682                     832      ASR.L     #$3,D2
00001742  E0F8 0012                833      ASR.W     $12
00001746  E0F8 1234                834      ASR.W     $1234
0000174A  E0F9 12345678            835      ASR.W     $12345678
00001750                           836  label4
00001750  6EFE                     837      BGT.B     label4
00001752  6EFC                     838      BGT.B     label4
00001754  6EFA                     839      BGT.B     label4
00001756  6F00 FE6C                840      BLE.W     label1
0000175A  6F00 FE7A                841      BLE.W     label2
0000175E  6F00 FE7C                842      BLE.W     label3
00001762  6700 FE60                843      BEQ.W     label1
00001766  6700 FE6E                844      BEQ.W     label2
0000176A  6700 FE70                845      BEQ.W     label3
0000176E  4EB8 15C4                846      JSR       label1
00001772  4EB8 15D6                847      JSR       label2
00001776  4EB8 15DC                848      JSR       label3
0000177A                           849  
0000177A                           850  
0000177A                           851  
0000177A                           852  
0000177A                           853  
0000177A                           854  
0000177A                           855  
0000177A                           856  
0000177A                           857  
0000177A                           858  
0000177A                           859  
0000177A                           860  
0000177A                           861  
0000177A                           862  
0000177A                           863  
0000177A                           864  -------------------- end include --------------------
0000177A                           865  
0000177A                           866  
0000177A                           867  * Put variables and constants here
0000177A                           868  
0000177A= 57 65 6C 63 6F 6D ...    869  INTRO_MSG:       DC.B       'Welcome to Team Cools Disassembler!',CR,LF,0
000017A0= 50 6C 65 61 73 65 ...    870  STARTING_MSG:    DC.B       'Please enter the Starting Address',CR,LF,0
000017C4= 50 6C 65 61 73 65 ...    871  ENDING_MSG:      DC.B       'Please enter the Ending Address',CR,LF,0
000017E6= 44 6F 6E 65 20 52 ...    872  GOODBYE_MSG:     DC.B       'Done Reading data',CR,LF,0
000017FA                           873  * CR and LF for strings above because we want to go to next line after printing message
000017FA                           874  
000017FA                           875  STA_ADDR         DS.B        40
00001822                           876  END_ADDR         DS.B        40
0000184A                           877  
0000184A                           878  * no CR and LF for strings below because we want to print each number and letter
0000184A                           879  
0000184A= 20 20 00                 880  SPACE_MSG:       DC.B        '  ',0
0000184D                           881  
0000184D= 30 00                    882  ZERO_MSG:        DC.B        '0',0
0000184F= 31 00                    883  ONE_MSG:         DC.B        '1',0
00001851= 32 00                    884  TWO_MSG:         DC.B        '2',0
00001853= 33 00                    885  THREE_MSG:       DC.B        '3',0
00001855= 34 00                    886  FOUR_MSG:        DC.B        '4',0
00001857= 35 00                    887  FIVE_MSG:        DC.B        '5',0
00001859= 36 00                    888  SIX_MSG:         DC.B        '6',0
0000185B= 37 00                    889  SEVEN_MSG:       DC.B        '7',0
0000185D= 38 00                    890  EIGHT_MSG:       DC.B        '8',0
0000185F= 39 00                    891  NINE_MSG:        DC.B        '9',0
00001861= 41 00                    892  A_MSG:           DC.B        'A',0
00001863= 42 00                    893  B_MSG:           DC.B        'B',0
00001865= 43 00                    894  C_MSG:           DC.B        'C',0
00001867= 44 00                    895  D_MSG:           DC.B        'D',0
00001869= 45 00                    896  E_MSG:           DC.B        'E',0
0000186B= 46 00                    897  F_MSG:           DC.B        'F',0 
0000186D                           898  
0000186D                           899  
0000186D                           900  *-----Carriage Return
0000186D  =0000000D                901  CR              EQU          $0D
0000186D                           902  *-----------Line Feed
0000186D  =0000000A                903  LF              EQU          $0A
0000186D                           904  
0000186D= 0D 0A 00                 905  NEW_LINE:       DC.B         '',CR,LF,0
00001870                           906  
00001870                           907      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AND_MSG             139C
ASCII_DONE          106E
A_MSG               1861
BCC_MSG             13A8
BEQ_MSG             13B2
BGT_MSG             13AE
BLE_MSG             13AA
BRA_MSG             138E
BYTE_DISPLACEMENT_PRINT_LOOP  12C2
BYTE_MSG            13B6
B_MSG               1863
CHECK_OPCODES       116A
CONVERT_TO_ASCII    1056
CR                  D
C_MSG               1865
DATA_MSG            13A3
DONE                1158
D_MSG               1867
EIGHT_MSG           185D
ENDING_MSG          17C4
END_ADDR            1822
E_MSG               1869
FIVE_MSG            1857
FOUR_MSG            1855
F_MSG               186B
GET_BIT             1378
GOODBYE_MSG         17E6
INTRO_MSG           177A
ISOLATE_15_12       11A6
ISOLATE_15_6        117E
ISOLATE_15_8        118E
JSR_MSG             1392
LABEL1              15C4
LABEL2              15D6
LABEL3              15DC
LABEL4              1750
LETTER_ASCII        1084
LF                  A
MOVEQ_MSG           1396
NEW_LINE            186D
NINE_MSG            185F
NOP                 13BC
NOT_MSG             138A
NUMBER_ASCII        1070
ONE_MSG             184F
OP_CODE_AND         1206
OP_CODE_BCC         1214
OP_CODE_BEQ         1266
OP_CODE_BGT         1256
OP_CODE_BLE         1246
OP_CODE_BRA         11DC
OP_CODE_DATA        136A
OP_CODE_JSR         11EA
OP_CODE_MOVEQ       11F8
OP_CODE_NOT         11CE
OP_CODE_OR          134A
OR_MSG              13A0
PRINT_BCC_SIZE_ATTR  1276
PRINT_BYTE_SIZE_ATTR  1292
PRINT_DONE          1126
PRINT_LOOP          10F8
PRINT_MEMORY_LOOP   1098
PRINT_WORD_SIZE_ATTR  12F6
REVERSE_DONE        1156
REVERSE_LOOP        1138
REVERSE_START       1128
SEVEN_MSG           185B
SIX_MSG             1859
SPACE_MSG           184A
START               1000
STARTING_MSG        17A0
STA_ADDR            17FA
THREE_MSG           1853
TWO_MSG             1851
WORD_DISPLACEMENT_PRINT_LOOP  1316
WORD_MSG            13B9
ZERO_MSG            184D
