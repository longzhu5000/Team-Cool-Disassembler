00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/13/2022 8:02:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Disassembler
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000  6000 0002                 10          BRA     INTRO_MSGS
00001004                            11  
00001004                            12  * Put program code here
00001004                            13  
00001004                            14  *------LEA = Load effective address
00001004                            15  *------Running Trap #15 while the number 14 is in D0 will print out whatever data is in the address stored in A1
00001004                            16  
00001004                            17  INTRO_MSGS:
00001004  4280                      18          CLR.L       D0
00001006  4281                      19          CLR.L       D1
00001008  4282                      20          CLR.L       D2
0000100A  4283                      21          CLR.L       D3
0000100C  4284                      22          CLR.L       D4
0000100E  4285                      23          CLR.L       D5
00001010  4286                      24          CLR.L       D6
00001012  4287                      25          CLR.L       D7
00001014                            26  
00001014                            27  
00001014  43F9 00002AC4             28          LEA         INTRO_MSG,      A1
0000101A  103C 000E                 29          MOVE.B      #14,            D0    
0000101E  4E4F                      30          TRAP        #15
00001020                            31          
00001020  43F9 00002AEA             32          LEA         STARTING_MSG,   A1
00001026  103C 000E                 33          MOVE.B      #14,            D0   
0000102A  4E4F                      34          TRAP        #15
0000102C                            35          
0000102C  43F9 00002B0E             36          LEA         FORMAT_MSG,     A1
00001032  103C 000E                 37          MOVE.B      #14,            D0   
00001036  4E4F                      38          TRAP        #15
00001038                            39  
00001038                            40          
00001038                            41  *----------------- 
00001038                            42  *       Running trap command 15 while the number 2 is in D0 
00001038                            43  *       Will ask the user to enter input
00001038                            44  *       after the user hits enter, the length of the input is stored in D1
00001038                            45  *       and the user data is stored in the space allocated by STA_ADDR repressented by ASSCI code
00001038                            46  *       IE 31 = 1, 32 = 2 etc etc
00001038                            47  *       If I store the number 1200, it will appear in memory as 31 32 30 30
00001038                            48  
00001038  43F9 00002C14             49          LEA         STA_ADDR,       A1
0000103E  103C 0002                 50          MOVE.B      #2,             D0
00001042  4E4F                      51          TRAP        #15
00001044                            52          
00001044  4EB9 0000108C             53          JSR         CONVERT_TO_ASCII
0000104A                            54          
0000104A                            55          * A3 now has our Starting Address
0000104A  2647                      56          MOVEA.L     D7,             A3
0000104C                            57          *Test user input
0000104C  2807                      58          MOVE.L      D7,             D4
0000104E  163C 001F                 59          MOVE.B      #31,            D3
00001052  E7AC                      60          LSL.L       D3,             D4
00001054  E6AC                      61          LSR.L       D3,             D4
00001056  B83C 0001                 62          CMP.B       #$1,            D4
0000105A  6700 012E                 63          BEQ         INVALID_INPUT
0000105E  4284                      64          CLR.L       D4
00001060  4283                      65          CLR.L       D3
00001062                            66          
00001062  4282                      67          CLR.L       D2
00001064  4287                      68          CLR.L       D7
00001066                            69          
00001066  43F9 00002B47             70          LEA         ENDING_MSG,     A1
0000106C  103C 000E                 71          MOVE.B      #14,            D0
00001070  4E4F                      72          TRAP        #15
00001072                            73          
00001072  43F9 00002C3C             74          LEA         END_ADDR,       A1
00001078  103C 0002                 75          MOVE.B      #2,             D0
0000107C  4E4F                      76          TRAP        #15
0000107E                            77          
0000107E  4EB9 0000108C             78          JSR         CONVERT_TO_ASCII
00001084                            79          * A4 now has our Ending Address
00001084  2847                      80          MOVEA.L     D7,             A4
00001086                            81          
00001086                            82  
00001086  4EB9 000010CE             83          JSR         PRINT_MEMORY_LOOP
0000108C                            84          
0000108C                            85          
0000108C                            86          
0000108C                            87          *BRA         DONE
0000108C                            88          *   ASCII conversion
0000108C                            89  *---------------------------------------        
0000108C                            90  CONVERT_TO_ASCII:             
0000108C  0C01 0000                 91          CMPI.B      #$0,            D1
00001090  6700 0012                 92          BEQ         ASCII_DONE
00001094  1419                      93          MOVE.B      (A1)+,          D2
00001096  103C 0039                 94          MOVE.B      #$39,           D0
0000109A  B400                      95          CMP.B       D0,             D2
0000109C  6F00 0008                 96          BLE         NUMBER_ASCII   
000010A0  6000 0018                 97          BRA         LETTER_ASCII  
000010A4                            98  
000010A4                            99  ASCII_DONE:
000010A4  4E75                     100          RTS
000010A6                           101          
000010A6                           102  NUMBER_ASCII:
000010A6  5301                     103          SUBI.B      #$1,            D1
000010A8  103C 0030                104          MOVE.B      #$30,           D0
000010AC  9400                     105          SUB.B       D0,             D2
000010AE  DE02                     106          ADD.B       D2,             D7
000010B0  0C01 0000                107          CMPI.B      #$0,            D1
000010B4  67EE                     108          BEQ         ASCII_DONE
000010B6  E987                     109          ASL.L       #4,             D7
000010B8  60D2                     110          BRA         CONVERT_TO_ASCII
000010BA                           111  LETTER_ASCII:
000010BA  5301                     112          SUBI.B      #$1,            D1
000010BC  103C 0037                113          MOVE.B      #$37,           D0
000010C0  9400                     114          SUB.B       D0,             D2
000010C2  DE02                     115          ADD.B       D2,             D7
000010C4  0C01 0000                116          CMPI.B      #$0,            D1
000010C8  67DA                     117          BEQ         ASCII_DONE
000010CA  E987                     118          ASL.L       #4,             D7
000010CC  60BE                     119          BRA         CONVERT_TO_ASCII
000010CE                           120  *---------------------------------------        
000010CE                           121          
000010CE                           122          
000010CE                           123          *   Printing data and addresses
000010CE                           124  *---------------------------------------
000010CE                           125  
000010CE                           126  PRINT_MEMORY_LOOP:
000010CE                           127          * add code here to compare current address with end address
000010CE                           128          
000010CE                           129          * if equal to, or further than ending address jump to DONE
000010CE                           130          * SIMHALT
000010CE                           131          
000010CE  B0FC 000A                132          CMP.W       #$A,            A0
000010D2  6700 0090                133          BEQ         PAUSE_SCAN
000010D6                           134          
000010D6  B9CB                     135          CMP.L       A3,             A4
000010D8  6F00 00F0                136          BLE         RESTART
000010DC                           137          
000010DC                           138          * We are goiong to keep track of the number of byts we have examined using D1
000010DC                           139          * Before printing the address we have to reverse the order
000010DC  4281                     140          CLR.L       D1
000010DE  4282                     141          CLR.L       D2
000010E0  123C 0008                142          MOVE.B      #$8,            D1
000010E4  260B                     143          MOVE.L      A3,             D3
000010E6  4EB9 0000119A            144          JSR         REVERSE_START
000010EC                           145          
000010EC  2607                     146          MOVE.L      D7,             D3
000010EE  4281                     147          CLR.L       D1
000010F0  4282                     148          CLR.L       D2
000010F2  123C 0008                149          MOVE.B      #$8,            D1
000010F6  4EB9 00001136            150          JSR         PRINT_LOOP
000010FC                           151          
000010FC                           152          
000010FC                           153          * space between address and data
000010FC  43F9 00002C64            154          LEA         SPACE_MSG,      A1
00001102  103C 000E                155          MOVE.B      #14,            D0    
00001106  4E4F                     156          TRAP        #15
00001108                           157          
00001108  4281                     158          CLR.L       D1
0000110A  4282                     159          CLR.L       D2
0000110C  4283                     160          CLR.L       D3
0000110E  123C 0008                161          MOVE.B      #$8,            D1
00001112  361B                     162          MOVE.W      (A3)+,          D3
00001114                           163          *JSR         REVERSE_START
00001114                           164          
00001114                           165          *MOVE.L      D7,             D3
00001114  4281                     166          CLR.L       D1
00001116  4282                     167          CLR.L       D2
00001118                           168          *MOVE.B      #$8,            D1
00001118                           169          *JSR         PRINT_LOOP
00001118                           170          
00001118                           171          * Jump to Function in another file
00001118  4EB9 00001206            172          JSR         CHECK_OPCODES
0000111E                           173          
0000111E                           174          
0000111E  4281                     175          CLR.L       D1
00001120  4282                     176          CLR.L       D2
00001122  4283                     177          CLR.L       D3
00001124  4284                     178          CLR.L       D4
00001126                           179          * new line
00001126  43F9 00002D29            180          LEA         NEW_LINE,       A1
0000112C  103C 000E                181          MOVE.B      #14,            D0    
00001130  4E4F                     182          TRAP        #15
00001132                           183          
00001132  5248                     184          ADD.W       #$1,            A0
00001134                           185  
00001134                           186          * branch to the start of this method
00001134  6098                     187          BRA         PRINT_MEMORY_LOOP
00001136                           188  
00001136                           189  
00001136                           190  PRINT_LOOP:
00001136                           191  
00001136                           192          
00001136                           193          * When D1 == 0, we are done and exit this loop
00001136  0C01 0000                194          CMPI.B      #$0,            D1
0000113A  6700 004C                195          BEQ         PRINT_DONE
0000113E  5301                     196          SUBI.B      #$1,            D1
00001140                           197          
00001140  1403                     198          MOVE.B      D3,             D2
00001142                           199          * Bit shifting to isolate the right most digit
00001142                           200          * 1234 5678 => 8000 0000 => 0000 0008
00001142  103C 001C                201          MOVE.B      #28,            D0    
00001146  E1AA                     202          LSL.L       D0,             D2     
00001148  E99A                     203          ROL.L       #4,             D2 
0000114A                           204          
0000114A                           205          * Bit shifting to prep the next digit
0000114A                           206          * 1234 4567 => 0123 4567
0000114A  E883                     207          ASR.L       #4, D3
0000114C                           208          
0000114C                           209          *Assuming D4 is empty
0000114C                           210          
0000114C  1802                     211          MOVE.B       D2,            D4
0000114E  43F9 00002C67            212          LEA          ZERO_MSG,      A1
00001154                           213          * load the address of Zero_msg
00001154                           214          * because all of the msgs are stored next to each other in order
00001154                           215          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001154                           216          * and then add it to the address starting at zero_msg
00001154  C8FC 0002                217          MULU         #2,            D4
00001158  D3C4                     218          ADDA.L       D4,            A1
0000115A                           219          
0000115A                           220          * trap command 14 reads whatever address is in A1, and then spits out the data to the console
0000115A  103C 000E                221          MOVE.B       #14,           D0
0000115E  4E4F                     222          TRAP         #15
00001160  60D4                     223          BRA          PRINT_LOOP
00001162  4644                     224          NOT          D4
00001164                           225  
00001164                           226  PAUSE_SCAN:
00001164  43F9 00002BD2            227          LEA         PRESS_ENTER_MSG, A1
0000116A  103C 000E                228          MOVE.B      #14,            D0
0000116E  4E4F                     229          TRAP        #15
00001170  103C 0002                230          MOVE.B      #2,             D0
00001174  4E4F                     231          TRAP        #15
00001176                           232          
00001176  4280                     233          CLR.L       D0
00001178  4281                     234          CLR.L       D1
0000117A  4282                     235          CLR.L       D2
0000117C  327C 0000                236          MOVE.W      #$0000,         A1
00001180                           237  
00001180  307C 0000                238          MOVE.W      #$0000,         A0
00001184  6000 FF48                239          BRA         PRINT_MEMORY_LOOP
00001188                           240          
00001188                           241  PRINT_DONE:
00001188  4E75                     242          RTS
0000118A                           243          
0000118A                           244      *   Reversing the address
0000118A                           245  *---------------------------------------
0000118A                           246  INVALID_INPUT:
0000118A  43F9 00002BF5            247          LEA         INVALID_INPUT_MSG,  A1
00001190  103C 000E                248          MOVE.B      #14,                D0
00001194  4E4F                     249          TRAP        #15
00001196  6000 FE68                250          BRA         START
0000119A                           251  
0000119A                           252  REVERSE_START:        
0000119A  4281                     253          CLR.L       D1
0000119C  4287                     254          CLR.L       D7
0000119E  123C 0008                255          MOVE.B      #8,             D1
000011A2  4EB9 000011AA            256          JSR         REVERSE_LOOP
000011A8  4E75                     257          RTS
000011AA                           258          
000011AA                           259  REVERSE_LOOP:
000011AA                           260  
000011AA                           261          
000011AA  0C01 0000                262          CMPI.B      #$0,            D1
000011AE  6700 0018                263          BEQ         REVERSE_DONE
000011B2  5301                     264          SUBI.B      #$1,            D1
000011B4  E987                     265          ASL.L       #4,             D7
000011B6                           266          
000011B6  4285                     267          CLR.L       D5
000011B8                           268          
000011B8  1A03                     269          MOVE.B      D3,             D5
000011BA                           270          
000011BA  103C 001C                271          MOVE.B      #28,            D0    
000011BE  E1AD                     272          LSL.L       D0,             D5     
000011C0  E99D                     273          ROL.L       #4,             D5
000011C2                           274          
000011C2  DE05                     275          ADD.B       D5,             D7
000011C4                           276          
000011C4                           277          
000011C4  E883                     278          ASR.L       #4,             D3
000011C6                           279          
000011C6  60E2                     280          BRA         REVERSE_LOOP
000011C8                           281  
000011C8                           282  REVERSE_DONE:
000011C8  4E75                     283          RTS
000011CA                           284  
000011CA                           285  RESTART:
000011CA  43F9 00002B69            286          LEA         DONE_MSG,       A1
000011D0  103C 000E                287          MOVE.B      #14,            D0
000011D4  4E4F                     288          TRAP        #15
000011D6  43F9 00002B7D            289          LEA         RESTART_MSG,    A1
000011DC  103C 000E                290          MOVE.B      #14,            D0
000011E0  4E4F                     291          TRAP        #15
000011E2  103C 0002                292          MOVE.B      #2,             D0
000011E6  4E4F                     293          TRAP        #15
000011E8                           294          
000011E8  B23C 0001                295          CMP.B       #$1,            D1
000011EC  6700 0006                296          BEQ         DONE
000011F0                           297  
000011F0  6000 FE12                298          BRA         INTRO_MSGS
000011F4                           299  DONE:
000011F4                           300  
000011F4  43F9 00002BA5            301          LEA         TY_MSG,         A1
000011FA  103C 000E                302          MOVE.B      #14,            D0
000011FE  4E4F                     303          TRAP        #15
00001200  103C 0009                304          MOVE.B      #9,             D0
00001204  4E4F                     305          TRAP        #15        
00001206                           306          
00001206                           307  
00001206                           308      *SIMHALT             ; halt simulator
00001206                           309  
00001206                           310      INCLUDE         'Disassembler_OPCodes.x68'
00001206                           311  
00001206                           312  
00001206                           313  
00001206                           314  CHECK_OPCODES:
00001206  4286                     315          CLR.L   D6
00001208                           316  
00001208  4EB9 000012BC            317          JSR     ISOLATE_16
0000120E  BC3C 0001                318          CMP.B   #$1,    D6
00001212  6700 005A                319          BEQ     RETURN
00001216                           320          
00001216  4EB9 000012CA            321          JSR     ISOLATE_15_6
0000121C  BC3C 0001                322          CMP.B   #$1,    D6
00001220  6700 004C                323          BEQ     RETURN
00001224                           324  
00001224  4EB9 000012DC            325          JSR     ISOLATE_15_8
0000122A  BC3C 0001                326          CMP.B   #$1,    D6
0000122E  6700 003E                327          BEQ     RETURN
00001232                           328          
00001232  4EB9 00001270            329          JSR     ISOLATE_15_12
00001238  BC3C 0001                330          CMP.B   #$1,    D6
0000123C  6700 0030                331          BEQ     RETURN
00001240                           332          
00001240  4EB9 000012EE            333          JSR     ISOLATE_15_11
00001246  BC3C 0001                334          CMP.B   #$1,    D6
0000124A  6700 0022                335          BEQ     RETURN
0000124E                           336          
0000124E  4EB9 00001312            337          JSR     ISOLATE_8_6
00001254  BC3C 0001                338          CMP.B   #$1,    D6        
00001258  6700 0014                339          BEQ     RETURN
0000125C                           340          
0000125C  4EB9 00001300            341          JSR     ISOLATE_15_14    
00001262  BC3C 0001                342          CMP.B   #$1,    D6
00001266  6700 0006                343          BEQ     RETURN
0000126A                           344          
0000126A                           345          
0000126A  6000 0A5A                346          BRA   TOTAL_DECODE_FAILURE
0000126E                           347  RETURN:
0000126E  4E75                     348          RTS
00001270                           349  
00001270                           350  ISOLATE_15_12:
00001270  3803                     351          MOVE.W      D3,     D4
00001272  343C 000C                352          MOVE.W      #12,     D2
00001276  E46C                     353          LSR.W       D2,     D4
00001278                           354          
00001278  B83C 0007                355          CMP.B       #$7,    D4
0000127C  6700 08AC                356          BEQ         OP_CODE_MOVEQ
00001280  B83C 0008                357          CMP.B       #$8,    D4
00001284  6700 0982                358          BEQ         OP_CODE_OR      *may get confused with DIVU + any other opcodes that start with 1000 (ones that we are not required to cover)
00001288  B83C 000C                359          CMP.B       #$C,    D4
0000128C  6700 08F6                360          BEQ         OP_CODE_AND
00001290  4EB9 0000171C            361          JSR         OP_CODE_BCC
00001296  4EB9 00001596            362          JSR         OP_CODE_SHIFT_ROTATE
0000129C  4EB9 000017E2            363          JSR         OP_CODE_ADDA
000012A2  4EB9 000018A4            364          JSR         OP_CODE_ADDQ
000012A8  4EB9 000014F4            365          JSR         OP_CODE_LEA
000012AE  4EB9 00001934            366          JSR         OP_CODE_ADD
000012B4  4EB9 00001954            367          JSR         OP_CODE_SUB
000012BA                           368          
000012BA                           369  
000012BA  4E75                     370          RTS
000012BC                           371          
000012BC                           372  ISOLATE_16:
000012BC                           373  
000012BC  4EB9 000016E8            374          JSR       OP_CODE_NOP
000012C2  4EB9 00001702            375          JSR       OP_CODE_RTS
000012C8  4E75                     376          RTS
000012CA                           377  
000012CA                           378  ISOLATE_15_6:
000012CA                           379          
000012CA  3803                     380          MOVE.W      D3,     D4
000012CC  343C 0006                381          MOVE.W      #6,     D2
000012D0  E46C                     382          LSR.W       D2,     D4
000012D2                           383          
000012D2  B87C 013A                384          CMP.W       #$13A,  D4
000012D6  6700 09B4                385          BEQ         OP_CODE_JSR
000012DA                           386          
000012DA  4E75                     387          RTS
000012DC                           388  
000012DC                           389  ISOLATE_15_8:
000012DC  3803                     390          MOVE.W      D3,     D4
000012DE  343C 0008                391          MOVE.W      #8,     D2
000012E2  E46C                     392          LSR.W       D2,     D4
000012E4                           393          
000012E4  B83C 0046                394          CMP.B       #$46,   D4
000012E8  6700 0040                395          BEQ         OP_CODE_NOT
000012EC  4E75                     396          RTS
000012EE                           397          
000012EE                           398  ISOLATE_15_11:
000012EE  3803                     399          MOVE.W      D3,     D4
000012F0  343C 000B                400          MOVE.W      #11,    D2
000012F4  E46C                     401          LSR.W       D2,     D4
000012F6                           402          
000012F6  B83C 0009                403          CMP.B       #$9,    D4
000012FA  6700 00D0                404          BEQ         OP_CODE_MOVEM
000012FE                           405          
000012FE  4E75                     406          RTS
00001300                           407          
00001300                           408  ISOLATE_15_14:
00001300  3803                     409          MOVE.W      D3,     D4
00001302  343C 000E                410          MOVE.W      #14,    D2
00001306  E46C                     411          LSR.W       D2,     D4
00001308                           412          
00001308  B83C 0000                413          CMP.B       #$0,    D4
0000130C  6700 0046                414          BEQ         OP_CODE_MOVE
00001310                           415          
00001310  4E75                     416          RTS
00001312                           417          
00001312                           418  ISOLATE_8_6:
00001312  3803                     419          MOVE.W      D3,     D4
00001314  343C 0007                420          MOVE.W      #7,     D2
00001318  E56C                     421          LSL.W       D2,     D4
0000131A  343C 000D                422          MOVE.W      #13,    D2
0000131E  E46C                     423          LSR.W       D2,     D4
00001320                           424          
00001320  B83C 0001                425          CMP.B       #$1,    D4
00001324  6700 006A                426          BEQ         OP_CODE_MOVEA
00001328                           427  
00001328  4E75                     428          RTS
0000132A                           429  
0000132A                           430  
0000132A                           431  
0000132A                           432  OP_CODE_NOT:
0000132A  43F9 00002C87            433          LEA         NOT_MSG, A1
00001330  103C 000E                434          MOVE.B      #14, D0
00001334  4E4F                     435          TRAP        #15
00001336                           436          
00001336  4EB9 00001D7A            437          JSR         SIZE_7_6
0000133C                           438          
0000133C  43F9 00002CBA            439          LEA         WHITESPACE, A1
00001342  103C 000E                440          MOVE.B      #14, D0
00001346  4E4F                     441          TRAP        #15
00001348                           442          
00001348  4EB9 00001DFE            443          JSR         EFFECTIVEADD_5_0
0000134E                           444          
0000134E  1C3C 0001                445          MOVE.B      #1,      D6
00001352                           446          
00001352  4E75                     447          RTS 
00001354                           448        
00001354                           449  OP_CODE_MOVE:
00001354                           450  
00001354  43F9 00002C8F            451          LEA         MOVE_MSG, A1
0000135A  103C 000E                452          MOVE.B      #14, D0
0000135E  4E4F                     453          TRAP        #15
00001360                           454          
00001360  4EB9 00001D52            455          JSR         SIZE_13_12
00001366                           456          
00001366  43F9 00002CBA            457          LEA         WHITESPACE, A1
0000136C  103C 000E                458          MOVE.B      #14, D0
00001370  4E4F                     459          TRAP        #15
00001372                           460          
00001372  4EB9 00001DFE            461          JSR         EFFECTIVEADD_5_0
00001378                           462          
00001378  43F9 00002CBC            463          LEA         WHITESPACE_COM, A1
0000137E  103C 000E                464          MOVE.B      #14, D0
00001382  4E4F                     465          TRAP        #15
00001384                           466          
00001384  4EB9 00001E3E            467          JSR         DESTINATION_11_6
0000138A                           468  
0000138A  1C3C 0001                469          MOVE.B      #1,      D6
0000138E                           470  
0000138E  4E75                     471          RTS
00001390                           472          
00001390                           473  OP_CODE_MOVEA:
00001390  43F9 00002C9A            474          LEA         MOVEA_MSG, A1
00001396  103C 000E                475          MOVE.B      #14, D0
0000139A  4E4F                     476          TRAP        #15
0000139C                           477          
0000139C  4EB9 00001D52            478          JSR         SIZE_13_12
000013A2                           479          
000013A2  43F9 00002CBA            480          LEA         WHITESPACE, A1
000013A8  103C 000E                481          MOVE.B      #14, D0
000013AC  4E4F                     482          TRAP        #15
000013AE                           483          
000013AE  4EB9 00001DFE            484          JSR         EFFECTIVEADD_5_0
000013B4                           485          
000013B4  43F9 00002CBC            486          LEA         WHITESPACE_COM, A1
000013BA  103C 000E                487          MOVE.B      #14, D0
000013BE  4E4F                     488          TRAP        #15
000013C0                           489          
000013C0  4EB9 00001E3E            490          JSR         DESTINATION_11_6
000013C6                           491  
000013C6  1C3C 0001                492          MOVE.B      #1,      D6
000013CA                           493  
000013CA  4E75                     494          RTS
000013CC                           495  
000013CC                           496  OP_CODE_MOVEM:
000013CC  43F9 00002C94            497          LEA         MOVEM_MSG, A1
000013D2  103C 000E                498          MOVE.B      #14, D0
000013D6  4E4F                     499          TRAP        #15
000013D8                           500          
000013D8  4EB9 00001DA2            501          JSR         SIZE_6
000013DE                           502          
000013DE  3803                     503          MOVE.W      D3,     D4
000013E0                           504          
000013E0  343C 0005                505          MOVE.W      #5,     D2
000013E4  E56C                     506          LSL.W       D2,     D4
000013E6  343C 000F                507          MOVE.W      #15,    D2
000013EA  E46C                     508          LSR.W       D2,     D4
000013EC                           509          
000013EC  B83C 0000                510          CMP.B       #$0,    D4
000013F0  6700 000C                511          BEQ         REG_TO_MEM
000013F4  B83C 0001                512          CMP.B       #$1,    D4
000013F8  6700 0078                513          BEQ         MEM_TO_REG
000013FC                           514          
000013FC  4E75                     515          RTS
000013FE                           516  
000013FE                           517  REG_TO_MEM:
000013FE                           518  
000013FE  3803                     519          MOVE.W      D3,     D4
00001400  43F9 00002CBA            520          LEA         WHITESPACE, A1
00001406  103C 000E                521          MOVE.B      #14,    D0
0000140A  4E4F                     522          TRAP        #15
0000140C  343C 000A                523          MOVE.W      #10,    D2
00001410  E56C                     524          LSL.W       D2,     D4
00001412  343C 000D                525          MOVE.W      #13,    D2
00001416  E46C                     526          LSR.W       D2,     D4
00001418  2A4B                     527          MOVEA.L     A3,     A5
0000141A                           528  
0000141A  4280                     529          CLR.L       D0
0000141C  4281                     530          CLR.L       D1
0000141E  323C 00FF                531          MOVE.W      #$FF,   D1
00001422  4286                     532          CLR.L       D6
00001424  3C3C 00FF                533          MOVE.W      #$FF,   D6
00001428  4280                     534          CLR.L       D0
0000142A  B83C 0004                535          CMP.B       #$4,    D4
0000142E  6700 0016                536          BEQ         RTM_1_B
00001432                           537          
00001432  103C 000F                538          MOVE.B      #$F,   D0
00001436  6000 0002                539          BRA         RTM_1_A
0000143A                           540   
0000143A                           541          
0000143A                           542  
0000143A                           543  RTM_1_A:
0000143A  381D                     544          MOVE.W      (A5)+,   D4    
0000143C  4EB9 000020C2            545          JSR         POST_INCR_MASK_FIELD
00001442  6000 000E                546          BRA         RTM_2
00001446                           547  RTM_1_B: 
00001446  381D                     548          MOVE.W      (A5)+,   D4   
00001448  4EB9 00001FC6            549          JSR         PRE_DECR_MASK_FIELD
0000144E  6000 0002                550          BRA         RTM_2
00001452                           551  RTM_2:
00001452                           552  
00001452  43F9 00002CBC            553          LEA         WHITESPACE_COM, A1
00001458  103C 000E                554          MOVE.B      #14,    D0
0000145C  4E4F                     555          TRAP        #15
0000145E  554B                     556          SUB.W       #$2,     A3
00001460  361B                     557          MOVE.W      (A3)+,   D3
00001462                           558    
00001462  544B                     559          ADD.W       #$2,     A3
00001464  4EB9 00001DFE            560          JSR         EFFECTIVEADD_5_0
0000146A  4286                     561          CLR.L       D6
0000146C                           562  
0000146C  1C3C 0001                563          MOVE.B      #1,     D6
00001470  4E75                     564          RTS
00001472                           565      
00001472                           566      
00001472                           567  MEM_TO_REG:
00001472                           568  
00001472  3803                     569          MOVE.W      D3,     D4
00001474  43F9 00002CBA            570          LEA         WHITESPACE, A1
0000147A  103C 000E                571          MOVE.B      #14, D0
0000147E  4E4F                     572          TRAP        #15
00001480                           573          
00001480  3A4B                     574          MOVEA.W     A3,     A5
00001482  544B                     575          ADD.W       #$2,    A3
00001484                           576          
00001484  4EB9 00001DFE            577          JSR         EFFECTIVEADD_5_0
0000148A  3C4B                     578          MOVEA.W     A3,     A6
0000148C  364D                     579          MOVEA.W     A5,     A3
0000148E  3A4E                     580          MOVEA.W     A6,     A5
00001490  2C7C 00000000            581          MOVE.L      #$00000000, A6
00001496                           582          
00001496  43F9 00002CBC            583          LEA         WHITESPACE_COM, A1
0000149C  103C 000E                584          MOVE.B      #14, D0
000014A0  4E4F                     585          TRAP        #15
000014A2                           586  
000014A2  3803                     587          MOVE.W      D3,     D4
000014A4  343C 000A                588          MOVE.W      #10,    D2
000014A8  E56C                     589          LSL.W       D2,     D4
000014AA  343C 000D                590          MOVE.W      #13,    D2
000014AE  E46C                     591          LSR.W       D2,     D4
000014B0  4280                     592          CLR.L       D0
000014B2  4281                     593          CLR.L       D1
000014B4  323C 00FF                594          MOVE.W      #$FF,   D1
000014B8  4286                     595          CLR.L       D6
000014BA  3C3C 00FF                596          MOVE.W      #$FF,   D6
000014BE                           597          
000014BE  4280                     598          CLR.L       D0
000014C0  B83C 0004                599          CMP.B       #$4,    D4
000014C4  6700 001C                600          BEQ         MTR_1_B
000014C8                           601          
000014C8  103C 000F                602          MOVE.B      #$F,   D0
000014CC                           603  
000014CC  6000 0002                604          BRA         MTR_1_A
000014D0                           605          
000014D0                           606  
000014D0                           607  
000014D0                           608  MTR_1_A:
000014D0  381B                     609          MOVE.W      (A3)+,  D4   
000014D2  4EB9 000020C2            610          JSR         POST_INCR_MASK_FIELD
000014D8  4286                     611          CLR.L       D6
000014DA  1C3C 0001                612          MOVE.B      #1,     D6
000014DE  364D                     613          MOVEA.W     A5,     A3
000014E0  4E75                     614          RTS
000014E2                           615  MTR_1_B:
000014E2  381B                     616          MOVE.W      (A3)+,  D4    
000014E4  4EB9 00001FC6            617          JSR         PRE_DECR_MASK_FIELD
000014EA  4286                     618          CLR.L       D6
000014EC  1C3C 0001                619          MOVE.B      #1,     D6
000014F0  364D                     620          MOVEA.W     A5,     A3
000014F2  4E75                     621          RTS
000014F4                           622  
000014F4                           623  
000014F4                           624  
000014F4                           625  
000014F4                           626  OP_CODE_LEA:
000014F4  48E7 0600                627          MOVEM.L    D5-D6, -(A7)
000014F8  7A0C                     628          MOVE.L     #12, D5
000014FA  7C0F                     629          MOVE.L     #15, D6
000014FC  4EB9 00001CB0            630          JSR        GET_BIT
00001502  4CDF 0060                631          MOVEM.L    (A7)+, D5-D6
00001506  B8BC 00000004            632          CMP.L      #%0100, D4
0000150C  6600 07B6                633          BNE        INSTRUCTION_DECODE_FAILURE
00001510  48E7 0600                634          MOVEM.L    D5-D6, -(A7)
00001514  7A06                     635          MOVE.L     #6, D5
00001516  7C08                     636          MOVE.L     #8, D6
00001518  4EB9 00001CB0            637          JSR        GET_BIT
0000151E  4CDF 0060                638          MOVEM.L    (A7)+, D5-D6
00001522  B8BC 00000007            639          CMP.L      #7, D4
00001528  6600 079A                640          BNE        INSTRUCTION_DECODE_FAILURE
0000152C  48E7 0600                641          MOVEM.L    D5-D6, -(A7)
00001530  7A00                     642          MOVE.L     #0, D5
00001532  7C05                     643          MOVE.L     #5, D6
00001534  4EB9 00001CB0            644          JSR        GET_BIT
0000153A  4CDF 0060                645          MOVEM.L    (A7)+, D5-D6
0000153E  B8BC 00000039            646          CMP.L      #%111001, D4
00001544  6700 002E                647          BEQ        OP_CODE_LEA_PRINT
00001548  B8BC 00000038            648          CMP.L      #%111000, D4
0000154E  6700 0024                649          BEQ        OP_CODE_LEA_PRINT
00001552  48E7 0600                650          MOVEM.L    D5-D6, -(A7)
00001556  7A03                     651          MOVE.L     #3, D5
00001558  7C05                     652          MOVE.L     #5, D6
0000155A  4EB9 00001CB0            653          JSR        GET_BIT
00001560  4CDF 0060                654          MOVEM.L    (A7)+, D5-D6
00001564  B8BC 00000002            655          CMP.L      #%010, D4
0000156A  6700 0008                656          BEQ        OP_CODE_LEA_PRINT
0000156E  6000 0754                657          BRA        INSTRUCTION_DECODE_FAILURE
00001572                           658          *Unreachable
00001572  4E75                     659          RTS
00001574                           660  OP_CODE_LEA_PRINT
00001574  43F9 00002CD8            661          LEA         LEA_MSG, A1
0000157A  103C 000E                662          MOVE.B      #14, D0
0000157E  4E4F                     663          TRAP        #15
00001580  43F9 00002C64            664          LEA         SPACE_MSG, A1
00001586  103C 000E                665          MOVE.B      #14, D0
0000158A  4E4F                     666          TRAP        #15
0000158C  4EB9 00002588            667          JSR         LEA_EA
00001592  7C01                     668          MOVE.L      #1, D6
00001594  4E75                     669          RTS
00001596                           670  
00001596                           671  
00001596                           672  
00001596                           673  
00001596                           674  
00001596                           675  OP_CODE_SHIFT_ROTATE
00001596  48E7 0600                676          MOVEM.L    D5-D6, -(A7)
0000159A  7A0C                     677          MOVE.L     #12, D5
0000159C  7C0F                     678          MOVE.L     #15, D6
0000159E  4EB9 00001CB0            679          JSR        GET_BIT
000015A4  4CDF 0060                680          MOVEM.L    (A7)+, D5-D6
000015A8  B8BC 0000000E            681          CMP.L      #%1110, D4
000015AE  6600 0714                682          BNE        INSTRUCTION_DECODE_FAILURE
000015B2                           683          *Now check whether it is register shift or memory shift
000015B2                           684          *If the 6-7 bit is 11, then it is a memory else register shift
000015B2  48E7 0600                685          MOVEM.L    D5-D6, -(A7)
000015B6  7A06                     686          MOVE.L     #6, D5
000015B8  7C07                     687          MOVE.L     #7, D6
000015BA  4EB9 00001CB0            688          JSR        GET_BIT
000015C0  4CDF 0060                689          MOVEM.L    (A7)+, D5-D6
000015C4  B8BC 00000003            690          CMP.L      #3, D4
000015CA  6700 0058                691          BEQ        OP_CODE_MEMORY_SHIFT_ROTATE
000015CE  6000 0002                692          BRA        OP_CODE_REGISTER_SHIFT_ROTATE
000015D2                           693  
000015D2                           694  
000015D2                           695  OP_CODE_REGISTER_SHIFT_ROTATE
000015D2                           696          *Messages are loaded in the order of -ASR, ASL, LSR, LSL, RORX, RORL, ROR, ROL where
000015D2                           697          *each message is of 4 bytes. Essentially using a combination of (9-11) bit + dr(8th bit) we
000015D2                           698          *can index the appropriate message. Mathy and unreadable code but prevents lot of rebudency
000015D2  43F9 00002CDC            699          LEA        ASR_MSG, A1
000015D8  48E7 0600                700          MOVEM.L    D5-D6, -(A7)
000015DC  7A08                     701          MOVE.L     #8, D5
000015DE  7C08                     702          MOVE.L     #8, D6
000015E0  4EB9 00001CB0            703          JSR        GET_BIT
000015E6  4CDF 0060                704          MOVEM.L    (A7)+, D5-D6
000015EA  C8FC 0004                705          MULU         #4,            D4
000015EE  D3C4                     706          ADDA.L       D4,            A1
000015F0                           707          *Check (3, 11) bit 
000015F0                           708          *000->ASR/ASL, 001->LSR/LSL, 011->ROR/ROL
000015F0  48E7 0600                709          MOVEM.L    D5-D6, -(A7)
000015F4  7A03                     710          MOVE.L     #3, D5
000015F6  7C04                     711          MOVE.L     #4, D6
000015F8  4EB9 00001CB0            712          JSR        GET_BIT
000015FE  B8BC 00000002            713          CMP.L      #2, D4
00001604  4CDF 0060                714          MOVEM.L    (A7)+, D5-D6
00001608  C8FC 0008                715          MULU        #8,      D4
0000160C  D3C4                     716          ADDA.L       D4,            A1
0000160E  103C 000E                717          MOVE.B      #14, D0
00001612  4E4F                     718          TRAP        #15
00001614  4EB9 00002394            719          JSR         SHIFT_ROTATE_EA_SIZE
0000161A  4EB9 000023C4            720          JSR         SHIFT_ROTATE_EA_REGISTER
00001620  7C01                     721          MOVE.L      #1, D6
00001622  4E75                     722          RTS
00001624                           723  
00001624                           724  
00001624                           725  OP_CODE_MEMORY_SHIFT_ROTATE
00001624                           726          *If mode bits are less than 010, then invalid instruction so just RTS
00001624  48E7 0600                727          MOVEM.L    D5-D6, -(A7)
00001628  7A03                     728          MOVE.L     #3, D5
0000162A  7C05                     729          MOVE.L     #5, D6
0000162C  4EB9 00001CB0            730          JSR        GET_BIT
00001632  4CDF 0060                731          MOVEM.L    (A7)+, D5-D6
00001636  B8BC 00000002            732          CMP.L      #2, D4
0000163C  6B00 0686                733          BMI        INSTRUCTION_DECODE_FAILURE
00001640                           734          *If mode bits are 101 or 110, then it is dispacement address register EA which is invalid
00001640                           735          *for the current scope
00001640  B8BC 00000005            736          CMP.L      #5, D4
00001646  6700 067C                737          BEQ        INSTRUCTION_DECODE_FAILURE
0000164A  B8BC 00000006            738          CMP.L      #6, D4
00001650  6700 0672                739          BEQ        INSTRUCTION_DECODE_FAILURE
00001654                           740          *If mode bits+register bits are greater than 111001, then invalid instruction
00001654  48E7 0600                741          MOVEM.L    D5-D6, -(A7)
00001658  7A00                     742          MOVE.L     #0, D5
0000165A  7C05                     743          MOVE.L     #5, D6
0000165C  4EB9 00001CB0            744          JSR        GET_BIT
00001662  4CDF 0060                745          MOVEM.L    (A7)+, D5-D6
00001666  B8BC 00000039            746          CMP.L      #%111001, D4
0000166C  6E00 0656                747          BGT        INSTRUCTION_DECODE_FAILURE
00001670  7A09                     748          MOVE.L     #9, D5
00001672  7C0B                     749          MOVE.L     #11, D6
00001674  4EB9 00001CB0            750          JSR        GET_BIT
0000167A  B8BC 00000002            751          CMP.L      #2, D4
00001680  6700 0642                752          BEQ        INSTRUCTION_DECODE_FAILURE *If the 9-11 are 010(RORX, ROLX), instruction decode error.
00001684                           753          *Messages are loaded in the order of -ASR, ASL, LSR, LSL, RORX, RORL, ROR, ROL where
00001684                           754          *each message is of 4 bytes. Essentially using a combination of (9-11) bit + dr(8th bit) we
00001684                           755          *can index the appropriate message. Mathy and unreadable code but prevents lot of rebudency
00001684  43F9 00002CDC            756          LEA        ASR_MSG, A1
0000168A  48E7 0600                757          MOVEM.L    D5-D6, -(A7)
0000168E  7A08                     758          MOVE.L     #8, D5
00001690  7C08                     759          MOVE.L     #8, D6
00001692  4EB9 00001CB0            760          JSR        GET_BIT
00001698  4CDF 0060                761          MOVEM.L    (A7)+, D5-D6
0000169C  C8FC 0004                762          MULU         #4,            D4
000016A0  D3C4                     763          ADDA.L       D4,            A1
000016A2                           764          *Check (9, 11) bit 
000016A2                           765          *000->ASR/ASL, 001->LSR/LSL, 011->ROR/ROL
000016A2  48E7 0600                766          MOVEM.L    D5-D6, -(A7)
000016A6  7A09                     767          MOVE.L     #9, D5
000016A8  7C0B                     768          MOVE.L     #11, D6
000016AA  4EB9 00001CB0            769          JSR        GET_BIT
000016B0  B8BC 00000002            770          CMP.L      #2, D4
000016B6  4CDF 0060                771          MOVEM.L    (A7)+, D5-D6
000016BA  C8FC 0008                772          MULU        #8,      D4
000016BE  D3C4                     773          ADDA.L       D4,            A1
000016C0  103C 000E                774          MOVE.B      #14, D0
000016C4  4E4F                     775          TRAP        #15
000016C6  43F9 00002D15            776          LEA        WORD_MSG, A1
000016CC  103C 000E                777          MOVE.B      #14, D0
000016D0  4E4F                     778          TRAP        #15
000016D2  43F9 00002C64            779          LEA         SPACE_MSG,      A1
000016D8  103C 000E                780          MOVE.B      #14,            D0    
000016DC  4E4F                     781          TRAP        #15
000016DE  4EB9 000024A8            782          JSR         SHIFT_ROTATE_EA_MEMORY
000016E4  7C01                     783          MOVE.L      #1, D6
000016E6  4E75                     784          RTS
000016E8                           785  
000016E8                           786  
000016E8                           787  
000016E8                           788  OP_CODE_NOP:
000016E8  B6BC 00004E71            789          CMP.L    #%0100111001110001, D3
000016EE  6600 05D4                790          BNE      INSTRUCTION_DECODE_FAILURE
000016F2  43F9 00002CB6            791          LEA      NOP_MSG, A1
000016F8  103C 000E                792          MOVE.B      #14, D0
000016FC  4E4F                     793          TRAP        #15 
000016FE  7C01                     794          MOVE.L      #1, D6
00001700  4E75                     795          RTS 
00001702                           796  
00001702                           797  
00001702                           798  
00001702                           799  
00001702                           800  OP_CODE_RTS:
00001702  B6BC 00004E75            801          CMP.L    #%0100111001110101, D3
00001708  6600 05BA                802          BNE      INSTRUCTION_DECODE_FAILURE
0000170C  43F9 00002CB2            803          LEA      RTS_MSG, A1
00001712  103C 000E                804          MOVE.B      #14, D0
00001716  4E4F                     805          TRAP        #15 
00001718  7C01                     806          MOVE.L      #1, D6
0000171A  4E75                     807          RTS 
0000171C                           808          
0000171C                           809  
0000171C                           810  
0000171C                           811  OP_CODE_BCC
0000171C  48E7 0600                812          MOVEM.L    D5-D6, -(A7)
00001720  7A0C                     813          MOVE.L     #12, D5
00001722  7C0F                     814          MOVE.L     #15, D6
00001724  4EB9 00001CB0            815          JSR        GET_BIT
0000172A  4CDF 0060                816          MOVEM.L    (A7)+, D5-D6
0000172E  B8BC 00000006            817          CMP.L      #%0110, D4
00001734  6600 058E                818          BNE        INSTRUCTION_DECODE_FAILURE
00001738                           819          *Get bits from 8-11 to get the condition
00001738                           820          *Only checking for (BGT, BLE, BEQ). Rest are considered
00001738                           821          *invalid
00001738  48E7 0600                822          MOVEM.L    D5-D6, -(A7)
0000173C  7A08                     823          MOVE.L     #8, D5
0000173E  7C0B                     824          MOVE.L     #11, D6
00001740  4EB9 00001CB0            825          JSR        GET_BIT
00001746  4CDF 0060                826          MOVEM.L    (A7)+, D5-D6
0000174A  B8BC 0000000F            827          CMP.L      #15, D4
00001750  6700 001C                828          BEQ        OP_CODE_BLE
00001754  B8BC 0000000E            829          CMP.L      #14, D4
0000175A  6700 0028                830          BEQ        OP_CODE_BGT
0000175E  B8BC 00000007            831          CMP.L      #7,  D4
00001764  6700 0034                832          BEQ        OP_CODE_BEQ
00001768  6000 055A                833          BRA        INSTRUCTION_DECODE_FAILURE
0000176C  4E75                     834          RTS
0000176E                           835  
0000176E                           836  
0000176E                           837  OP_CODE_BLE
0000176E  43F9 00002D06            838          LEA         BLE_MSG, A1
00001774  103C 000E                839          MOVE.B      #14, D0
00001778  4E4F                     840          TRAP        #15
0000177A  4EB9 000024CA            841          JSR         BR_EA_SIZE_AND_DISPLACEMENT
00001780  7C01                     842          MOVE.L      #1, D6
00001782  4E75                     843          RTS
00001784                           844  
00001784                           845  OP_CODE_BGT
00001784  43F9 00002D0A            846          LEA         BGT_MSG, A1
0000178A  103C 000E                847          MOVE.B      #14, D0
0000178E  4E4F                     848          TRAP        #15
00001790  4EB9 000024CA            849          JSR         BR_EA_SIZE_AND_DISPLACEMENT
00001796  7C01                     850          MOVE.L      #1, D6
00001798  4E75                     851          RTS
0000179A                           852  
0000179A                           853  
0000179A                           854  OP_CODE_BEQ
0000179A  43F9 00002D0E            855          LEA         BEQ_MSG, A1
000017A0  103C 000E                856          MOVE.B      #14, D0
000017A4  4E4F                     857          TRAP        #15
000017A6  4EB9 000024CA            858          JSR         BR_EA_SIZE_AND_DISPLACEMENT
000017AC  7C01                     859          MOVE.L      #1, D6
000017AE  4E75                     860          RTS
000017B0                           861  
000017B0                           862  
000017B0                           863  
000017B0                           864  
000017B0                           865  OP_CODE_BRA:
000017B0  48E7 0600                866          MOVEM.L    D5-D6, -(A7)
000017B4  7A0C                     867          MOVE.L     #12, D5
000017B6  7C0F                     868          MOVE.L     #15, D6
000017B8  4EB9 00001CB0            869          JSR        GET_BIT
000017BE  4CDF 0060                870          MOVEM.L    (A7)+, D5-D6
000017C2  B8BC 00000006            871          CMP.L       #%0110, D4
000017C8  6600 04FA                872          BNE         INSTRUCTION_DECODE_FAILURE
000017CC  43F9 00002C8B            873          LEA         BRA_MSG, A1
000017D2  103C 000E                874          MOVE.B      #14, D0
000017D6  4E4F                     875          TRAP        #15
000017D8  4EB9 000024CA            876          JSR         BR_EA_SIZE_AND_DISPLACEMENT
000017DE  7C01                     877          MOVE.L      #1, D6
000017E0  4E75                     878          RTS 
000017E2                           879          
000017E2                           880  
000017E2                           881  
000017E2                           882  
000017E2                           883  
000017E2                           884  
000017E2                           885  OP_CODE_ADDA
000017E2  48E7 0600                886          MOVEM.L    D5-D6, -(A7)
000017E6  7A0C                     887          MOVE.L     #12, D5
000017E8  7C0F                     888          MOVE.L     #15, D6
000017EA  4EB9 00001CB0            889          JSR        GET_BIT
000017F0  4CDF 0060                890          MOVEM.L    (A7)+, D5-D6
000017F4  B8BC 0000000D            891          CMP.L      #%1101, D4
000017FA  6600 04C8                892          BNE        INSTRUCTION_DECODE_FAILURE
000017FE  48E7 0600                893          MOVEM.L    D5-D6, -(A7)
00001802  7A06                     894          MOVE.L     #6, D5
00001804  7C08                     895          MOVE.L     #8, D6
00001806  4EB9 00001CB0            896          JSR        GET_BIT
0000180C  4CDF 0060                897          MOVEM.L    (A7)+, D5-D6
00001810  B8BC 00000002            898          CMP.L      #%010, D4
00001816  6F00 04AC                899          BLE        INSTRUCTION_DECODE_FAILURE
0000181A  B8BC 00000004            900          CMP.L      #%100, D4
00001820  6700 04A2                901          BEQ        INSTRUCTION_DECODE_FAILURE
00001824  B8BC 00000005            902          CMP.L      #%101, D4
0000182A  6700 0498                903          BEQ        INSTRUCTION_DECODE_FAILURE
0000182E  B8BC 00000006            904          CMP.L      #%110, D4
00001834  6700 048E                905          BEQ        INSTRUCTION_DECODE_FAILURE
00001838  48E7 0600                906          MOVEM.L    D5-D6, -(A7)
0000183C  7A00                     907          MOVE.L     #0, D5
0000183E  7C05                     908          MOVE.L     #5, D6
00001840  4EB9 00001CB0            909          JSR        GET_BIT
00001846  4CDF 0060                910          MOVEM.L    (A7)+, D5-D6
0000184A  B8BC 0000003A            911          CMP.L      #%111010, D4
00001850  6700 0472                912          BEQ        INSTRUCTION_DECODE_FAILURE
00001854  B8BC 0000003B            913          CMP.L      #%111011, D4
0000185A  6700 0468                914          BEQ        INSTRUCTION_DECODE_FAILURE
0000185E  B8BC 0000003C            915          CMP.L      #%111100, D4
00001864  6E00 045E                916          BGT        INSTRUCTION_DECODE_FAILURE
00001868  48E7 0600                917          MOVEM.L    D5-D6, -(A7)
0000186C  7A03                     918          MOVE.L     #3, D5
0000186E  7C05                     919          MOVE.L     #5, D6
00001870  4EB9 00001CB0            920          JSR        GET_BIT
00001876  4CDF 0060                921          MOVEM.L    (A7)+, D5-D6
0000187A  B8BC 00000005            922          CMP.L      #%101, D4
00001880  6700 0442                923          BEQ        INSTRUCTION_DECODE_FAILURE
00001884  B8BC 00000006            924          CMP.L      #%110, D4
0000188A  6700 0438                925          BEQ        INSTRUCTION_DECODE_FAILURE
0000188E  43F9 00002CA0            926          LEA        ADDA_MSG, A1
00001894  103C 000E                927          MOVE.B      #14, D0
00001898  4E4F                     928          TRAP        #15
0000189A  4EB9 000025E4            929          JSR        ADDA_EA_SIZE_AND_EA  
000018A0  7C01                     930          MOVE.L      #1, D6
000018A2  4E75                     931          RTS
000018A4                           932  
000018A4                           933  
000018A4                           934  
000018A4                           935  
000018A4                           936  OP_CODE_ADDQ
000018A4  48E7 0600                937          MOVEM.L    D5-D6, -(A7)
000018A8  7A0C                     938          MOVE.L     #12, D5
000018AA  7C0F                     939          MOVE.L     #15, D6
000018AC  4EB9 00001CB0            940          JSR        GET_BIT
000018B2  4CDF 0060                941          MOVEM.L    (A7)+, D5-D6
000018B6  B8BC 00000005            942          CMP.L      #%0101, D4
000018BC  6600 0406                943          BNE        INSTRUCTION_DECODE_FAILURE
000018C0  48E7 0600                944          MOVEM.L    D5-D6, -(A7)
000018C4  7A06                     945          MOVE.L     #6, D5
000018C6  7C07                     946          MOVE.L     #7, D6
000018C8  4EB9 00001CB0            947          JSR        GET_BIT
000018CE  4CDF 0060                948          MOVEM.L    (A7)+, D5-D6
000018D2  B8BC 00000003            949          CMP.L      #%11, D4
000018D8  6700 03EA                950          BEQ        INSTRUCTION_DECODE_FAILURE
000018DC  48E7 0600                951          MOVEM.L    D5-D6, -(A7)
000018E0  7A00                     952          MOVE.L     #0, D5
000018E2  7C05                     953          MOVE.L     #5, D6
000018E4  4EB9 00001CB0            954          JSR        GET_BIT
000018EA  4CDF 0060                955          MOVEM.L    (A7)+, D5-D6
000018EE  B8BC 00000039            956          CMP.L      #%111001, D4
000018F4  6E00 03CE                957          BGT        INSTRUCTION_DECODE_FAILURE
000018F8  48E7 0600                958          MOVEM.L    D5-D6, -(A7)
000018FC  7A03                     959          MOVE.L     #3, D5
000018FE  7C05                     960          MOVE.L     #5, D6
00001900  4EB9 00001CB0            961          JSR        GET_BIT
00001906  4CDF 0060                962          MOVEM.L    (A7)+, D5-D6
0000190A  B8BC 00000005            963          CMP.L      #%101, D4
00001910  6700 03B2                964          BEQ        INSTRUCTION_DECODE_FAILURE
00001914  B8BC 00000006            965          CMP.L      #%110, D4
0000191A  6700 03A8                966          BEQ        INSTRUCTION_DECODE_FAILURE
0000191E  43F9 00002CA5            967          LEA        ADDQ_MSG, A1
00001924  103C 000E                968          MOVE.B      #14, D0
00001928  4E4F                     969          TRAP        #15
0000192A  4EB9 000026DE            970          JSR        ADDQ_EA_SIZE_AND_EA
00001930  7C01                     971          MOVE.L      #1, D6
00001932  4E75                     972          RTS
00001934                           973  
00001934                           974  
00001934                           975  
00001934                           976  OP_CODE_ADD
00001934  48E7 0600                977          MOVEM.L    D5-D6, -(A7)
00001938  7A0C                     978          MOVE.L     #12, D5
0000193A  7C0F                     979          MOVE.L     #15, D6
0000193C  4EB9 00001CB0            980          JSR        GET_BIT
00001942  4CDF 0060                981          MOVEM.L    (A7)+, D5-D6
00001946  B8BC 0000000D            982          CMP.L      #%1101, D4
0000194C  6600 0376                983          BNE        INSTRUCTION_DECODE_FAILURE
00001950  6000 0022                984          BRA        OP_CODE_ADD_SUB
00001954                           985  
00001954                           986  OP_CODE_SUB  
00001954  48E7 0600                987          MOVEM.L    D5-D6, -(A7)
00001958  7A0C                     988          MOVE.L     #12, D5
0000195A  7C0F                     989          MOVE.L     #15, D6
0000195C  4EB9 00001CB0            990          JSR        GET_BIT
00001962  4CDF 0060                991          MOVEM.L    (A7)+, D5-D6 
00001966  B8BC 00000009            992          CMP.L       #%1001, D4
0000196C  6600 0356                993          BNE        INSTRUCTION_DECODE_FAILURE
00001970  6000 0002                994          BRA     OP_CODE_ADD_SUB
00001974                           995  
00001974                           996  OP_CODE_ADD_SUB
00001974  48E7 0600                997          MOVEM.L    D5-D6, -(A7)
00001978  7A06                     998          MOVE.L     #6, D5
0000197A  7C08                     999          MOVE.L     #8, D6
0000197C  4EB9 00001CB0           1000          JSR        GET_BIT
00001982  4CDF 0060               1001          MOVEM.L    (A7)+, D5-D6
00001986  B8BC 00000002           1002          CMP.L      #%010, D4
0000198C  6E00 0006               1003          BGT        OP_CODE_ADD_SUB_SOURCE_REG
00001990  6000 00D2               1004          BRA        OP_CODE_ADD_SUB_DEST_REG
00001994                          1005  
00001994                          1006  
00001994                          1007  OP_CODE_ADD_SUB_SOURCE_REG      
00001994  48E7 0600               1008          MOVEM.L    D5-D6, -(A7)
00001998  7A00                    1009          MOVE.L     #0, D5
0000199A  7C05                    1010          MOVE.L     #5, D6
0000199C  4EB9 00001CB0           1011          JSR        GET_BIT
000019A2  4CDF 0060               1012          MOVEM.L    (A7)+, D5-D6
000019A6  B8BC 00000039           1013          CMP.L      #%111001, D4
000019AC  6E00 0316               1014          BGT        INSTRUCTION_DECODE_FAILURE
000019B0  48E7 0600               1015          MOVEM.L    D5-D6, -(A7)
000019B4  7A03                    1016          MOVE.L     #3, D5
000019B6  7C05                    1017          MOVE.L     #5, D6
000019B8  4EB9 00001CB0           1018          JSR        GET_BIT
000019BE  4CDF 0060               1019          MOVEM.L    (A7)+, D5-D6
000019C2  B8BC 00000005           1020          CMP.L      #%101, D4
000019C8  6700 02FA               1021          BEQ        INSTRUCTION_DECODE_FAILURE
000019CC  B8BC 00000006           1022          CMP.L      #%110, D4
000019D2  6700 02F0               1023          BEQ        INSTRUCTION_DECODE_FAILURE
000019D6  B8BC 00000000           1024          CMP.L      #%000, D4
000019DC  6700 02E6               1025          BEQ        INSTRUCTION_DECODE_FAILURE
000019E0  B8BC 00000001           1026          CMP.L      #%001, D4
000019E6  6700 02DC               1027          BEQ        INSTRUCTION_DECODE_FAILURE
000019EA  48E7 0600               1028          MOVEM.L    D5-D6, -(A7)
000019EE  7A06                    1029          MOVE.L     #6, D5
000019F0  7C08                    1030          MOVE.L     #8, D6
000019F2  4EB9 00001CB0           1031          JSR        GET_BIT
000019F8  4CDF 0060               1032          MOVEM.L    (A7)+, D5-D6
000019FC  B8BC 00000007           1033          CMP.L      #%111, D4
00001A02  6700 02C0               1034          BEQ        INSTRUCTION_DECODE_FAILURE
00001A06  B8BC 00000003           1035          CMP.L      #%011, D4
00001A0C  6700 02B6               1036          BEQ        INSTRUCTION_DECODE_FAILURE
00001A10  43F9 00002CAA           1037          LEA        SUB_MSG, A1
00001A16  48E7 0600               1038          MOVEM.L    D5-D6, -(A7)
00001A1A  7A0C                    1039          MOVE.L     #12, D5
00001A1C  7C0F                    1040          MOVE.L     #15, D6
00001A1E  4EB9 00001CB0           1041          JSR        GET_BIT
00001A24  4CDF 0060               1042          MOVEM.L    (A7)+, D5-D6
00001A28  0484 00000009           1043          SUBI.L      #%1001, D4
00001A2E  D3C4                    1044          ADDA.L     D4, A1
00001A30  103C 000E               1045          MOVE.B      #14, D0
00001A34  4E4F                    1046          TRAP        #15
00001A36  4EB9 000027B8           1047          JSR        ADD_SUB_EA_SIZE
00001A3C                          1048  
00001A3C  43F9 00002C64           1049          LEA         SPACE_MSG,   A1
00001A42  103C 000E               1050          MOVE.B      #14,   D0    
00001A46  4E4F                    1051          TRAP        #15
00001A48                          1052  
00001A48  4EB9 000027E2           1053          JSR        ADD_SUB_EA_REG
00001A4E                          1054  
00001A4E  43F9 00002D1B           1055          LEA         COMMA_MSG,   A1
00001A54  103C 000E               1056          MOVE.B      #14,   D0    
00001A58  4E4F                    1057          TRAP        #15
00001A5A  4EB9 00002812           1058          JSR        ADD_SUB_EA_EA
00001A60  7C01                    1059          MOVE.L      #1, D6
00001A62  4E75                    1060          RTS
00001A64                          1061  
00001A64                          1062  
00001A64                          1063  OP_CODE_ADD_SUB_DEST_REG
00001A64  48E7 0600               1064          MOVEM.L    D5-D6, -(A7)
00001A68  7A00                    1065          MOVE.L     #0, D5
00001A6A  7C05                    1066          MOVE.L     #5, D6
00001A6C  4EB9 00001CB0           1067          JSR        GET_BIT
00001A72  4CDF 0060               1068          MOVEM.L    (A7)+, D5-D6
00001A76  B8BC 0000003A           1069          CMP.L      #%111010, D4
00001A7C  6700 0246               1070          BEQ        INSTRUCTION_DECODE_FAILURE
00001A80  B8BC 0000003B           1071          CMP.L      #%111011, D4
00001A86  6700 023C               1072          BEQ        INSTRUCTION_DECODE_FAILURE
00001A8A  48E7 0600               1073          MOVEM.L    D5-D6, -(A7)
00001A8E  7A03                    1074          MOVE.L     #3, D5
00001A90  7C05                    1075          MOVE.L     #5, D6
00001A92  4EB9 00001CB0           1076          JSR        GET_BIT
00001A98  4CDF 0060               1077          MOVEM.L    (A7)+, D5-D6
00001A9C  B8BC 00000005           1078          CMP.L      #%101, D4
00001AA2  6700 0220               1079          BEQ        INSTRUCTION_DECODE_FAILURE
00001AA6  B8BC 00000006           1080          CMP.L      #%110, D4
00001AAC  6700 0216               1081          BEQ        INSTRUCTION_DECODE_FAILURE
00001AB0  48E7 0600               1082          MOVEM.L    D5-D6, -(A7)
00001AB4  7A06                    1083          MOVE.L     #6, D5
00001AB6  7C08                    1084          MOVE.L     #8, D6
00001AB8  4EB9 00001CB0           1085          JSR        GET_BIT
00001ABE  4CDF 0060               1086          MOVEM.L    (A7)+, D5-D6
00001AC2  B8BC 00000007           1087          CMP.L      #%111, D4
00001AC8  6700 01FA               1088          BEQ        INSTRUCTION_DECODE_FAILURE
00001ACC  B8BC 00000003           1089          CMP.L      #%011, D4
00001AD2  6700 01F0               1090          BEQ        INSTRUCTION_DECODE_FAILURE
00001AD6  43F9 00002CAA           1091          LEA        SUB_MSG, A1
00001ADC  48E7 0600               1092          MOVEM.L    D5-D6, -(A7)
00001AE0  7A0C                    1093          MOVE.L     #12, D5
00001AE2  7C0F                    1094          MOVE.L     #15, D6
00001AE4  4EB9 00001CB0           1095          JSR        GET_BIT
00001AEA  4CDF 0060               1096          MOVEM.L    (A7)+, D5-D6
00001AEE  0484 00000009           1097          SUBI.L      #%1001, D4
00001AF4  D3C4                    1098          ADDA.L     D4, A1
00001AF6  103C 000E               1099          MOVE.B      #14, D0
00001AFA  4E4F                    1100          TRAP        #15
00001AFC  4EB9 000027B8           1101          JSR        ADD_SUB_EA_SIZE
00001B02                          1102  
00001B02  43F9 00002C64           1103          LEA         SPACE_MSG,   A1
00001B08  103C 000E               1104          MOVE.B      #14,   D0    
00001B0C  4E4F                    1105          TRAP        #15
00001B0E                          1106          
00001B0E  4EB9 00002812           1107          JSR        ADD_SUB_EA_EA
00001B14                          1108  
00001B14  43F9 00002D1B           1109          LEA         COMMA_MSG,   A1
00001B1A  103C 000E               1110          MOVE.B      #14,   D0    
00001B1E  4E4F                    1111          TRAP        #15
00001B20  4EB9 000027E2           1112          JSR        ADD_SUB_EA_REG
00001B26  7C01                    1113          MOVE.L      #1, D6
00001B28  4E75                    1114          RTS
00001B2A                          1115  
00001B2A                          1116  
00001B2A                          1117  
00001B2A                          1118  
00001B2A                          1119  OP_CODE_MOVEQ:
00001B2A                          1120          *NOTE MOVEQ has static bit at index 8
00001B2A  43F9 00002CCE           1121          LEA         MOVEQ_MSG, A1
00001B30  103C 000E               1122          MOVE.B      #14, D0
00001B34  4E4F                    1123          TRAP        #15
00001B36                          1124          
00001B36  43F9 00002CBA           1125          LEA         WHITESPACE, A1
00001B3C  103C 000E               1126          MOVE.B      #14, D0
00001B40  4E4F                    1127          TRAP        #15
00001B42                          1128          
00001B42  43F9 00002D1F           1129          LEA         HASH_MSG, A1
00001B48  103C 000E               1130          MOVE.B      #14, D0
00001B4C  4E4F                    1131          TRAP        #15
00001B4E                          1132  
00001B4E  43F9 00002D1D           1133          LEA         DOLLAR_MSG, A1
00001B54  103C 000E               1134          MOVE.B      #14, D0
00001B58  4E4F                    1135          TRAP        #15
00001B5A                          1136         
00001B5A  4EB9 0000237E           1137          JSR         DATA_7_0
00001B60                          1138          
00001B60  43F9 00002CBC           1139          LEA         WHITESPACE_COM, A1
00001B66  103C 000E               1140          MOVE.B      #14, D0
00001B6A  4E4F                    1141          TRAP        #15
00001B6C                          1142          
00001B6C  43F9 00002CBF           1143          LEA         DATA_REG, A1
00001B72  103C 000E               1144          MOVE.B      #14, D0
00001B76  4E4F                    1145          TRAP        #15
00001B78                          1146          
00001B78  4EB9 00001CF4           1147          JSR         REGISTER_11_9
00001B7E                          1148          
00001B7E  1C3C 0001               1149          MOVE.B      #1,      D6
00001B82                          1150          
00001B82  4E75                    1151          RTS
00001B84                          1152          
00001B84                          1153  OP_CODE_AND:
00001B84  43F9 00002CD4           1154          LEA         AND_MSG, A1
00001B8A  103C 000E               1155          MOVE.B      #14, D0
00001B8E  4E4F                    1156          TRAP        #15
00001B90                          1157          
00001B90                          1158          *check opmode
00001B90                          1159          *if starts with 1 do Dn ^ <ea> -> <ea>
00001B90                          1160          *OPMODE_8_6 will appent size next to opcode
00001B90  4EB9 00001D0C           1161          JSR         OPMODE_8_6
00001B96  E35C                    1162          ROL.W       #1, D4
00001B98  6500 0038               1163          BCS         OP_CODE_AND2
00001B9C                          1164          *else...
00001B9C                          1165          
00001B9C  43F9 00002CBA           1166          LEA         WHITESPACE, A1
00001BA2  103C 000E               1167          MOVE.B      #14, D0
00001BA6  4E4F                    1168          TRAP        #15
00001BA8                          1169          
00001BA8                          1170          *check ea and print
00001BA8  4EB9 00001DFE           1171          JSR         EFFECTIVEADD_5_0
00001BAE                          1172          
00001BAE  43F9 00002CBC           1173          LEA         WHITESPACE_COM, A1
00001BB4  103C 000E               1174          MOVE.B      #14, D0
00001BB8  4E4F                    1175          TRAP        #15
00001BBA                          1176          
00001BBA                          1177          *print out data reg
00001BBA                          1178          
00001BBA  43F9 00002CBF           1179          LEA         DATA_REG, A1
00001BC0  103C 000E               1180          MOVE.B      #14, D0
00001BC4  4E4F                    1181          TRAP        #15
00001BC6                          1182          
00001BC6  4EB9 00001CF4           1183          JSR         REGISTER_11_9
00001BCC                          1184          
00001BCC                          1185          
00001BCC  1C3C 0001               1186          MOVE.B      #1,      D6
00001BD0                          1187          
00001BD0  4E75                    1188          RTS
00001BD2                          1189  
00001BD2                          1190  OP_CODE_AND2:
00001BD2  43F9 00002CBA           1191          LEA         WHITESPACE, A1
00001BD8  103C 000E               1192          MOVE.B      #14, D0
00001BDC  4E4F                    1193          TRAP        #15
00001BDE                          1194          
00001BDE  43F9 00002CBF           1195          LEA         DATA_REG, A1
00001BE4  103C 000E               1196          MOVE.B      #14, D0
00001BE8  4E4F                    1197          TRAP        #15
00001BEA                          1198          
00001BEA  4EB9 00001CF4           1199          JSR         REGISTER_11_9
00001BF0                          1200          
00001BF0  43F9 00002CBC           1201          LEA         WHITESPACE_COM, A1
00001BF6  103C 000E               1202          MOVE.B      #14, D0
00001BFA  4E4F                    1203          TRAP        #15
00001BFC                          1204          
00001BFC  4EB9 00001DFE           1205          JSR         EFFECTIVEADD_5_0
00001C02                          1206          
00001C02  1C3C 0001               1207          MOVE.B      #1,      D6
00001C06                          1208          
00001C06  4E75                    1209          RTS
00001C08                          1210  OP_CODE_OR:
00001C08  43F9 00002CFC           1211          LEA         OR_MSG, A1
00001C0E  103C 000E               1212          MOVE.B      #14, D0
00001C12  4E4F                    1213          TRAP        #15
00001C14                          1214          
00001C14  4EB9 00001D0C           1215          JSR         OPMODE_8_6
00001C1A  E35C                    1216          ROL.W       #1, D4
00001C1C  6500 0038               1217          BCS         OP_CODE_OR2
00001C20                          1218          
00001C20  43F9 00002CBA           1219          LEA         WHITESPACE, A1
00001C26  103C 000E               1220          MOVE.B      #14, D0
00001C2A  4E4F                    1221          TRAP        #15
00001C2C                          1222          
00001C2C  4EB9 00001DFE           1223          JSR         EFFECTIVEADD_5_0
00001C32                          1224          
00001C32  43F9 00002CBC           1225          LEA         WHITESPACE_COM, A1
00001C38  103C 000E               1226          MOVE.B      #14, D0
00001C3C  4E4F                    1227          TRAP        #15
00001C3E                          1228          
00001C3E  43F9 00002CBF           1229          LEA         DATA_REG, A1
00001C44  103C 000E               1230          MOVE.B      #14, D0
00001C48  4E4F                    1231          TRAP        #15
00001C4A                          1232          
00001C4A  4EB9 00001CF4           1233          JSR         REGISTER_11_9
00001C50                          1234              
00001C50  1C3C 0001               1235          MOVE.B      #1,      D6
00001C54                          1236          
00001C54  4E75                    1237          RTS
00001C56                          1238          
00001C56                          1239  OP_CODE_OR2:
00001C56  43F9 00002CBA           1240          LEA         WHITESPACE, A1
00001C5C  103C 000E               1241          MOVE.B      #14, D0
00001C60  4E4F                    1242          TRAP        #15
00001C62                          1243          
00001C62  43F9 00002CBF           1244          LEA         DATA_REG, A1
00001C68  103C 000E               1245          MOVE.B      #14, D0
00001C6C  4E4F                    1246          TRAP        #15
00001C6E                          1247          
00001C6E  4EB9 00001CF4           1248          JSR         REGISTER_11_9
00001C74                          1249          
00001C74  43F9 00002CBC           1250          LEA         WHITESPACE_COM, A1
00001C7A  103C 000E               1251          MOVE.B      #14, D0
00001C7E  4E4F                    1252          TRAP        #15
00001C80                          1253          
00001C80  4EB9 00001DFE           1254          JSR         EFFECTIVEADD_5_0
00001C86                          1255          
00001C86  1C3C 0001               1256          MOVE.B      #1,      D6
00001C8A                          1257          
00001C8A  4E75                    1258          RTS
00001C8C                          1259          
00001C8C                          1260  OP_CODE_JSR:
00001C8C  43F9 00002CCA           1261          LEA         JSR_MSG, A1
00001C92  103C 000E               1262          MOVE.B      #14, D0
00001C96  4E4F                    1263          TRAP        #15
00001C98                          1264          
00001C98  43F9 00002CBA           1265          LEA         WHITESPACE, A1
00001C9E  103C 000E               1266          MOVE.B      #14, D0
00001CA2  4E4F                    1267          TRAP        #15
00001CA4                          1268          
00001CA4  4EB9 00001DFE           1269          JSR         EFFECTIVEADD_5_0
00001CAA                          1270          
00001CAA  1C3C 0001               1271          MOVE.B      #1,      D6
00001CAE                          1272          
00001CAE  4E75                    1273          RTS
00001CB0                          1274  
00001CB0                          1275  
00001CB0                          1276  
00001CB0                          1277  GET_BIT
00001CB0  4284                    1278          CLR.L   D4
00001CB2  3803                    1279          MOVE.W  D3, D4   
00001CB4                          1280          *Shift it to left by 15-y to get rid of all the bits to the left of yth bit 
00001CB4                          1281          *and then shift the bits such that the xth bit is the 0th bit
00001CB4  4486                    1282          NEG.L   D6
00001CB6  0686 0000000F           1283          ADDI.L  #15, D6
00001CBC  DA86                    1284          ADD.L   D6, D5
00001CBE  ED6C                    1285          LSL.W   D6, D4
00001CC0  EA6C                    1286          LSR.W   D5, D4
00001CC2  4E75                    1287          RTS
00001CC4                          1288  
00001CC4                          1289  INSTRUCTION_DECODE_FAILURE
00001CC4  4E75                    1290          RTS
00001CC6                          1291          
00001CC6                          1292  
00001CC6                          1293  TOTAL_DECODE_FAILURE
00001CC6  3803                    1294          MOVE.W  D3, D4
00001CC8  43F9 00002CFF           1295          LEA DATA_MSG, A1
00001CCE  103C 000E               1296          MOVE.B      #14, D0
00001CD2  4E4F                    1297          TRAP        #15
00001CD4  43F9 00002C64           1298          LEA SPACE_MSG, A1
00001CDA  103C 000E               1299          MOVE.B      #14, D0
00001CDE  4E4F                    1300          TRAP        #15
00001CE0  43F9 00002D1D           1301          LEA DOLLAR_MSG, A1
00001CE6  103C 000E               1302          MOVE.B      #14, D0
00001CEA  4E4F                    1303          TRAP        #15
00001CEC  4EB9 00002A64           1304          JSR PRINT_WORD_VALUE
00001CF2  4E75                    1305          RTS
00001CF4                          1306          
00001CF4                          1307  
00001CF4                          1308  
00001CF4                          1309  
00001CF4                          1310  
00001CF4                          1311  
00001CF4                          1312  
00001CF4                          1313  
00001CF4                          1314  
00001CF4                          1315  
00001CF4                          1316  
00001CF4                          1317  
00001CF4                          1318  -------------------- end include --------------------
00001CF4                          1319      INCLUDE         'Disassembler_EA.x68'
00001CF4                          1320  
00001CF4                          1321  
00001CF4                          1322  REGISTER_11_9:
00001CF4                          1323          *make a copy
00001CF4  3803                    1324          MOVE.W      D3,     D4
00001CF6                          1325          
00001CF6                          1326          *isolate bits 11-9 on the right
00001CF6  343C 0004               1327          MOVE.W      #4,     D2
00001CFA  E56C                    1328          LSL.W       D2,     D4
00001CFC  343C 000D               1329          MOVE.W      #13,    D2
00001D00  E46C                    1330          LSR.W       D2,     D4
00001D02                          1331          
00001D02                          1332          *print out the register number
00001D02  2204                    1333          MOVE.L      D4,     D1
00001D04  103C 0003               1334          MOVE.B      #3,     D0
00001D08  4E4F                    1335          TRAP        #15
00001D0A                          1336          
00001D0A  4E75                    1337          RTS
00001D0C                          1338  OPMODE_8_6:
00001D0C                          1339          *append size to opcode
00001D0C  3803                    1340          MOVE.W      D3,     D4
00001D0E                          1341          
00001D0E  343C 0007               1342          MOVE.W      #7,     D2
00001D12  E56C                    1343          LSL.W       D2,     D4
00001D14  343C 000D               1344          MOVE.W      #13,    D2
00001D18  E46C                    1345          LSR.W       D2,     D4
00001D1A                          1346          
00001D1A  B83C 0000               1347          CMP.B       #$0,    D4
00001D1E  6700 00A2               1348          BEQ         BYTE_SIZE
00001D22                          1349          
00001D22  B83C 0004               1350          CMP.B       #$4,    D4
00001D26  6700 009A               1351          BEQ         BYTE_SIZE
00001D2A                          1352          
00001D2A  B83C 0001               1353          CMP.B       #$1,    D4
00001D2E  6700 00A6               1354          BEQ         WORD_SIZE
00001D32                          1355          
00001D32  B83C 0005               1356          CMP.B       #$5,    D4
00001D36  6700 009E               1357          BEQ         WORD_SIZE
00001D3A                          1358          
00001D3A  B83C 0002               1359          CMP.B       #$2,    D4
00001D3E  6700 00AA               1360          BEQ         LONG_SIZE
00001D42                          1361          
00001D42  B83C 0006               1362          CMP.B       #$6,    D4
00001D46  6700 00A2               1363          BEQ         LONG_SIZE
00001D4A                          1364             
00001D4A                          1365          *isolates bits 8-6 to D4 on the left side, so rotation can be done in higher level to corresponding output for opmode
00001D4A                          1366  PREP_FOR_ROT:
00001D4A                          1367          *MOVE.W      D3,     D4
00001D4A                          1368          
00001D4A  343C 000D               1369          MOVE.W      #13,     D2
00001D4E  E56C                    1370          LSL.W       D2,     D4
00001D50                          1371          *MOVE.W      #13,    D2
00001D50                          1372          *LSR.W       D2,     D4
00001D50                          1373          
00001D50  4E75                    1374          RTS
00001D52                          1375  
00001D52                          1376  SIZE_13_12:
00001D52  3803                    1377          MOVE.W      D3,     D4
00001D54                          1378          
00001D54  343C 0002               1379          MOVE.W      #2,     D2
00001D58  E56C                    1380          LSL.W       D2,     D4
00001D5A  343C 000E               1381          MOVE.W      #14,    D2
00001D5E  E46C                    1382          LSR.W       D2,     D4
00001D60                          1383          
00001D60  B83C 0001               1384          CMP.B       #$1,    D4
00001D64  6700 005C               1385          BEQ         BYTE_SIZE
00001D68                          1386          
00001D68  B83C 0003               1387          CMP.B       #$3,    D4
00001D6C  6700 0068               1388          BEQ         WORD_SIZE
00001D70                          1389          
00001D70  B83C 0002               1390          CMP.B       #$2,    D4
00001D74  6700 0074               1391          BEQ         LONG_SIZE
00001D78                          1392          
00001D78  4E75                    1393          RTS
00001D7A                          1394          
00001D7A                          1395  SIZE_7_6:
00001D7A  3803                    1396          MOVE.W      D3,     D4
00001D7C                          1397          
00001D7C  343C 0008               1398          MOVE.W      #8,     D2
00001D80  E56C                    1399          LSL.W       D2,     D4
00001D82  343C 000E               1400          MOVE.W      #14,    D2
00001D86  E46C                    1401          LSR.W       D2,     D4
00001D88                          1402          
00001D88  B83C 0000               1403          CMP.B       #$0,    D4
00001D8C  6700 0034               1404          BEQ         BYTE_SIZE
00001D90                          1405          
00001D90  B83C 0001               1406          CMP.B       #$1,    D4
00001D94  6700 0040               1407          BEQ         WORD_SIZE
00001D98                          1408          
00001D98  B83C 0002               1409          CMP.B       #$2,    D4
00001D9C  6700 004C               1410          BEQ         LONG_SIZE
00001DA0                          1411          
00001DA0  4E75                    1412          RTS
00001DA2                          1413  
00001DA2                          1414  SIZE_6:
00001DA2  3803                    1415          MOVE.W      D3,     D4
00001DA4                          1416          
00001DA4  343C 0009               1417          MOVE.W      #9,     D2
00001DA8  E56C                    1418          LSL.W       D2,     D4
00001DAA  343C 000F               1419          MOVE.W      #15,    D2
00001DAE  E46C                    1420          LSR.W       D2,     D4
00001DB0                          1421  
00001DB0                          1422          
00001DB0  B83C 0000               1423          CMP.B       #$0,    D4
00001DB4  6700 0020               1424          BEQ         WORD_SIZE
00001DB8                          1425          
00001DB8  B83C 0001               1426          CMP.B       #$1,    D4
00001DBC  6700 002C               1427          BEQ         LONG_SIZE
00001DC0                          1428          
00001DC0  4E75                    1429          RTS
00001DC2                          1430          
00001DC2                          1431  BYTE_SIZE:
00001DC2  43F9 00002D12           1432          LEA         BYTE_MSG, A1
00001DC8  103C 000E               1433          MOVE.B      #14, D0
00001DCC  4E4F                    1434          TRAP        #15
00001DCE                          1435  
00001DCE  1C3C 0000               1436          MOVE.B      #$0,      D6
00001DD2                          1437  
00001DD2  6000 FF76               1438          BRA         PREP_FOR_ROT
00001DD6                          1439  WORD_SIZE:
00001DD6  43F9 00002D15           1440          LEA         WORD_MSG, A1
00001DDC  103C 000E               1441          MOVE.B      #14, D0
00001DE0  4E4F                    1442          TRAP        #15
00001DE2                          1443          
00001DE2  1C3C 0001               1444          MOVE.B      #$1,      D6
00001DE6                          1445          
00001DE6  6000 FF62               1446          BRA         PREP_FOR_ROT
00001DEA                          1447  LONG_SIZE:
00001DEA  43F9 00002D18           1448          LEA         LONG_MSG, A1
00001DF0  103C 000E               1449          MOVE.B      #14, D0
00001DF4  4E4F                    1450          TRAP        #15
00001DF6                          1451          
00001DF6  1C3C 0002               1452          MOVE.B      #$2,      D6
00001DFA                          1453          
00001DFA  6000 FF4E               1454          BRA         PREP_FOR_ROT
00001DFE                          1455  EFFECTIVEADD_5_0:
00001DFE                          1456          *isolate mode bits (5-3)
00001DFE                          1457          *make a copy
00001DFE  3803                    1458          MOVE.W      D3,     D4
00001E00                          1459          
00001E00                          1460          *isolate bits 5-3 on the right
00001E00  343C 000A               1461          MOVE.W      #10,     D2
00001E04  E56C                    1462          LSL.W       D2,     D4
00001E06  343C 000D               1463          MOVE.W      #13,    D2
00001E0A  E46C                    1464          LSR.W       D2,     D4
00001E0C                          1465          
00001E0C  B83C 0000               1466          CMP.B       #$0,    D4
00001E10  6700 03C8               1467          BEQ         DATAR_EA
00001E14                          1468          
00001E14  B83C 0001               1469          CMP.B       #$1,    D4
00001E18  6700 03E4               1470          BEQ         ADDR_EA
00001E1C                          1471          
00001E1C  B83C 0002               1472          CMP.B       #$2,    D4
00001E20  6700 0400               1473          BEQ         ADDP_EA
00001E24                          1474          
00001E24  B83C 0003               1475          CMP.B       #$3,    D4
00001E28  6700 0434               1476          BEQ         ADDPP_EA
00001E2C                          1477          
00001E2C  B83C 0004               1478          CMP.B       #$4,    D4
00001E30  6700 0474               1479          BEQ         ADDPM_EA
00001E34                          1480          
00001E34  B83C 0007               1481          CMP.B       #$7,    D4
00001E38  6700 04B4               1482          BEQ         IDATA_EA
00001E3C                          1483  
00001E3C  4E75                    1484          RTS
00001E3E                          1485          
00001E3E                          1486          
00001E3E                          1487  DESTINATION_11_6: 
00001E3E                          1488         
00001E3E  3803                    1489          MOVE.W      D3,     D4
00001E40                          1490          *isolate bits 8-6 on the right
00001E40  343C 0007               1491          MOVE.W      #7,     D2
00001E44  E56C                    1492          LSL.W       D2,     D4
00001E46  343C 000D               1493          MOVE.W      #13,    D2
00001E4A  E46C                    1494          LSR.W       D2,     D4
00001E4C                          1495          
00001E4C  B83C 0000               1496          CMP.B       #$0,    D4
00001E50  6700 002C               1497          BEQ         PRINT_DESTINATION_DATA
00001E54                          1498          
00001E54  B83C 0001               1499          CMP.B       #$1,    D4
00001E58  6700 0048               1500          BEQ         DEST_A_EA
00001E5C                          1501          
00001E5C  B83C 0002               1502          CMP.B       #$2,    D4
00001E60  6700 0064               1503          BEQ         DEST_P_EA
00001E64                          1504          
00001E64  B83C 0003               1505          CMP.B       #$3,    D4
00001E68  6700 0098               1506          BEQ         DEST_PP_EA
00001E6C                          1507          
00001E6C  B83C 0004               1508          CMP.B       #$4,    D4
00001E70  6700 00D8               1509          BEQ         DEST_PM_EA
00001E74                          1510          
00001E74  B83C 0007               1511          CMP.B       #$7,    D4
00001E78  6700 0474               1512          BEQ         IDATA_EA
00001E7C                          1513          
00001E7C  4E75                    1514          RTS
00001E7E                          1515  
00001E7E                          1516  PRINT_DESTINATION_DATA:
00001E7E  43F9 00002CBF           1517          LEA         DATA_REG, A1
00001E84  103C 000E               1518          MOVE.B      #14, D0
00001E88  4E4F                    1519          TRAP        #15
00001E8A                          1520          
00001E8A  3803                    1521          MOVE.W      D3,     D4
00001E8C                          1522          
00001E8C                          1523          *print the reg num
00001E8C                          1524          *isolate bits 11-9 on the right
00001E8C  343C 0004               1525          MOVE.W      #4,     D2
00001E90  E56C                    1526          LSL.W       D2,     D4
00001E92  343C 000D               1527          MOVE.W      #13,    D2
00001E96  E46C                    1528          LSR.W       D2,     D4
00001E98                          1529          
00001E98                          1530          *print out the register number
00001E98  2204                    1531          MOVE.L      D4,     D1
00001E9A  103C 0003               1532          MOVE.B      #3,     D0
00001E9E  4E4F                    1533          TRAP        #15
00001EA0                          1534  
00001EA0  4E75                    1535          RTS
00001EA2                          1536  DEST_A_EA:
00001EA2                          1537          *print the 'A'
00001EA2  43F9 00002CC1           1538          LEA         ADDR_REG, A1
00001EA8  103C 000E               1539          MOVE.B      #14, D0
00001EAC  4E4F                    1540          TRAP        #15
00001EAE                          1541          
00001EAE  3803                    1542          MOVE.W      D3,     D4
00001EB0                          1543          
00001EB0                          1544          *print the reg num
00001EB0                          1545          *isolate bits 11-9 on the right
00001EB0  343C 0004               1546          MOVE.W      #4,     D2
00001EB4  E56C                    1547          LSL.W       D2,     D4
00001EB6  343C 000D               1548          MOVE.W      #13,    D2
00001EBA  E46C                    1549          LSR.W       D2,     D4
00001EBC                          1550          
00001EBC                          1551          *print out the register number
00001EBC  2204                    1552          MOVE.L      D4,     D1
00001EBE  103C 0003               1553          MOVE.B      #3,     D0
00001EC2  4E4F                    1554          TRAP        #15
00001EC4                          1555  
00001EC4  4E75                    1556          RTS
00001EC6                          1557  DEST_P_EA:
00001EC6                          1558          *print the '(A'
00001EC6  43F9 00002D25           1559          LEA         OPEN_PARENTHESIS_MSG, A1
00001ECC  103C 000E               1560          MOVE.B      #14, D0
00001ED0  4E4F                    1561          TRAP        #15
00001ED2                          1562          
00001ED2  43F9 00002CC1           1563          LEA         ADDR_REG, A1
00001ED8  103C 000E               1564          MOVE.B      #14, D0
00001EDC  4E4F                    1565          TRAP        #15
00001EDE                          1566          
00001EDE  3803                    1567          MOVE.W      D3,     D4
00001EE0                          1568          
00001EE0                          1569          *print the reg num
00001EE0                          1570          *isolate bits 11-9 on the right
00001EE0  343C 0004               1571          MOVE.W      #4,     D2
00001EE4  E56C                    1572          LSL.W       D2,     D4
00001EE6  343C 000D               1573          MOVE.W      #13,    D2
00001EEA  E46C                    1574          LSR.W       D2,     D4
00001EEC                          1575          
00001EEC                          1576          *print out the register number
00001EEC  2204                    1577          MOVE.L      D4,     D1
00001EEE  103C 0003               1578          MOVE.B      #3,     D0
00001EF2  4E4F                    1579          TRAP        #15
00001EF4                          1580          
00001EF4  43F9 00002D27           1581          LEA         CLOSE_PARENTHESIS_MSG, A1
00001EFA  103C 000E               1582          MOVE.B      #14, D0
00001EFE  4E4F                    1583          TRAP        #15
00001F00  4E75                    1584          RTS
00001F02                          1585  DEST_PP_EA:
00001F02                          1586          *print the '(A'
00001F02  43F9 00002D25           1587          LEA         OPEN_PARENTHESIS_MSG, A1
00001F08  103C 000E               1588          MOVE.B      #14, D0
00001F0C  4E4F                    1589          TRAP        #15
00001F0E                          1590          
00001F0E  43F9 00002CC1           1591          LEA         ADDR_REG, A1
00001F14  103C 000E               1592          MOVE.B      #14, D0
00001F18  4E4F                    1593          TRAP        #15
00001F1A                          1594          
00001F1A  3803                    1595          MOVE.W      D3,     D4
00001F1C                          1596          
00001F1C                          1597          *print the reg num
00001F1C                          1598          *isolate bits 11-9 on the right
00001F1C  343C 0004               1599          MOVE.W      #4,     D2
00001F20  E56C                    1600          LSL.W       D2,     D4
00001F22  343C 000D               1601          MOVE.W      #13,    D2
00001F26  E46C                    1602          LSR.W       D2,     D4
00001F28                          1603          
00001F28                          1604          *print out the register number
00001F28  2204                    1605          MOVE.L      D4,     D1
00001F2A  103C 0003               1606          MOVE.B      #3,     D0
00001F2E  4E4F                    1607          TRAP        #15
00001F30                          1608          
00001F30  43F9 00002D27           1609          LEA         CLOSE_PARENTHESIS_MSG, A1
00001F36  103C 000E               1610          MOVE.B      #14, D0
00001F3A  4E4F                    1611          TRAP        #15
00001F3C                          1612          
00001F3C  43F9 00002D21           1613          LEA         PLUS_MSG, A1
00001F42  103C 000E               1614          MOVE.B      #14, D0
00001F46  4E4F                    1615          TRAP        #15
00001F48                          1616          
00001F48  4E75                    1617          RTS
00001F4A                          1618  DEST_PM_EA:
00001F4A                          1619          *print the '-(A'
00001F4A  43F9 00002D23           1620          LEA         MINUS_MSG, A1
00001F50  103C 000E               1621          MOVE.B      #14, D0
00001F54  4E4F                    1622          TRAP        #15
00001F56                          1623          
00001F56  43F9 00002D25           1624          LEA         OPEN_PARENTHESIS_MSG, A1
00001F5C  103C 000E               1625          MOVE.B      #14, D0
00001F60  4E4F                    1626          TRAP        #15
00001F62                          1627          
00001F62  43F9 00002CC1           1628          LEA         ADDR_REG, A1
00001F68  103C 000E               1629          MOVE.B      #14, D0
00001F6C  4E4F                    1630          TRAP        #15
00001F6E                          1631          
00001F6E  3803                    1632          MOVE.W      D3,     D4
00001F70                          1633          
00001F70                          1634          *print the reg num
00001F70                          1635          *isolate bits 2-0 on the right
00001F70  343C 0004               1636          MOVE.W      #4,     D2
00001F74  E56C                    1637          LSL.W       D2,     D4
00001F76  343C 000D               1638          MOVE.W      #13,    D2
00001F7A  E46C                    1639          LSR.W       D2,     D4
00001F7C                          1640          
00001F7C                          1641          *print out the register number
00001F7C  2204                    1642          MOVE.L      D4,     D1
00001F7E  103C 0003               1643          MOVE.B      #3,     D0
00001F82  4E4F                    1644          TRAP        #15
00001F84                          1645          
00001F84  43F9 00002D27           1646          LEA         CLOSE_PARENTHESIS_MSG, A1
00001F8A  103C 000E               1647          MOVE.B      #14, D0
00001F8E  4E4F                    1648          TRAP        #15
00001F90                          1649          
00001F90  4E75                    1650          RTS
00001F92                          1651  DEST_DATA_EA:
00001F92                          1652          *(not doing this)check register to see if it's W or L addressinG
00001F92                          1653          *use (A3)+.W or .L to get the address data
00001F92                          1654          *print it out
00001F92                          1655          
00001F92                          1656          *->take the next long and spit it out
00001F92                          1657          *print out the data in hex form
00001F92                          1658          *NOTE that if register = 100 it means raw data, can be in decimal b/c not address
00001F92                          1659          
00001F92  3803                    1660          MOVE.W      D3,     D4
00001F94                          1661          
00001F94                          1662          *get reg num
00001F94                          1663          *isolate bits 8-6 on the right
00001F94  343C 0007               1664          MOVE.W      #7,     D2
00001F98  E56C                    1665          LSL.W       D2,     D4
00001F9A  343C 000D               1666          MOVE.W      #13,    D2
00001F9E  E46C                    1667          LSR.W       D2,     D4
00001FA0                          1668          
00001FA0                          1669          *raw data
00001FA0  B87C 0004               1670          CMP         #$4,    D4
00001FA4  6700 037C               1671          BEQ         IDATA
00001FA8                          1672          
00001FA8                          1673          *W addressing
00001FA8  B87C 0000               1674          CMP         #$0,    D4
00001FAC  6700 03BA               1675          BEQ         WADDR
00001FB0                          1676          
00001FB0  43F9 00002D1D           1677          LEA         DOLLAR_MSG, A1
00001FB6  103C 000E               1678          MOVE.B      #14, D0
00001FBA  4E4F                    1679          TRAP        #15
00001FBC                          1680          
00001FBC                          1681          *MOVE.B      #16,    D2          *base 16
00001FBC                          1682          *MOVE.B      #15,    D0
00001FBC  281B                    1683          MOVE.L      (A3)+,   D4
00001FBE  4EB9 00002A92           1684          JSR         PRINT_LONG_VALUE
00001FC4                          1685          *TRAP        #15
00001FC4                          1686          
00001FC4  4E75                    1687          RTS
00001FC6                          1688  
00001FC6                          1689  
00001FC6                          1690  PRE_DECR_MASK_FIELD:
00001FC6                          1691  
00001FC6  B03C 000F               1692          CMP.B       #$F,    D0
00001FCA  6E00 0034               1693          BGT         EXIT_LOOP_DECR
00001FCE  E35C                    1694          ROL         #1,     D4      
00001FD0  6500 0006               1695          BCS         PRE_DECR_LOOP_TRACK
00001FD4  6400 0016               1696          BCC         PRE_DECR_LOOP_UNTRACK
00001FD8                          1697  
00001FD8                          1698  PRE_DECR_LOOP_TRACK:
00001FD8                          1699          *   D0  keeps track of num of bits
00001FD8                          1700          *   D1  keeps track of first reg
00001FD8                          1701          *   D2  keeps track of value for some other logic
00001FD8                          1702          *   D3  keeps track of word data from memory
00001FD8                          1703          *   D4  holds the rotating word
00001FD8                          1704          *   D5  keeps track of space between reg, - if not set, and / if set
00001FD8                          1705          *   D6  keeps track of second reg
00001FD8                          1706  
00001FD8  B27C 00FF               1707          CMP.W       #$FF,   D1
00001FDC  6600 0008               1708          BNE         PRE_DECR_LOOP_TRACK_SECOND
00001FE0                          1709          
00001FE0                          1710          
00001FE0  1200                    1711          MOVE.B      D0,     D1
00001FE2  5200                    1712          ADD.B       #1,     D0
00001FE4  60E0                    1713          BRA         PRE_DECR_MASK_FIELD
00001FE6                          1714          
00001FE6                          1715  PRE_DECR_LOOP_TRACK_SECOND:
00001FE6                          1716  
00001FE6                          1717  
00001FE6  1C00                    1718          MOVE.B      D0,     D6
00001FE8  5200                    1719          ADD.B       #1,     D0
00001FEA  60DA                    1720          BRA         PRE_DECR_MASK_FIELD
00001FEC                          1721          
00001FEC                          1722  PRE_DECR_LOOP_UNTRACK:
00001FEC  5200                    1723          ADD.B       #1,     D0
00001FEE  B23C 00FF               1724          CMP.B       #$FF,   D1
00001FF2  67D2                    1725          BEQ         PRE_DECR_MASK_FIELD
00001FF4                          1726          
00001FF4  BC3C 00FF               1727          CMP.B       #$FF,    D6
00001FF8  66CC                    1728          BNE         PRE_DECR_MASK_FIELD
00001FFA  1A3C 0001               1729          MOVE.B      #$1,    D5
00001FFE                          1730  
00001FFE  60C6                    1731          BRA         PRE_DECR_MASK_FIELD
00002000                          1732  
00002000                          1733  EXIT_LOOP_DECR:
00002000                          1734  
00002000  BA3C 0000               1735          CMP.B       #$0,    D5
00002004  6700 0014               1736          BEQ         DECR_SWAP
00002008                          1737  
00002008  4283                    1738          CLR.L       D3
0000200A  1601                    1739          MOVE.B      D1,     D3
0000200C  B23C 0007               1740          CMP.B       #$7,    D1
00002010  6E00 001A               1741          BGT         DECR_1_A
00002014  6F00 0020               1742          BLE         DECR_1_B
00002018                          1743  
00002018  4E75                    1744          RTS
0000201A                          1745  DECR_SWAP:
0000201A  C346                    1746          EXG         D1,     D6
0000201C  4283                    1747          CLR.L       D3
0000201E  1601                    1748          MOVE.B      D1,     D3
00002020  B23C 0007               1749          CMP.B       #$7,    D1
00002024  6E00 0006               1750          BGT         DECR_1_A
00002028  6F00 000C               1751          BLE         DECR_1_B
0000202C                          1752          
0000202C                          1753  DECR_1_A:
0000202C  4EB9 000020A0           1754          JSR         PRINT_A_DECR
00002032  6000 000C               1755          BRA         DECR_2
00002036                          1756  DECR_1_B:
00002036  4EB9 00002080           1757          JSR         PRINT_D_DECR
0000203C  6000 0002               1758          BRA         DECR_2
00002040                          1759  
00002040                          1760  DECR_2:
00002040  BA3C 0000               1761          CMP.B       #$0,    D5
00002044  6700 0006               1762          BEQ         DECR_2_A
00002048  6600 000C               1763          BNE         DECR_2_B
0000204C                          1764          
0000204C                          1765  DECR_2_A:
0000204C  4EB9 000021BE           1766          JSR         PRINT_MINUS
00002052  6000 000C               1767          BRA         DECR_3
00002056                          1768          
00002056                          1769  DECR_2_B:
00002056  4EB9 000021CC           1770          JSR         PRINT_DIV
0000205C  6000 0002               1771          BRA         DECR_3
00002060                          1772          
00002060                          1773  DECR_3:
00002060  4283                    1774          CLR.L       D3
00002062  1606                    1775          MOVE.B      D6,     D3
00002064  BC3C 0007               1776          CMP.B       #$7,    D6
00002068  6E00 0006               1777          BGT         DECR_3_A
0000206C  6F00 000A               1778          BLE         DECR_3_B
00002070                          1779  
00002070                          1780  DECR_3_A:
00002070  4EB9 000020A0           1781          JSR         PRINT_A_DECR
00002076  4E75                    1782          RTS
00002078                          1783  DECR_3_B:
00002078  4EB9 00002080           1784          JSR         PRINT_D_DECR
0000207E  4E75                    1785          RTS
00002080                          1786  
00002080                          1787  
00002080                          1788  PRINT_D_DECR:
00002080                          1789  
00002080  43F9 00002CBF           1790          LEA         DATA_REG, A1
00002086  103C 000E               1791          MOVE.B      #14, D0
0000208A  4E4F                    1792          TRAP        #15
0000208C                          1793          
0000208C  43F9 00002C67           1794          LEA         ZERO_MSG, A1
00002092  C6FC 0002               1795          MULU        #2,       D3
00002096  D3C3                    1796          ADDA.L      D3,       A1
00002098                          1797          
00002098  103C 000E               1798          MOVE.B      #14, D0
0000209C  4E4F                    1799          TRAP        #15
0000209E                          1800  
0000209E  4E75                    1801          RTS 
000020A0                          1802  PRINT_A_DECR:
000020A0  43F9 00002CC1           1803          LEA         ADDR_REG, A1
000020A6  103C 000E               1804          MOVE.B      #14, D0
000020AA  4E4F                    1805          TRAP        #15
000020AC                          1806          
000020AC  5103                    1807          SUB.B       #$8,      D3
000020AE  43F9 00002C67           1808          LEA         ZERO_MSG, A1
000020B4  C6FC 0002               1809          MULU        #2,       D3
000020B8  D3C3                    1810          ADDA.L      D3,       A1
000020BA                          1811          
000020BA  103C 000E               1812          MOVE.B      #14, D0
000020BE  4E4F                    1813          TRAP        #15
000020C0                          1814  
000020C0  4E75                    1815          RTS 
000020C2                          1816  
000020C2                          1817  
000020C2                          1818         
000020C2                          1819  POST_INCR_MASK_FIELD:
000020C2  B03C 0000               1820          CMP.B       #$0,    D0
000020C6  6D00 0034               1821          BLT         EXIT_LOOP_INCR
000020CA  E35C                    1822          ROL         #1,     D4      
000020CC  6500 0006               1823          BCS         POST_INCR_LOOP_TRACK
000020D0  6400 0016               1824          BCC         POST_INCR_LOOP_UNTRACK
000020D4                          1825  
000020D4                          1826  POST_INCR_LOOP_TRACK:
000020D4                          1827          *   D0  keeps track of num of bits
000020D4                          1828          *   D1  keeps track of first reg
000020D4                          1829          *   D2  keeps track of value for some other logic
000020D4                          1830          *   D3  keeps track of word data from memory
000020D4                          1831          *   D4  holds the rotating word
000020D4                          1832          *   D5  keeps track of space between reg, - if not set, and / if set
000020D4                          1833          *   D6  keeps track of second reg
000020D4  B27C 00FF               1834          CMP.W       #$FF,   D1
000020D8  6600 0008               1835          BNE         POST_INCR_LOOP_TRACK_SECOND
000020DC                          1836          
000020DC                          1837          
000020DC  1200                    1838          MOVE.B      D0,     D1
000020DE  5300                    1839          SUB.B       #1,     D0
000020E0  60E0                    1840          BRA         POST_INCR_MASK_FIELD
000020E2                          1841          
000020E2                          1842  POST_INCR_LOOP_TRACK_SECOND:
000020E2                          1843  
000020E2                          1844  
000020E2  1C00                    1845          MOVE.B      D0,     D6
000020E4  5300                    1846          SUB.B       #1,     D0
000020E6  60DA                    1847          BRA         POST_INCR_MASK_FIELD
000020E8                          1848          
000020E8                          1849  POST_INCR_LOOP_UNTRACK:
000020E8  5300                    1850          SUB.B       #1,     D0
000020EA  B23C 00FF               1851          CMP.B       #$FF,   D1
000020EE  67D2                    1852          BEQ         POST_INCR_MASK_FIELD
000020F0                          1853          
000020F0  BC3C 00FF               1854          CMP.B       #$FF,    D6
000020F4  66CC                    1855          BNE         POST_INCR_MASK_FIELD
000020F6  1A3C 0001               1856          MOVE.B      #$1,    D5
000020FA                          1857  
000020FA  60C6                    1858          BRA         POST_INCR_MASK_FIELD
000020FC                          1859  
000020FC                          1860  EXIT_LOOP_INCR:
000020FC  BA3C 0000               1861          CMP.B       #$0,    D5
00002100  6700 0014               1862          BEQ         INCR_SWAP
00002104                          1863  
00002104  4283                    1864          CLR.L       D3
00002106  1601                    1865          MOVE.B      D1,     D3
00002108  B23C 0007               1866          CMP.B       #$7,    D1
0000210C  6E00 001A               1867          BGT         INCR_1_A
00002110  6F00 0020               1868          BLE         INCR_1_B
00002114                          1869  
00002114  4E75                    1870          RTS
00002116                          1871  
00002116                          1872  INCR_SWAP:
00002116  C346                    1873          EXG         D1,     D6
00002118  4283                    1874          CLR.L       D3
0000211A  1601                    1875          MOVE.B      D1,     D3
0000211C  B23C 0007               1876          CMP.B       #$7,    D1
00002120  6E00 0006               1877          BGT         INCR_1_A
00002124  6F00 000C               1878          BLE         INCR_1_B        
00002128                          1879          
00002128                          1880  INCR_1_A:
00002128  4EB9 0000219C           1881          JSR         PRINT_A_INCR
0000212E  6000 000C               1882          BRA         INCR_2
00002132                          1883  INCR_1_B:
00002132  4EB9 0000217C           1884          JSR         PRINT_D_INCR
00002138  6000 0002               1885          BRA         INCR_2
0000213C                          1886  
0000213C                          1887  INCR_2:
0000213C  BA3C 0000               1888          CMP.B       #$0,    D5
00002140  6700 0006               1889          BEQ         INCR_2_A
00002144  6600 000C               1890          BNE         INCR_2_B
00002148                          1891          
00002148                          1892  INCR_2_A:
00002148  4EB9 000021BE           1893          JSR         PRINT_MINUS
0000214E  6000 000C               1894          BRA         INCR_3
00002152                          1895          
00002152                          1896  INCR_2_B:
00002152  4EB9 000021CC           1897          JSR         PRINT_DIV
00002158  6000 0002               1898          BRA         INCR_3
0000215C                          1899          
0000215C                          1900  INCR_3:
0000215C  4283                    1901          CLR.L       D3
0000215E  1606                    1902          MOVE.B      D6,     D3
00002160  BC3C 0007               1903          CMP.B       #$7,    D6
00002164  6E00 0006               1904          BGT         INCR_3_A
00002168  6F00 000A               1905          BLE         INCR_3_B
0000216C                          1906  
0000216C                          1907  INCR_3_A:
0000216C  4EB9 0000219C           1908          JSR         PRINT_A_INCR
00002172  4E75                    1909          RTS
00002174                          1910  INCR_3_B:
00002174  4EB9 0000217C           1911          JSR         PRINT_D_INCR
0000217A  4E75                    1912          RTS
0000217C                          1913  
0000217C                          1914  
0000217C                          1915  PRINT_D_INCR:
0000217C                          1916  
0000217C  43F9 00002CBF           1917          LEA         DATA_REG, A1
00002182  103C 000E               1918          MOVE.B      #14, D0
00002186  4E4F                    1919          TRAP        #15
00002188                          1920          
00002188                          1921          
00002188  43F9 00002C67           1922          LEA         ZERO_MSG, A1
0000218E  C6FC 0002               1923          MULU        #2,       D3
00002192  D3C3                    1924          ADDA.L      D3,       A1
00002194                          1925          
00002194  103C 000E               1926          MOVE.B      #14, D0
00002198  4E4F                    1927          TRAP        #15
0000219A                          1928  
0000219A  4E75                    1929          RTS 
0000219C                          1930  PRINT_A_INCR:
0000219C  43F9 00002CC1           1931          LEA         ADDR_REG, A1
000021A2  103C 000E               1932          MOVE.B      #14, D0
000021A6  4E4F                    1933          TRAP        #15
000021A8                          1934          
000021A8  5103                    1935          SUB.B       #$8,      D3
000021AA  43F9 00002C67           1936          LEA         ZERO_MSG, A1
000021B0  C6FC 0002               1937          MULU        #2,       D3
000021B4  D3C3                    1938          ADDA.L      D3,       A1
000021B6                          1939          
000021B6  103C 000E               1940          MOVE.B      #14, D0
000021BA  4E4F                    1941          TRAP        #15
000021BC                          1942  
000021BC  4E75                    1943          RTS
000021BE                          1944  
000021BE                          1945  PRINT_MINUS:
000021BE  43F9 00002D23           1946          LEA         MINUS_MSG, A1
000021C4  103C 000E               1947          MOVE.B      #14, D0
000021C8  4E4F                    1948          TRAP        #15
000021CA                          1949  
000021CA  4E75                    1950          RTS
000021CC                          1951  
000021CC                          1952  PRINT_DIV:
000021CC  43F9 00002CC3           1953          LEA         DIV_SIGN, A1
000021D2  103C 000E               1954          MOVE.B      #14, D0
000021D6  4E4F                    1955          TRAP        #15
000021D8                          1956  
000021D8  4E75                    1957          RTS       
000021DA                          1958  DATAR_EA:
000021DA                          1959          *print the 'D'
000021DA  43F9 00002CBF           1960          LEA         DATA_REG, A1
000021E0  103C 000E               1961          MOVE.B      #14, D0
000021E4  4E4F                    1962          TRAP        #15
000021E6                          1963          
000021E6  3803                    1964          MOVE.W      D3,     D4
000021E8                          1965          
000021E8                          1966          *print the reg num
000021E8                          1967          *isolate bits 2-0 on the right
000021E8  343C 000D               1968          MOVE.W      #13,     D2
000021EC  E56C                    1969          LSL.W       D2,     D4
000021EE  343C 000D               1970          MOVE.W      #13,    D2
000021F2  E46C                    1971          LSR.W       D2,     D4
000021F4                          1972          
000021F4                          1973          *print out the register number
000021F4  2204                    1974          MOVE.L      D4,     D1
000021F6  103C 0003               1975          MOVE.B      #3,     D0
000021FA  4E4F                    1976          TRAP        #15
000021FC                          1977  
000021FC  4E75                    1978          RTS
000021FE                          1979  ADDR_EA:
000021FE                          1980          *print the 'A'
000021FE  43F9 00002CC1           1981          LEA         ADDR_REG, A1
00002204  103C 000E               1982          MOVE.B      #14, D0
00002208  4E4F                    1983          TRAP        #15
0000220A                          1984          
0000220A  3803                    1985          MOVE.W      D3,     D4
0000220C                          1986          
0000220C                          1987          *print the reg num
0000220C                          1988          *isolate bits 2-0 on the right
0000220C  343C 000D               1989          MOVE.W      #13,     D2
00002210  E56C                    1990          LSL.W       D2,     D4
00002212  343C 000D               1991          MOVE.W      #13,    D2
00002216  E46C                    1992          LSR.W       D2,     D4
00002218                          1993          
00002218                          1994          *print out the register number
00002218  2204                    1995          MOVE.L      D4,     D1
0000221A  103C 0003               1996          MOVE.B      #3,     D0
0000221E  4E4F                    1997          TRAP        #15
00002220                          1998  
00002220  4E75                    1999          RTS
00002222                          2000  ADDP_EA:
00002222                          2001          *print the '(A'
00002222  43F9 00002D25           2002          LEA         OPEN_PARENTHESIS_MSG, A1
00002228  103C 000E               2003          MOVE.B      #14, D0
0000222C  4E4F                    2004          TRAP        #15
0000222E                          2005          
0000222E  43F9 00002CC1           2006          LEA         ADDR_REG, A1
00002234  103C 000E               2007          MOVE.B      #14, D0
00002238  4E4F                    2008          TRAP        #15
0000223A                          2009          
0000223A  3803                    2010          MOVE.W      D3,     D4
0000223C                          2011          
0000223C                          2012          *print the reg num
0000223C                          2013          *isolate bits 2-0 on the right
0000223C  343C 000D               2014          MOVE.W      #13,     D2
00002240  E56C                    2015          LSL.W       D2,     D4
00002242  343C 000D               2016          MOVE.W      #13,    D2
00002246  E46C                    2017          LSR.W       D2,     D4
00002248                          2018          
00002248                          2019          *print out the register number
00002248  2204                    2020          MOVE.L      D4,     D1
0000224A  103C 0003               2021          MOVE.B      #3,     D0
0000224E  4E4F                    2022          TRAP        #15
00002250                          2023          
00002250  43F9 00002D27           2024          LEA         CLOSE_PARENTHESIS_MSG, A1
00002256  103C 000E               2025          MOVE.B      #14, D0
0000225A  4E4F                    2026          TRAP        #15
0000225C  4E75                    2027          RTS
0000225E                          2028  ADDPP_EA:
0000225E                          2029          *print the '(A'
0000225E  43F9 00002D25           2030          LEA         OPEN_PARENTHESIS_MSG, A1
00002264  103C 000E               2031          MOVE.B      #14, D0
00002268  4E4F                    2032          TRAP        #15
0000226A                          2033          
0000226A  43F9 00002CC1           2034          LEA         ADDR_REG, A1
00002270  103C 000E               2035          MOVE.B      #14, D0
00002274  4E4F                    2036          TRAP        #15
00002276                          2037          
00002276  3803                    2038          MOVE.W      D3,     D4
00002278                          2039          
00002278                          2040          *print the reg num
00002278                          2041          *isolate bits 2-0 on the right
00002278  343C 000D               2042          MOVE.W      #13,     D2
0000227C  E56C                    2043          LSL.W       D2,     D4
0000227E  343C 000D               2044          MOVE.W      #13,    D2
00002282  E46C                    2045          LSR.W       D2,     D4
00002284                          2046          
00002284                          2047          *print out the register number
00002284  2204                    2048          MOVE.L      D4,     D1
00002286  103C 0003               2049          MOVE.B      #3,     D0
0000228A  4E4F                    2050          TRAP        #15
0000228C                          2051          
0000228C  43F9 00002D27           2052          LEA         CLOSE_PARENTHESIS_MSG, A1
00002292  103C 000E               2053          MOVE.B      #14, D0
00002296  4E4F                    2054          TRAP        #15
00002298                          2055          
00002298  43F9 00002D21           2056          LEA         PLUS_MSG, A1
0000229E  103C 000E               2057          MOVE.B      #14, D0
000022A2  4E4F                    2058          TRAP        #15
000022A4                          2059          
000022A4  4E75                    2060          RTS
000022A6                          2061  ADDPM_EA:
000022A6                          2062          *print the '-(A'
000022A6  43F9 00002D23           2063          LEA         MINUS_MSG, A1
000022AC  103C 000E               2064          MOVE.B      #14, D0
000022B0  4E4F                    2065          TRAP        #15
000022B2                          2066          
000022B2  43F9 00002D25           2067          LEA         OPEN_PARENTHESIS_MSG, A1
000022B8  103C 000E               2068          MOVE.B      #14, D0
000022BC  4E4F                    2069          TRAP        #15
000022BE                          2070          
000022BE  43F9 00002CC1           2071          LEA         ADDR_REG, A1
000022C4  103C 000E               2072          MOVE.B      #14, D0
000022C8  4E4F                    2073          TRAP        #15
000022CA                          2074          
000022CA  3803                    2075          MOVE.W      D3,     D4
000022CC                          2076          
000022CC                          2077          *print the reg num
000022CC                          2078          *isolate bits 2-0 on the right
000022CC  343C 000D               2079          MOVE.W      #13,     D2
000022D0  E56C                    2080          LSL.W       D2,     D4
000022D2  343C 000D               2081          MOVE.W      #13,    D2
000022D6  E46C                    2082          LSR.W       D2,     D4
000022D8                          2083          
000022D8                          2084          *print out the register number
000022D8  2204                    2085          MOVE.L      D4,     D1
000022DA  103C 0003               2086          MOVE.B      #3,     D0
000022DE  4E4F                    2087          TRAP        #15
000022E0                          2088          
000022E0  43F9 00002D27           2089          LEA         CLOSE_PARENTHESIS_MSG, A1
000022E6  103C 000E               2090          MOVE.B      #14, D0
000022EA  4E4F                    2091          TRAP        #15
000022EC                          2092          
000022EC  4E75                    2093          RTS
000022EE                          2094  IDATA_EA:
000022EE                          2095          *(not doing this)check register to see if it's W or L addressinG
000022EE                          2096          *use (A3)+.W or .L to get the address data
000022EE                          2097          *print it out
000022EE                          2098          
000022EE                          2099          *->take the next long and spit it out
000022EE                          2100          *print out the data in hex form
000022EE                          2101          *NOTE that if register = 100 it means raw data, can be in decimal b/c not address
000022EE                          2102          
000022EE  3803                    2103          MOVE.W      D3,     D4
000022F0                          2104          
000022F0                          2105          *get reg num
000022F0                          2106          *isolate bits 2-0 on the right
000022F0  343C 000D               2107          MOVE.W      #13,     D2
000022F4  E56C                    2108          LSL.W       D2,     D4
000022F6  343C 000D               2109          MOVE.W      #13,    D2
000022FA  E46C                    2110          LSR.W       D2,     D4
000022FC                          2111          
000022FC                          2112          *raw data
000022FC  B87C 0004               2113          CMP         #$4,    D4
00002300  6700 0020               2114          BEQ         IDATA
00002304                          2115          
00002304                          2116          *W addressing
00002304  B87C 0000               2117          CMP         #$0,    D4
00002308  6700 005E               2118          BEQ         WADDR
0000230C                          2119          
0000230C  43F9 00002D1D           2120          LEA         DOLLAR_MSG, A1
00002312  103C 000E               2121          MOVE.B      #14, D0
00002316  4E4F                    2122          TRAP        #15
00002318                          2123          
00002318                          2124          *MOVE.B      #16,    D2          *base 16
00002318                          2125          *MOVE.B      #15,    D0
00002318  281B                    2126          MOVE.L      (A3)+,   D4
0000231A  4EB9 00002A92           2127          JSR         PRINT_LONG_VALUE
00002320                          2128          *TRAP        #15
00002320                          2129          
00002320  4E75                    2130          RTS
00002322                          2131  IDATA:
00002322                          2132  
00002322  43F9 00002D1F           2133          LEA         HASH_MSG, A1
00002328  103C 000E               2134          MOVE.B      #14, D0
0000232C  4E4F                    2135          TRAP        #15
0000232E                          2136          
0000232E  43F9 00002D1D           2137          LEA         DOLLAR_MSG, A1
00002334  103C 000E               2138          MOVE.B      #14, D0
00002338  4E4F                    2139          TRAP        #15
0000233A                          2140          
0000233A                          2141          *MOVE.W      (A3)+,     D1
0000233A                          2142          *MOVE.B      #3,     D0
0000233A                          2143          *TRAP        #15
0000233A                          2144          
0000233A                          2145          *MOVE.B      #16,    D2          *base 16
0000233A                          2146          *MOVE.B      #15,    D0
0000233A  BC3C 0000               2147          CMP.B       #$0,     D6
0000233E  6700 0014               2148          BEQ         IDATA_BYTE
00002342  BC3C 0001               2149          CMP.B       #$1,     D6
00002346  6700 0016               2150          BEQ         IDATA_WORD
0000234A                          2151          
0000234A  281B                    2152          MOVE.L      (A3)+,   D4
0000234C  4EB9 00002A92           2153          JSR         PRINT_LONG_VALUE
00002352                          2154          *TRAP        #15
00002352                          2155  
00002352  4E75                    2156          RTS
00002354                          2157  
00002354                          2158  
00002354                          2159  IDATA_BYTE:
00002354  381B                    2160          MOVE.W      (A3)+,   D4
00002356  4EB9 00002A64           2161          JSR         PRINT_WORD_VALUE
0000235C                          2162  
0000235C  4E75                    2163          RTS
0000235E                          2164          
0000235E                          2165  IDATA_WORD:
0000235E  381B                    2166          MOVE.W      (A3)+,   D4
00002360  4EB9 00002A64           2167          JSR         PRINT_WORD_VALUE
00002366                          2168  
00002366  4E75                    2169          RTS
00002368                          2170  
00002368                          2171          
00002368                          2172  WADDR:
00002368  43F9 00002D1D           2173          LEA         DOLLAR_MSG, A1
0000236E  103C 000E               2174          MOVE.B      #14, D0
00002372  4E4F                    2175          TRAP        #15
00002374                          2176          
00002374                          2177          *MOVE.B      #16,    D2          *base 16
00002374                          2178          *MOVE.B      #15,    D0
00002374  381B                    2179          MOVE.W      (A3)+,   D4
00002376  4EB9 00002A64           2180          JSR         PRINT_WORD_VALUE
0000237C                          2181          *TRAP        #15
0000237C                          2182          
0000237C  4E75                    2183          RTS
0000237E                          2184  
0000237E                          2185          
0000237E                          2186  DATA_7_0:
0000237E                          2187          *make a copy
0000237E  3803                    2188          MOVE.W      D3,     D4
00002380                          2189          
00002380                          2190          *isolate bits 7-0 on the right
00002380  343C 0008               2191          MOVE.W      #8,     D2
00002384  E56C                    2192          LSL.W       D2,     D4
00002386  343C 0008               2193          MOVE.W      #8,     D2
0000238A  E46C                    2194          LSR.W       D2,     D4
0000238C                          2195          
0000238C                          2196           *print out the data in hex form
0000238C                          2197          *MOVE.B      #16,    D2          *base 16
0000238C                          2198          *MOVE.B      #15,    D0
0000238C                          2199          *MOVE.W      D4,     D1
0000238C  4EB9 00002A64           2200          JSR         PRINT_WORD_VALUE
00002392                          2201          *TRAP        #15
00002392                          2202  
00002392                          2203  
00002392  4E75                    2204          RTS
00002394                          2205  
00002394                          2206  
00002394                          2207  
00002394                          2208  
00002394                          2209  
00002394                          2210  SHIFT_ROTATE_EA_SIZE
00002394  48E7 0600               2211      MOVEM.L    D5-D6, -(A7)
00002398  7A06                    2212      MOVE.L     #6, D5
0000239A  7C07                    2213      MOVE.L     #7, D6
0000239C  4EB8 1CB0               2214      JSR        GET_BIT
000023A0  4CDF 0060               2215      MOVEM.L    (A7)+, D5-D6
000023A4  43F9 00002D12           2216      LEA        BYTE_MSG, A1
000023AA  C8FC 0003               2217      MULU       #3, D4
000023AE  D3C4                    2218      ADDA.L       D4,  A1
000023B0  103C 000E               2219      MOVE.B      #14, D0
000023B4  4E4F                    2220      TRAP        #15
000023B6  43F9 00002C64           2221      LEA         SPACE_MSG,      A1
000023BC  103C 000E               2222      MOVE.B      #14,            D0    
000023C0  4E4F                    2223      TRAP        #15
000023C2  4E75                    2224      RTS
000023C4                          2225  
000023C4                          2226  
000023C4                          2227  
000023C4                          2228  
000023C4                          2229  SHIFT_ROTATE_EA_REGISTER
000023C4  48E7 0600               2230      MOVEM.L    D5-D6, -(A7)
000023C8  7A05                    2231      MOVE.L     #5, D5
000023CA  7C05                    2232      MOVE.L     #5, D6
000023CC  4EB8 1CB0               2233      JSR        GET_BIT
000023D0  4CDF 0060               2234      MOVEM.L    (A7)+, D5-D6
000023D4  B8BC 00000001           2235      CMP.L      #1,  D4
000023DA  6600 0070               2236      BNE        SHIFT_ROTATE_IMM_SOURCE
000023DE                          2237  
000023DE                          2238  SHIFT_ROTATE_REGISTER_SOURCE
000023DE  43F9 00002C81           2239      LEA        D_MSG, A1
000023E4  103C 000E               2240      MOVE.B      #14,   D0    
000023E8  4E4F                    2241      TRAP        #15
000023EA  48E7 0600               2242      MOVEM.L    D5-D6, -(A7)
000023EE  7A09                    2243      MOVE.L     #9, D5
000023F0  7C0B                    2244      MOVE.L     #11, D6
000023F2  4EB8 1CB0               2245      JSR        GET_BIT
000023F6  4CDF 0060               2246      MOVEM.L    (A7)+, D5-D6
000023FA  43F9 00002C67           2247      LEA       ZERO_MSG, A1
00002400  C8FC 0002               2248      MULU      #2, D4    
00002404  D3C4                    2249      ADDA.L    D4, A1
00002406  103C 000E               2250      MOVE.B      #14,   D0    
0000240A  4E4F                    2251      TRAP        #15
0000240C  6000 0002               2252      BRA       SHIFT_ROTATE_REGISTER_DEST
00002410                          2253  
00002410                          2254  SHIFT_ROTATE_REGISTER_DEST
00002410  43F9 00002D1B           2255      LEA        COMMA_MSG, A1    
00002416  103C 000E               2256      MOVE.B      #14,   D0    
0000241A  4E4F                    2257      TRAP        #15
0000241C  43F9 00002C81           2258      LEA        D_MSG, A1
00002422  103C 000E               2259      MOVE.B      #14,   D0    
00002426  4E4F                    2260      TRAP        #15
00002428  48E7 0600               2261      MOVEM.L    D5-D6, -(A7)
0000242C  7A00                    2262      MOVE.L     #0, D5
0000242E  7C02                    2263      MOVE.L     #2, D6
00002430  4EB8 1CB0               2264      JSR        GET_BIT
00002434  4CDF 0060               2265      MOVEM.L    (A7)+, D5-D6
00002438  43F9 00002C67           2266      LEA       ZERO_MSG, A1
0000243E  C8FC 0002               2267      MULU      #2, D4    
00002442  D3C4                    2268      ADDA.L    D4, A1
00002444  103C 000E               2269      MOVE.B      #14,   D0    
00002448  4E4F                    2270      TRAP        #15
0000244A  4E75                    2271      RTS
0000244C                          2272  
0000244C                          2273  SHIFT_ROTATE_IMM_SOURCE
0000244C  43F9 00002D1F           2274      LEA        HASH_MSG, A1
00002452  103C 000E               2275      MOVE.B      #14,   D0    
00002456  4E4F                    2276      TRAP        #15
00002458  43F9 00002D1D           2277      LEA        DOLLAR_MSG, A1
0000245E  103C 000E               2278      MOVE.B      #14,   D0    
00002462  4E4F                    2279      TRAP        #15
00002464  48E7 0600               2280      MOVEM.L    D5-D6, -(A7)
00002468  7A09                    2281      MOVE.L     #9, D5
0000246A  7C0B                    2282      MOVE.L     #11, D6
0000246C  4EB8 1CB0               2283      JSR        GET_BIT
00002470  4CDF 0060               2284      MOVEM.L    (A7)+, D5-D6
00002474  B8BC 00000000           2285      CMP.L      #0, D4
0000247A  6700 001C               2286      BEQ       SHIFT_ROTATE_COUNT_8
0000247E  6000 0002               2287      BRA       SHIFT_ROTATE_COUNT_1_7
00002482                          2288   
00002482                          2289  SHIFT_ROTATE_COUNT_1_7
00002482  43F9 00002C67           2290      LEA       ZERO_MSG, A1
00002488  C8FC 0002               2291      MULU      #2, D4    
0000248C  D3C4                    2292      ADDA.L    D4, A1
0000248E  103C 000E               2293      MOVE.B      #14,   D0    
00002492  4E4F                    2294      TRAP        #15
00002494  6000 FF7A               2295      BRA       SHIFT_ROTATE_REGISTER_DEST
00002498                          2296  
00002498                          2297  SHIFT_ROTATE_COUNT_8
00002498  43F9 00002C77           2298      LEA       EIGHT_MSG, A1
0000249E  103C 000E               2299      MOVE.B      #14,   D0    
000024A2  4E4F                    2300      TRAP        #15
000024A4  6000 FF6A               2301      BRA       SHIFT_ROTATE_REGISTER_DEST
000024A8                          2302  
000024A8                          2303  
000024A8                          2304  
000024A8                          2305  
000024A8                          2306  
000024A8                          2307  SHIFT_ROTATE_EA_MEMORY
000024A8  48E7 0600               2308      MOVEM.L    D5-D6, -(A7)
000024AC  7A00                    2309      MOVE.L     #0, D5
000024AE  7C05                    2310      MOVE.L     #5, D6
000024B0  4EB8 1CB0               2311      JSR        GET_BIT
000024B4  4CDF 0060               2312      MOVEM.L    (A7)+, D5-D6
000024B8  48E7 1600               2313      MOVEM.L    D3/D5-D6, -(A7)
000024BC  2604                    2314      MOVE.L     D4, D3
000024BE  4EB9 0000288A           2315      JSR        GET_EA
000024C4  4CDF 0068               2316      MOVEM.L    (A7)+, D3/D5-D6
000024C8  4E75                    2317      RTS
000024CA                          2318  
000024CA                          2319  
000024CA                          2320  
000024CA                          2321  BR_EA_SIZE_AND_DISPLACEMENT
000024CA  48E7 0600               2322      MOVEM.L    D5-D6, -(A7)
000024CE  7A00                    2323      MOVE.L     #0, D5
000024D0  7C07                    2324      MOVE.L     #7, D6
000024D2  4EB8 1CB0               2325      JSR        GET_BIT
000024D6  4CDF 0060               2326      MOVEM.L    (A7)+, D5-D6
000024DA  B8BC 00000000           2327      CMP.L      #0, D4
000024E0  6700 0050               2328      BEQ        BR_WORD_DISPLACEMENT
000024E4                          2329  BR_BYTE_DISPLACEMENT
000024E4  43F9 00002D12           2330      LEA         BYTE_MSG, A1
000024EA  103C 000E               2331      MOVE.B      #14, D0
000024EE  4E4F                    2332      TRAP        #15
000024F0  43F9 00002C64           2333      LEA         SPACE_MSG,   A1
000024F6  103C 000E               2334      MOVE.B      #14,   D0    
000024FA  4E4F                    2335      TRAP        #15
000024FC  48E7 0400               2336      MOVEM.L     D5, -(A7)
00002500  2A04                    2337      MOVE.L      D4, D5
00002502  E31D                    2338      ROL.B       #1, D5
00002504  0285 00000001           2339      ANDI.L      #1, D5
0000250A  BA3C 0001               2340      CMP.B       #1, D5
0000250E  6700 0010               2341      BEQ         NEG_BYTE_DISPLACEMENT
00002512  4CDF 0020               2342      MOVEM.L    (A7)+, D5
00002516  D88B                    2343      ADD.L       A3, D4
00002518  4EB9 00002A92           2344      JSR         PRINT_LONG_VALUE
0000251E  4E75                    2345      RTS
00002520                          2346  NEG_BYTE_DISPLACEMENT
00002520  4CDF 0020               2347      MOVEM.L    (A7)+, D5
00002524  4404                    2348      NEG.B       D4
00002526  988B                    2349      SUB.L       A3, D4
00002528  4484                    2350      NEG.L       D4
0000252A  4EB9 00002A92           2351      JSR         PRINT_LONG_VALUE
00002530  4E75                    2352      RTS
00002532                          2353  BR_WORD_DISPLACEMENT
00002532  43F9 00002D15           2354      LEA         WORD_MSG, A1
00002538  103C 000E               2355      MOVE.B      #14, D0
0000253C  4E4F                    2356      TRAP        #15
0000253E  43F9 00002C64           2357      LEA         SPACE_MSG,   A1
00002544  103C 000E               2358      MOVE.B      #14,   D0    
00002548  4E4F                    2359      TRAP        #15 
0000254A  4284                    2360      CLR.L       D4
0000254C  381B                    2361      MOVE.W      (A3)+, D4
0000254E  48E7 0400               2362      MOVEM.L     D5, -(A7)
00002552  2A04                    2363      MOVE.L      D4, D5
00002554  E35D                    2364      ROL.W       #1, D5
00002556  0285 00000001           2365      ANDI.L      #1, D5
0000255C  BA3C 0001               2366      CMP.B       #1, D5
00002560  6700 0012               2367      BEQ         NEG_WORD_DISPLACEMENT
00002564  4CDF 0020               2368      MOVEM.L    (A7)+, D5
00002568  D88B                    2369      ADD.L       A3, D4
0000256A  5584                    2370      SUB.L       #2, D4
0000256C  4EB9 00002A92           2371      JSR         PRINT_LONG_VALUE
00002572  4E75                    2372      RTS
00002574                          2373  NEG_WORD_DISPLACEMENT
00002574  4CDF 0020               2374      MOVEM.L    (A7)+, D5
00002578  4444                    2375      NEG.W       D4
0000257A  988B                    2376      SUB.L       A3, D4
0000257C  4484                    2377      NEG.L       D4
0000257E  5584                    2378      SUB.L       #2, D4
00002580  4EB9 00002A92           2379      JSR         PRINT_LONG_VALUE
00002586  4E75                    2380      RTS
00002588                          2381  
00002588                          2382  
00002588                          2383  
00002588                          2384  
00002588                          2385  
00002588                          2386  LEA_EA
00002588                          2387      *Prints the source operand
00002588  48E7 0600               2388      MOVEM.L    D5-D6, -(A7)
0000258C  7A00                    2389      MOVE.L     #0, D5
0000258E  7C05                    2390      MOVE.L     #5, D6
00002590  4EB8 1CB0               2391      JSR        GET_BIT
00002594  4CDF 0060               2392      MOVEM.L    (A7)+, D5-D6
00002598  48E7 1600               2393      MOVEM.L    D3/D5-D6, -(A7)
0000259C  2604                    2394      MOVE.L     D4, D3
0000259E  4EB9 0000288A           2395      JSR        GET_EA
000025A4  4CDF 0068               2396      MOVEM.L    (A7)+, D3/D5-D6
000025A8                          2397  
000025A8  43F9 00002D1B           2398      LEA        COMMA_MSG, A1
000025AE  103C 000E               2399      MOVE.B      #14,   D0    
000025B2  4E4F                    2400      TRAP        #15
000025B4                          2401  
000025B4                          2402      *Prints the dest operand
000025B4  43F9 00002C7B           2403      LEA        A_MSG, A1
000025BA  103C 000E               2404      MOVE.B      #14,   D0    
000025BE  4E4F                    2405      TRAP        #15
000025C0  48E7 0600               2406      MOVEM.L    D5-D6, -(A7)
000025C4  7A09                    2407      MOVE.L     #9, D5
000025C6  7C0B                    2408      MOVE.L     #11, D6
000025C8  4EB8 1CB0               2409      JSR        GET_BIT
000025CC  4CDF 0060               2410      MOVEM.L    (A7)+, D5-D6
000025D0  43F9 00002C67           2411      LEA       ZERO_MSG, A1
000025D6  C8FC 0002               2412      MULU      #2, D4    
000025DA  D3C4                    2413      ADDA.L    D4, A1
000025DC  103C 000E               2414      MOVE.B      #14,   D0    
000025E0  4E4F                    2415      TRAP        #15
000025E2  4E75                    2416      RTS
000025E4                          2417  
000025E4                          2418  
000025E4                          2419  
000025E4                          2420  
000025E4                          2421  ADDA_EA_SIZE_AND_EA 
000025E4  48E7 0600               2422      MOVEM.L    D5-D6, -(A7)
000025E8  7A08                    2423      MOVE.L     #8, D5
000025EA  7C08                    2424      MOVE.L     #8, D6
000025EC  4EB8 1CB0               2425      JSR        GET_BIT
000025F0  4CDF 0060               2426      MOVEM.L    (A7)+, D5-D6
000025F4  43F9 00002D15           2427      LEA        WORD_MSG, A1
000025FA  C8FC 0003               2428      MULU       #3, D4
000025FE  D3C4                    2429      ADDA.L     D4, A1
00002600  103C 000E               2430      MOVE.B      #14, D0
00002604  4E4F                    2431      TRAP        #15
00002606                          2432  
00002606  43F9 00002C64           2433      LEA         SPACE_MSG,   A1
0000260C  103C 000E               2434      MOVE.B      #14,   D0    
00002610  4E4F                    2435      TRAP        #15
00002612                          2436  
00002612  48E7 0600               2437      MOVEM.L    D5-D6, -(A7)
00002616  7A00                    2438      MOVE.L     #0, D5
00002618  7C05                    2439      MOVE.L     #5, D6
0000261A  4EB8 1CB0               2440      JSR        GET_BIT
0000261E  4CDF 0060               2441      MOVEM.L    (A7)+, D5-D6
00002622  B8BC 0000003C           2442      CMP.L      #%111100, D4
00002628  6700 0022               2443      BEQ        ADDA_EA_IMM_SOURCE
0000262C                          2444  ADDA_EA_NON_IMM_SOURCE
0000262C  48E7 1600               2445      MOVEM.L    D3/D5-D6, -(A7)
00002630  2604                    2446      MOVE.L     D4, D3     
00002632  4EB9 0000288A           2447      JSR        GET_EA
00002638  43F9 00002D1B           2448      LEA         COMMA_MSG,   A1
0000263E  103C 000E               2449      MOVE.B      #14,   D0    
00002642  4E4F                    2450      TRAP        #15
00002644  4CDF 0068               2451      MOVEM.L    (A7)+, D3/D5-D6
00002648  6000 0064               2452      BRA        ADDA_EA_DEST
0000264C                          2453  ADDA_EA_IMM_SOURCE
0000264C  43F9 00002D1F           2454      LEA        HASH_MSG, A1
00002652  103C 000E               2455      MOVE.B      #14,   D0    
00002656  4E4F                    2456      TRAP        #15
00002658  43F9 00002D1D           2457      LEA        DOLLAR_MSG, A1
0000265E  103C 000E               2458      MOVE.B      #14,   D0    
00002662  4E4F                    2459      TRAP        #15
00002664  48E7 0600               2460      MOVEM.L    D5-D6, -(A7)
00002668  7A06                    2461      MOVE.L     #6, D5
0000266A  7C08                    2462      MOVE.L     #8, D6
0000266C  4EB8 1CB0               2463      JSR        GET_BIT
00002670  4CDF 0060               2464      MOVEM.L    (A7)+, D5-D6
00002674  B8BC 00000003           2465      CMP.L      #%011, D4
0000267A  6700 001A               2466      BEQ        ADDA_EA_IMM_WORD
0000267E                          2467  ADDA_EA_IMM_LONG
0000267E  281B                    2468      MOVE.L     (A3)+, D4
00002680  4EB9 00002A92           2469      JSR        PRINT_LONG_VALUE
00002686                          2470  
00002686  43F9 00002D1B           2471      LEA         COMMA_MSG,   A1
0000268C  103C 000E               2472      MOVE.B      #14,   D0    
00002690  4E4F                    2473      TRAP        #15
00002692  6000 001A               2474      BRA         ADDA_EA_DEST
00002696                          2475  ADDA_EA_IMM_WORD
00002696  381B                    2476      MOVE.W     (A3)+, D4
00002698  4EB9 00002A64           2477      JSR        PRINT_WORD_VALUE
0000269E                          2478  
0000269E  43F9 00002D1B           2479      LEA         COMMA_MSG,   A1
000026A4  103C 000E               2480      MOVE.B      #14,   D0    
000026A8  4E4F                    2481      TRAP        #15
000026AA  6000 0002               2482      BRA         ADDA_EA_DEST
000026AE                          2483  
000026AE                          2484  ADDA_EA_DEST   
000026AE  48E7 0600               2485      MOVEM.L    D5-D6, -(A7)
000026B2  7A09                    2486      MOVE.L     #9, D5
000026B4  7C0B                    2487      MOVE.L     #11, D6
000026B6  4EB8 1CB0               2488      JSR        GET_BIT
000026BA  4CDF 0060               2489      MOVEM.L    (A7)+, D5-D6
000026BE  43F9 00002C7B           2490      LEA   A_MSG, A1
000026C4  103C 000E               2491      MOVE.B   #14,  D0    
000026C8  4E4F                    2492      TRAP     #15
000026CA  43F9 00002C67           2493      LEA    ZERO_MSG, A1
000026D0  C8FC 0002               2494      MULU       #2, D4
000026D4  D3C4                    2495      ADDA.L     D4, A1
000026D6  103C 000E               2496      MOVE.B   #14,  D0    
000026DA  4E4F                    2497      TRAP     #15
000026DC  4E75                    2498      RTS
000026DE                          2499  
000026DE                          2500  
000026DE                          2501  
000026DE                          2502  
000026DE                          2503  ADDQ_EA_SIZE_AND_EA
000026DE  48E7 0600               2504      MOVEM.L    D5-D6, -(A7)
000026E2  7A06                    2505      MOVE.L     #6, D5
000026E4  7C07                    2506      MOVE.L     #7, D6
000026E6  4EB8 1CB0               2507      JSR        GET_BIT
000026EA  4CDF 0060               2508      MOVEM.L    (A7)+, D5-D6
000026EE  43F9 00002D12           2509      LEA        BYTE_MSG, A1
000026F4  C8FC 0003               2510      MULU       #3, D4
000026F8  D3C4                    2511      ADDA.L       D4,  A1
000026FA  103C 000E               2512      MOVE.B      #14, D0
000026FE  4E4F                    2513      TRAP        #15
00002700  43F9 00002C64           2514      LEA         SPACE_MSG,      A1
00002706  103C 000E               2515      MOVE.B      #14,            D0    
0000270A  4E4F                    2516      TRAP        #15
0000270C                          2517  
0000270C  48E7 0600               2518      MOVEM.L    D5-D6, -(A7)
00002710  7A09                    2519      MOVE.L     #9, D5
00002712  7C0B                    2520      MOVE.L     #11, D6
00002714  4EB8 1CB0               2521      JSR        GET_BIT
00002718  4CDF 0060               2522      MOVEM.L    (A7)+, D5-D6
0000271C  43F9 00002D1F           2523      LEA        HASH_MSG, A1
00002722  103C 000E               2524      MOVE.B      #14,   D0    
00002726  4E4F                    2525      TRAP        #15
00002728  43F9 00002D1D           2526      LEA        DOLLAR_MSG, A1
0000272E  103C 000E               2527      MOVE.B      #14,   D0    
00002732  4E4F                    2528      TRAP        #15
00002734  B8BC 00000000           2529      CMP.L      #0, D4
0000273A  6700 0042               2530      BEQ       ADDQ_ADD_COUNT_8
0000273E                          2531  
0000273E                          2532  ADDQ_ADD_COUNT_1_7
0000273E  43F9 00002C67           2533      LEA       ZERO_MSG, A1
00002744  C8FC 0002               2534      MULU      #2, D4    
00002748  D3C4                    2535      ADDA.L    D4, A1
0000274A  103C 000E               2536      MOVE.B      #14,   D0    
0000274E  4E4F                    2537      TRAP        #15
00002750  43F9 00002D1B           2538      LEA         COMMA_MSG,   A1
00002756  103C 000E               2539      MOVE.B      #14,   D0    
0000275A  4E4F                    2540      TRAP        #15
0000275C  48E7 0600               2541      MOVEM.L    D5-D6, -(A7)
00002760  7A00                    2542      MOVE.L     #0, D5
00002762  7C05                    2543      MOVE.L     #5, D6
00002764  4EB8 1CB0               2544      JSR        GET_BIT
00002768  4CDF 0060               2545      MOVEM.L    (A7)+, D5-D6
0000276C  48E7 1600               2546      MOVEM.L    D3/D5-D6, -(A7)
00002770  2604                    2547      MOVE.L     D4, D3
00002772  4EB9 0000288A           2548      JSR        GET_EA
00002778  4CDF 0068               2549      MOVEM.L    (A7)+, D3/D5-D6
0000277C  4E75                    2550      RTS
0000277E                          2551  
0000277E                          2552  ADDQ_ADD_COUNT_8
0000277E  43F9 00002C77           2553      LEA       EIGHT_MSG, A1
00002784  103C 000E               2554      MOVE.B      #14,   D0    
00002788  4E4F                    2555      TRAP        #15
0000278A  43F9 00002D1B           2556      LEA         COMMA_MSG,   A1
00002790  103C 000E               2557      MOVE.B      #14,   D0    
00002794  4E4F                    2558      TRAP        #15
00002796  48E7 0600               2559      MOVEM.L    D5-D6, -(A7)
0000279A  7A00                    2560      MOVE.L     #0, D5
0000279C  7C05                    2561      MOVE.L     #5, D6
0000279E  4EB8 1CB0               2562      JSR        GET_BIT
000027A2  4CDF 0060               2563      MOVEM.L    (A7)+, D5-D6
000027A6  48E7 1600               2564      MOVEM.L    D3/D5-D6, -(A7)
000027AA  2604                    2565      MOVE.L     D4, D3   
000027AC  4EB9 0000288A           2566      JSR        GET_EA
000027B2  4CDF 0068               2567      MOVEM.L    (A7)+, D3/D5-D6
000027B6  4E75                    2568      RTS
000027B8                          2569  
000027B8                          2570  
000027B8                          2571  
000027B8                          2572  
000027B8                          2573  
000027B8                          2574  
000027B8                          2575  ADD_SUB_EA_SIZE
000027B8  48E7 0600               2576      MOVEM.L    D5-D6, -(A7)
000027BC  7A06                    2577      MOVE.L     #6, D5
000027BE  7C08                    2578      MOVE.L     #8, D6
000027C0  4EB8 1CB0               2579      JSR        GET_BIT
000027C4  4CDF 0060               2580      MOVEM.L    (A7)+, D5-D6
000027C8  0284 00000003           2581      ANDI.L     #%011, D4
000027CE  43F9 00002D12           2582      LEA        BYTE_MSG, A1
000027D4  C8FC 0003               2583      MULU       #3, D4
000027D8  D3C4                    2584      ADDA.L       D4,  A1
000027DA  103C 000E               2585      MOVE.B      #14, D0
000027DE  4E4F                    2586      TRAP        #15
000027E0  4E75                    2587      RTS
000027E2                          2588  
000027E2                          2589  ADD_SUB_EA_REG
000027E2  43F9 00002C81           2590      LEA        D_MSG, A1
000027E8  103C 000E               2591      MOVE.B      #14,   D0    
000027EC  4E4F                    2592      TRAP        #15
000027EE  48E7 0600               2593      MOVEM.L    D5-D6, -(A7)
000027F2  7A09                    2594      MOVE.L     #9, D5
000027F4  7C0B                    2595      MOVE.L     #11, D6
000027F6  4EB8 1CB0               2596      JSR        GET_BIT
000027FA  4CDF 0060               2597      MOVEM.L    (A7)+, D5-D6
000027FE  43F9 00002C67           2598      LEA       ZERO_MSG, A1
00002804  C8FC 0002               2599      MULU      #2, D4    
00002808  D3C4                    2600      ADDA.L    D4, A1
0000280A  103C 000E               2601      MOVE.B      #14,   D0    
0000280E  4E4F                    2602      TRAP        #15
00002810  4E75                    2603      RTS
00002812                          2604  
00002812                          2605  
00002812                          2606  ADD_SUB_EA_EA
00002812  48E7 0600               2607      MOVEM.L    D5-D6, -(A7)
00002816  7A00                    2608      MOVE.L     #0, D5
00002818  7C05                    2609      MOVE.L     #5, D6
0000281A  4EB8 1CB0               2610      JSR        GET_BIT
0000281E  4CDF 0060               2611      MOVEM.L    (A7)+, D5-D6
00002822  B8BC 0000003C           2612      CMP.L      #%111100, D4
00002828  6700 0014               2613      BEQ        ADD_SUB_EA_EA_IMM
0000282C  48E7 1600               2614      MOVEM.L    D3/D5-D6, -(A7)
00002830  2604                    2615      MOVE.L     D4, D3   
00002832  4EB9 0000288A           2616      JSR        GET_EA
00002838  4CDF 0068               2617      MOVEM.L    (A7)+, D3/D5-D6
0000283C  4E75                    2618      RTS
0000283E                          2619  
0000283E                          2620  ADD_SUB_EA_EA_IMM
0000283E  43F9 00002D1F           2621      LEA        HASH_MSG, A1
00002844  103C 000E               2622      MOVE.B      #14,   D0    
00002848  4E4F                    2623      TRAP        #15
0000284A  43F9 00002D1D           2624      LEA        DOLLAR_MSG, A1
00002850  103C 000E               2625      MOVE.B      #14,   D0    
00002854  4E4F                    2626      TRAP        #15
00002856  48E7 0600               2627      MOVEM.L    D5-D6, -(A7)
0000285A  7A06                    2628      MOVE.L     #6, D5
0000285C  7C08                    2629      MOVE.L     #8, D6
0000285E  4EB8 1CB0               2630      JSR        GET_BIT
00002862  4CDF 0060               2631      MOVEM.L    (A7)+, D5-D6
00002866  0284 00000003           2632      ANDI.L     #%011, D4
0000286C  B8BC 00000002           2633      CMP.L      #%010, D4
00002872  6600 000C               2634      BNE        ADD_SUB_EA_EA_IMM_WORD
00002876                          2635  ADD_SUB_EA_EA_IMM_LONG
00002876  281B                    2636      MOVE.L     (A3)+, D4
00002878  4EB9 00002A92           2637      JSR         PRINT_LONG_VALUE
0000287E  4E75                    2638      RTS
00002880                          2639  ADD_SUB_EA_EA_IMM_WORD
00002880  381B                    2640      MOVE.W     (A3)+, D4
00002882  4EB9 00002A64           2641      JSR        PRINT_WORD_VALUE
00002888  4E75                    2642      RTS
0000288A                          2643  
0000288A                          2644  
0000288A                          2645  
0000288A                          2646  
0000288A                          2647  
0000288A                          2648  
0000288A                          2649  
0000288A                          2650  
0000288A                          2651  
0000288A                          2652  
0000288A                          2653  
0000288A                          2654  
0000288A                          2655  
0000288A                          2656  
0000288A                          2657  
0000288A                          2658  
0000288A                          2659  
0000288A                          2660  
0000288A                          2661  
0000288A                          2662  
0000288A                          2663  GET_EA
0000288A  7A03                    2664      MOVE.L     #3, D5
0000288C  7C05                    2665      MOVE.L     #5, D6
0000288E  4EB8 1CB0               2666      JSR        GET_BIT
00002892  B8BC 00000000           2667      CMP.L      #0, D4
00002898  6700 0048               2668      BEQ        EA_DATA_REGISTER
0000289C  B8BC 00000001           2669      CMP.L      #1, D4
000028A2  6700 0066               2670      BEQ        EA_ADDR_REGISTER
000028A6  B8BC 00000002           2671      CMP.L      #2, D4
000028AC  6700 0084               2672      BEQ        EA_INDIRECT
000028B0  B8BC 00000003           2673      CMP.L      #3, D4
000028B6  6700 00BA               2674      BEQ        EA_INDIRECT_INCREMENT
000028BA  B8BC 00000004           2675      CMP.L      #4, D4
000028C0  6700 00FC               2676      BEQ        EA_INDIRECT_DECREMENT
000028C4                          2677      *101, and 110 mode bits should be detected in disassembler_OPCodes 
000028C4  7A00                    2678      MOVE.L     #0, D5
000028C6  7C02                    2679      MOVE.L     #2, D6
000028C8  4EB8 1CB0               2680      JSR        GET_BIT
000028CC  B8BC 00000000           2681      CMP.L      #0, D4
000028D2  6700 0136               2682      BEQ        EA_ABS_WORD
000028D6  B8BC 00000001           2683      CMP.L      #1, D4
000028DC  6700 0144               2684      BEQ        EA_ABS_LONG
000028E0                          2685      *Unreachable
000028E0  4E75                    2686      RTS
000028E2                          2687      
000028E2                          2688  
000028E2                          2689  EA_DATA_REGISTER
000028E2  43F9 00002C81           2690      LEA   D_MSG, A1
000028E8  103C 000E               2691      MOVE.B   #14,  D0    
000028EC  4E4F                    2692      TRAP     #15
000028EE  43F9 00002C67           2693      LEA    ZERO_MSG, A1
000028F4  7A00                    2694      MOVE.L     #0, D5
000028F6  7C02                    2695      MOVE.L     #2, D6
000028F8  4EB8 1CB0               2696      JSR        GET_BIT
000028FC  C8FC 0002               2697      MULU       #2, D4
00002900  D3C4                    2698      ADDA.L     D4, A1
00002902  103C 000E               2699      MOVE.B   #14,  D0    
00002906  4E4F                    2700      TRAP     #15
00002908  4E75                    2701      RTS
0000290A                          2702  
0000290A                          2703  
0000290A                          2704  EA_ADDR_REGISTER
0000290A  43F9 00002C7B           2705      LEA   A_MSG, A1
00002910  103C 000E               2706      MOVE.B   #14,  D0    
00002914  4E4F                    2707      TRAP     #15
00002916  43F9 00002C67           2708      LEA    ZERO_MSG, A1
0000291C  7A00                    2709      MOVE.L     #0, D5
0000291E  7C02                    2710      MOVE.L     #2, D6
00002920  4EB8 1CB0               2711      JSR        GET_BIT
00002924  C8FC 0002               2712      MULU       #2, D4
00002928  D3C4                    2713      ADDA.L     D4, A1
0000292A  103C 000E               2714      MOVE.B   #14,  D0    
0000292E  4E4F                    2715      TRAP     #15
00002930  4E75                    2716      RTS
00002932                          2717  
00002932                          2718  
00002932                          2719  EA_INDIRECT
00002932  43F9 00002D25           2720      LEA   OPEN_PARENTHESIS_MSG, A1
00002938  103C 000E               2721      MOVE.B   #14,  D0    
0000293C  4E4F                    2722      TRAP     #15
0000293E  43F9 00002C7B           2723      LEA   A_MSG, A1
00002944  103C 000E               2724      MOVE.B   #14,  D0    
00002948  4E4F                    2725      TRAP     #15
0000294A  43F9 00002C67           2726      LEA    ZERO_MSG, A1
00002950  7A00                    2727      MOVE.L     #0, D5
00002952  7C02                    2728      MOVE.L     #2, D6
00002954  4EB8 1CB0               2729      JSR        GET_BIT
00002958  C8FC 0002               2730      MULU       #2, D4
0000295C  D3C4                    2731      ADDA.L     D4, A1
0000295E  103C 000E               2732      MOVE.B   #14,  D0    
00002962  4E4F                    2733      TRAP     #15
00002964  43F9 00002D27           2734      LEA   CLOSE_PARENTHESIS_MSG, A1
0000296A  103C 000E               2735      MOVE.B   #14,  D0    
0000296E  4E4F                    2736      TRAP     #15
00002970  4E75                    2737      RTS
00002972                          2738  
00002972                          2739  
00002972                          2740  
00002972                          2741  EA_INDIRECT_INCREMENT
00002972  43F9 00002D25           2742      LEA   OPEN_PARENTHESIS_MSG, A1
00002978  103C 000E               2743      MOVE.B   #14,  D0    
0000297C  4E4F                    2744      TRAP     #15
0000297E  43F9 00002C7B           2745      LEA   A_MSG, A1
00002984  103C 000E               2746      MOVE.B   #14,  D0    
00002988  4E4F                    2747      TRAP     #15
0000298A  43F9 00002C67           2748      LEA    ZERO_MSG, A1
00002990  7A00                    2749      MOVE.L     #0, D5
00002992  7C02                    2750      MOVE.L     #2, D6
00002994  4EB8 1CB0               2751      JSR        GET_BIT
00002998  C8FC 0002               2752      MULU       #2, D4
0000299C  D3C4                    2753      ADDA.L     D4, A1
0000299E  103C 000E               2754      MOVE.B   #14,  D0    
000029A2  4E4F                    2755      TRAP     #15
000029A4  43F9 00002D27           2756      LEA   CLOSE_PARENTHESIS_MSG, A1
000029AA  103C 000E               2757      MOVE.B   #14,  D0    
000029AE  4E4F                    2758      TRAP     #15
000029B0  43F9 00002D21           2759      LEA   PLUS_MSG, A1
000029B6  103C 000E               2760      MOVE.B   #14,  D0    
000029BA  4E4F                    2761      TRAP     #15
000029BC  4E75                    2762      RTS
000029BE                          2763  
000029BE                          2764  
000029BE                          2765  EA_INDIRECT_DECREMENT
000029BE  43F9 00002D23           2766      LEA   MINUS_MSG, A1
000029C4  103C 000E               2767      MOVE.B   #14,  D0    
000029C8  4E4F                    2768      TRAP     #15
000029CA  43F9 00002D25           2769      LEA   OPEN_PARENTHESIS_MSG, A1
000029D0  103C 000E               2770      MOVE.B   #14,  D0    
000029D4  4E4F                    2771      TRAP     #15
000029D6  43F9 00002C7B           2772      LEA   A_MSG, A1
000029DC  103C 000E               2773      MOVE.B   #14,  D0    
000029E0  4E4F                    2774      TRAP     #15
000029E2  43F9 00002C67           2775      LEA    ZERO_MSG, A1
000029E8  7A00                    2776      MOVE.L     #0, D5
000029EA  7C02                    2777      MOVE.L     #2, D6
000029EC  4EB8 1CB0               2778      JSR        GET_BIT
000029F0  C8FC 0002               2779      MULU       #2, D4
000029F4  D3C4                    2780      ADDA.L     D4, A1
000029F6  103C 000E               2781      MOVE.B   #14,  D0    
000029FA  4E4F                    2782      TRAP     #15
000029FC  43F9 00002D27           2783      LEA   CLOSE_PARENTHESIS_MSG, A1
00002A02  103C 000E               2784      MOVE.B   #14,  D0    
00002A06  4E4F                    2785      TRAP     #15
00002A08  4E75                    2786      RTS
00002A0A                          2787  
00002A0A                          2788  
00002A0A                          2789  
00002A0A                          2790  EA_ABS_WORD
00002A0A  4284                    2791      CLR.L      D4
00002A0C  381B                    2792      MOVE.W     (A3)+, D4
00002A0E  43F9 00002D1D           2793      LEA        DOLLAR_MSG,       A1
00002A14  103C 000E               2794      MOVE.B      #14,            D0    
00002A18  4E4F                    2795      TRAP        #15
00002A1A  4EB9 00002A64           2796      JSR        PRINT_WORD_VALUE
00002A20  4E75                    2797      RTS
00002A22                          2798  
00002A22                          2799  EA_ABS_LONG
00002A22  281B                    2800      MOVE.L    (A3)+, D4
00002A24  43F9 00002D1D           2801      LEA        DOLLAR_MSG,       A1
00002A2A  103C 000E               2802      MOVE.B      #14,            D0    
00002A2E  4E4F                    2803      TRAP        #15
00002A30  4EB9 00002A92           2804      JSR        PRINT_LONG_VALUE
00002A36  4E75                    2805      RTS
00002A38                          2806  
00002A38                          2807  
00002A38                          2808  
00002A38                          2809  
00002A38                          2810  PRINT_BYTE_VALUE
00002A38  48E7 0600               2811          MOVEM.L    D5-D6, -(A7)
00002A3C  7C02                    2812          MOVE.L     #2, D6
00002A3E                          2813  PRINT_BYTE_VALUE_LOOP
00002A3E                          2814          *Gets the most significant bit basically
00002A3E                          2815          *Could use GET_BIT subroutine but it is 
00002A3E                          2816          *costly in terms of registers used
00002A3E  1A04                    2817          MOVE.B     D4, D5
00002A40  E80D                    2818          LSR.B      #4, D5
00002A42  E90C                    2819          LSL.B      #4, D4
00002A44  43F9 00002C67           2820          LEA        ZERO_MSG,      A1
00002A4A                          2821          * load the address of Zero_msg
00002A4A                          2822          * because all of the msgs are stored next to each other in order
00002A4A                          2823          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002A4A                          2824          * and then add it to the address starting at zero_msg
00002A4A  CAFC 0002               2825          MULU         #2,            D5
00002A4E  D3C5                    2826          ADDA.L       D5,            A1
00002A50  103C 000E               2827          MOVE.B      #14, D0
00002A54  4E4F                    2828          TRAP        #15
00002A56  5386                    2829          SUBI.L      #1, D6
00002A58  BC3C 0000               2830          CMP.B       #0, D6
00002A5C  66E0                    2831          BNE         PRINT_BYTE_VALUE_LOOP
00002A5E  4CDF 0060               2832          MOVEM.L    (A7)+, D5-D6
00002A62  4E75                    2833          RTS
00002A64                          2834  
00002A64                          2835  
00002A64                          2836  
00002A64                          2837  PRINT_WORD_VALUE
00002A64  48E7 0600               2838          MOVEM.L    D5-D6, -(A7)
00002A68  7C04                    2839          MOVE.L     #4, D6
00002A6A                          2840  PRINT_WORD_VALUE_LOOP
00002A6A                          2841          *Gets the most significant bit basically
00002A6A                          2842          *Could use GET_BIT subroutine but it is 
00002A6A                          2843          *costly in terms of registers used
00002A6A  3A04                    2844          MOVE.W     D4, D5
00002A6C  EC4D                    2845          LSR.W      #6, D5
00002A6E  EC4D                    2846          LSR.W      #6, D5
00002A70  E94C                    2847          LSL.W      #4, D4
00002A72  43F9 00002C67           2848          LEA        ZERO_MSG,      A1
00002A78                          2849          * load the address of Zero_msg
00002A78                          2850          * because all of the msgs are stored next to each other in order
00002A78                          2851          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002A78                          2852          * and then add it to the address starting at zero_msg
00002A78  CAFC 0002               2853          MULU         #2,            D5
00002A7C  D3C5                    2854          ADDA.L       D5,            A1
00002A7E  103C 000E               2855          MOVE.B      #14, D0
00002A82  4E4F                    2856          TRAP        #15
00002A84  5386                    2857          SUBI.L      #1, D6
00002A86  BC3C 0000               2858          CMP.B       #0, D6
00002A8A  66DE                    2859          BNE         PRINT_WORD_VALUE_LOOP
00002A8C  4CDF 0060               2860          MOVEM.L    (A7)+, D5-D6
00002A90  4E75                    2861          RTS
00002A92                          2862  
00002A92                          2863  
00002A92                          2864  PRINT_LONG_VALUE
00002A92  48E7 0600               2865          MOVEM.L    D5-D6, -(A7)
00002A96  7C08                    2866          MOVE.L     #8, D6
00002A98                          2867  PRINT_LONG_VALUE_LOOP
00002A98                          2868          *Gets the most significant bit basically
00002A98                          2869          *Could use GET_BIT subroutine but it is 
00002A98                          2870          *costly in terms of registers used
00002A98  2A04                    2871          MOVE.L     D4, D5
00002A9A  E08D                    2872          LSR.L      #8, D5
00002A9C  E08D                    2873          LSR.L      #8, D5
00002A9E  E08D                    2874          LSR.L      #8, D5
00002AA0  E88D                    2875          LSR.L      #4, D5
00002AA2  E98C                    2876          LSL.L      #4, D4
00002AA4  43F9 00002C67           2877          LEA        ZERO_MSG,      A1
00002AAA                          2878          * load the address of Zero_msg
00002AAA                          2879          * because all of the msgs are stored next to each other in order
00002AAA                          2880          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00002AAA                          2881          * and then add it to the address starting at zero_msg
00002AAA  CAFC 0002               2882          MULU         #2,            D5
00002AAE  D3C5                    2883          ADDA.L       D5,            A1
00002AB0  103C 000E               2884          MOVE.B      #14, D0
00002AB4  4E4F                    2885          TRAP        #15
00002AB6  5386                    2886          SUBI.L      #1, D6
00002AB8  BC3C 0000               2887          CMP.B       #0, D6
00002ABC  66DA                    2888          BNE         PRINT_LONG_VALUE_LOOP
00002ABE  4CDF 0060               2889          MOVEM.L    (A7)+, D5-D6
00002AC2  4E75                    2890          RTS
00002AC4                          2891  
00002AC4                          2892  
00002AC4                          2893   
00002AC4                          2894  
00002AC4                          2895  
00002AC4                          2896  
00002AC4                          2897  
00002AC4                          2898  
00002AC4                          2899  
00002AC4                          2900  
00002AC4                          2901  
00002AC4                          2902  
00002AC4                          2903  
00002AC4                          2904  -------------------- end include --------------------
00002AC4                          2905      INCLUDE         'Disassembler_Msgs.x68'
00002AC4                          2906  
00002AC4= 57 65 6C 63 6F 6D ...   2907  INTRO_MSG:       DC.B       'Welcome to Team Cools Disassembler!',CR,LF,0
00002AEA= 50 6C 65 61 73 65 ...   2908  STARTING_MSG:    DC.B       'Please enter the Starting Address',CR,LF,0
00002B0E= 28 4E 65 65 64 73 ...   2909  FORMAT_MSG:      DC.B       '(Needs to be even address, Characters need to be CAPS)',CR,LF,0
00002B47= 50 6C 65 61 73 65 ...   2910  ENDING_MSG:      DC.B       'Please enter the Ending Address',CR,LF,0
00002B69= 44 6F 6E 65 20 52 ...   2911  DONE_MSG:        DC.B       'Done Reading data',CR,LF,0
00002B7D= 50 72 65 73 73 20 ...   2912  RESTART_MSG:     DC.B       'Press Enter to restart, and 1 to exit',CR,LF,0
00002BA5= 54 68 61 6E 6B 20 ...   2913  TY_MSG:          DC.B       'Thank you for trying out this disassembler',CR,LF,0
00002BD2= 50 72 65 73 73 20 ...   2914  PRESS_ENTER_MSG: DC.B       'Press Enter to continue Scanning',CR,LF,0
00002BF5= 49 6E 76 61 6C 69 ...   2915  INVALID_INPUT_MSG:  DC.B    'Invalid address, try again',CR,LF,CR,LF,0
00002C14                          2916  
00002C14                          2917  
00002C14                          2918  
00002C14                          2919  STA_ADDR         DS.B        40
00002C3C                          2920  END_ADDR         DS.B        40
00002C64                          2921  
00002C64                          2922  
00002C64= 20 20 00                2923  SPACE_MSG:       DC.B        '  ',0
00002C67                          2924  
00002C67= 30 00                   2925  ZERO_MSG:        DC.B        '0',0
00002C69= 31 00                   2926  ONE_MSG:         DC.B        '1',0
00002C6B= 32 00                   2927  TWO_MSG:         DC.B        '2',0
00002C6D= 33 00                   2928  THREE_MSG:       DC.B        '3',0
00002C6F= 34 00                   2929  FOUR_MSG:        DC.B        '4',0
00002C71= 35 00                   2930  FIVE_MSG:        DC.B        '5',0
00002C73= 36 00                   2931  SIX_MSG:         DC.B        '6',0
00002C75= 37 00                   2932  SEVEN_MSG:       DC.B        '7',0
00002C77= 38 00                   2933  EIGHT_MSG:       DC.B        '8',0
00002C79= 39 00                   2934  NINE_MSG:        DC.B        '9',0
00002C7B= 41 00                   2935  A_MSG:           DC.B        'A',0
00002C7D= 42 00                   2936  B_MSG:           DC.B        'B',0
00002C7F= 43 00                   2937  C_MSG:           DC.B        'C',0
00002C81= 44 00                   2938  D_MSG:           DC.B        'D',0
00002C83= 45 00                   2939  E_MSG:           DC.B        'E',0
00002C85= 46 00                   2940  F_MSG:           DC.B        'F',0 
00002C87= 4E 4F 54 00             2941  NOT_MSG:        DC.B        'NOT',0
00002C8B= 42 52 41 00             2942  BRA_MSG:        DC.B        'BRA',0
00002C8F                          2943  
00002C8F= 4D 4F 56 45 00          2944  MOVE_MSG:       DC.B        'MOVE',0
00002C94= 4D 4F 56 45 4D 00       2945  MOVEM_MSG:      DC.B        'MOVEM',0
00002C9A= 4D 4F 56 45 41 00       2946  MOVEA_MSG:      DC.B        'MOVEA',0
00002CA0                          2947  
00002CA0                          2948  
00002CA0                          2949  
00002CA0= 41 44 44 41 00          2950  ADDA_MSG:       DC.B        'ADDA',0
00002CA5= 41 44 44 51 00          2951  ADDQ_MSG:       DC.B        'ADDQ',0
00002CAA= 53 55 42 00             2952  SUB_MSG:        DC.B        'SUB',0
00002CAE= 41 44 44 00             2953  ADD_MSG:        DC.B        'ADD',0
00002CB2= 52 54 53 00             2954  RTS_MSG:        DC.B        'RTS',0
00002CB6= 4E 4F 50 00             2955  NOP_MSG:        DC.B        'NOP',0
00002CBA                          2956  
00002CBA                          2957  
00002CBA                          2958  
00002CBA                          2959  
00002CBA                          2960  
00002CBA                          2961  
00002CBA= 20 00                   2962  WHITESPACE:     DC.B        ' ',0
00002CBC= 2C 20 00                2963  WHITESPACE_COM: DC.B        ', ',0
00002CBF                          2964  
00002CBF= 44 00                   2965  DATA_REG:       DC.B        'D',0
00002CC1= 41 00                   2966  ADDR_REG:       DC.B        'A',0
00002CC3                          2967  
00002CC3                          2968  
00002CC3                          2969  
00002CC3                          2970  
00002CC3= 2F 00                   2971  DIV_SIGN        DC.B        '/',0
00002CC5= 4A 53 52 20 00          2972  JSRMSG:         DC.B        'JSR ',0
00002CCA= 4A 53 52 00             2973  JSR_MSG:        DC.B        'JSR',0
00002CCE= 4D 4F 56 45 51 00       2974  MOVEQ_MSG:      DC.B        'MOVEQ',0
00002CD4= 41 4E 44 00             2975  AND_MSG:        DC.B        'AND',0
00002CD8= 4C 45 41 00             2976  LEA_MSG         DC.B        'LEA',0
00002CDC= 41 53 52 00             2977  ASR_MSG         DC.B        'ASR',0
00002CE0= 41 53 4C 00             2978  ASL_MSG         DC.B        'ASL',0
00002CE4= 4C 53 52 00             2979  LSR_MSG         DC.B        'LSR',0
00002CE8= 4C 53 4C 00             2980  LSL_MSG         DC.B        'LSL',0
00002CEC= 52 4F 58 00             2981  ROXR_MSG        DC.B        'ROX',0  *Unused messages but present because helps in indexing, DONT USE IT
00002CF0= 52 4F 58 00             2982  ROXL_MSG        DC.B        'ROX',0  *Unused messages but present because helps in indexing, DONT USE IT
00002CF4= 52 4F 52 00             2983  ROR_MSG         DC.B        'ROR',0
00002CF8= 52 4F 4C 00             2984  ROL_MSG         DC.B        'ROL',0
00002CFC= 4F 52 00                2985  OR_MSG:         DC.B        'OR',0
00002CFF= 44 41 54 41 00          2986  DATA_MSG:       DC.B        'DATA',0
00002D04= 42 00                   2987  BCC_MSG         DC.B        'B', 0
00002D06= 42 4C 45 00             2988  BLE_MSG         DC.B        'BLE', 0
00002D0A= 42 47 54 00             2989  BGT_MSG         DC.B        'BGT',0
00002D0E= 42 45 51 00             2990  BEQ_MSG         DC.B        'BEQ',0
00002D12                          2991  
00002D12= 2E 42 00                2992  BYTE_MSG        DC.B        '.B', 0
00002D15= 2E 57 00                2993  WORD_MSG        DC.B        '.W', 0
00002D18= 2E 4C 00                2994  LONG_MSG        DC.B        '.L', 0
00002D1B                          2995  
00002D1B= 2C 00                   2996  COMMA_MSG       DC.B        ',', 0
00002D1D= 24 00                   2997  DOLLAR_MSG      DC.B        '$', 0
00002D1F= 23 00                   2998  HASH_MSG        DC.B        '#', 0
00002D21= 2B 00                   2999  PLUS_MSG        DC.B        '+', 0
00002D23= 2D 00                   3000  MINUS_MSG       DC.B        '-', 0
00002D25= 28 00                   3001  OPEN_PARENTHESIS_MSG  DC.B   '(', 0
00002D27= 29 00                   3002  CLOSE_PARENTHESIS_MSG DC.B  ')', 0
00002D29                          3003  
00002D29                          3004  
00002D29  =0000000D               3005  CR              EQU          $0D
00002D29  =0000000A               3006  LF              EQU          $0A
00002D29                          3007  
00002D29= 0D 0A 00                3008  NEW_LINE:       DC.B         '',CR,LF,0
00002D2C                          3009  
00002D2C                          3010  
00002D2C                          3011  
00002D2C                          3012  
00002D2C                          3013  
00002D2C                          3014  
00002D2C                          3015  
00002D2C                          3016  
00002D2C                          3017  -------------------- end include --------------------
00002D2C                          3018      INCLUDE         'Sample_Test.x68'
00002D2C                          3019  
00002D2C                          3020                    ; first instruction of program
00002D2C                          3021  
00002D2C                          3022  TEST
00002D2C  4E75                    3023      RTS
00002D2E  4E71                    3024      NOP
00002D30                          3025      
00002D30  1401                    3026      MOVE.B      D1,     D2
00002D32  343C 1231               3027      MOVE.W      #$1231, D2
00002D36  2409                    3028      MOVE.L      A1,     D2
00002D38  3459                    3029      MOVEA.W     (A1)+,  A2
00002D3A  2461                    3030      MOVEA.L     -(A1),  A2
00002D3C  48A1 007F               3031      MOVEM.W     A1-A7,  -(A1)
00002D40  7000                    3032      MOVEQ       #$0,    D0
00002D42  7C32                    3033      MOVEQ       #50,  D6
00002D44  45D1                    3034      LEA         (A1),   A2
00002D46                          3035      
00002D46  C401                    3036      AND.B       D1,     D2
00002D48  CA93                    3037      AND.L       (A3),   D5
00002D4A  C262                    3038      AND.W       -(A2),  D1
00002D4C  C07C 007B               3039      AND.W       #123,   D0         
00002D50  C4B9 0000A000           3040      AND.L       $A000,  D2          *shows up as A000 in data
00002D56  C479 0000A000           3041      AND.W       $0000A000, D2       *shows up as 0000A000 in data
00002D5C  C01E                    3042      AND.B       (A6)+,  D0
00002D5E  C312                    3043      AND.B       D1,     (A2)
00002D60  C579 FFFF1234           3044      AND.W       D2, $FFFF1234       *shows up as A000 in data, MOVE.L will take word from next opcode
00002D66                          3045      
00002D66  8401                    3046      OR.B        D1,     D2
00002D68  8C38 1234               3047      OR.B        $00001234,  D6
00002D6C  8E39 0000ABCD           3048      OR.B        $ABCD,  D7
00002D72  8D39 1234ABCD           3049      OR.B        D6,     $1234ABCD
00002D78  8F39 0000ABCD           3050      OR.B        D7,     $ABCD
00002D7E                          3051      
00002D7E  70CD                    3052      MOVEQ       #$CD,    D0
00002D80  7C32                    3053      MOVEQ       #50,  D6
00002D82                          3054      
00002D82  4600                    3055      NOT.B       D0
00002D84  465A                    3056      NOT.W       (A2)+
00002D86  46B9 0000A000           3057      NOT.L       $A000
00002D8C                          3058  
00002D8C                          3059  
00002D8C  D401                    3060      ADD.B       D1,     D2
00002D8E  D4C1                    3061      ADDA.W      D1,     A2
00002D90  524A                    3062      ADDQ.W      #$1,    A2
00002D92  9401                    3063      SUB.B       D1,     D2
00002D94                          3064      
00002D94  4EB8 2D2C               3065      JSR         TEST
00002D98  6E92                    3066      BGT.B       TEST
00002D9A  6F00 FF90               3067      BLE.W       TEST
00002D9E  6700 FF8C               3068      BEQ.W       TEST
00002DA2  6088                    3069      BRA         TEST
00002DA4  4678 2D2C               3070      NOT         TEST
00002DA8                          3071      
00002DA8  E32A                    3072      LSL.B       D1,     D2
00002DAA  E22A                    3073      LSR.B       D1,     D2
00002DAC  E322                    3074      ASL.B       D1,     D2
00002DAE  E222                    3075      ASR.B       D1,     D2
00002DB0  E33A                    3076      ROL.B       D1,     D2
00002DB2  E23A                    3077      ROR.B       D1,     D2
00002DB4                          3078  
00002DB4                          3079  
00002DB4                          3080  
00002DB4                          3081  
00002DB4                          3082  
00002DB4                          3083  
00002DB4                          3084  -------------------- end include --------------------
00002DB4                          3085      INCLUDE         'demo_test.x68'
00002DB4                          3086  
00002DB4                          3087  
00002DB4                          3088  
00002DB4                          3089  
00002DB4                          3090  TEST2:
00002DB4  4E75                    3091      RTS
00002DB6  4E71                    3092      NOP
00002DB8  4E75                    3093      RTS
00002DBA  41D0                    3094      LEA     (A0),A0
00002DBC  41D5                    3095      LEA     (A5),A0
00002DBE  41D7                    3096      LEA     (A7),A0
00002DC0  4FD0                    3097      LEA     (A0),A7
00002DC2  4FD5                    3098      LEA     (A5),A7
00002DC4  4FD7                    3099      LEA     (A7),A7
00002DC6  1200                    3100      MOVE.B    D0,D1
00002DC8  1080                    3101      MOVE.B    D0,(A0)
00002DCA  10C0                    3102      MOVE.B    D0,(A0)+
00002DCC  1100                    3103      MOVE.B    D0,-(A0)
00002DCE  1010                    3104      MOVE.B    (A0),D0
00002DD0  1290                    3105      MOVE.B    (A0),(A1)
00002DD2  12D0                    3106      MOVE.B    (A0),(A1)+
00002DD4  1310                    3107      MOVE.B    (A0),-(A1)
00002DD6  1018                    3108      MOVE.B    (A0)+,D0
00002DD8  1298                    3109      MOVE.B    (A0)+,(A1)
00002DDA  12D8                    3110      MOVE.B    (A0)+,(A1)+
00002DDC  1318                    3111      MOVE.B    (A0)+,-(A1)
00002DDE  1020                    3112      MOVE.B    -(A0),D0
00002DE0  12A0                    3113      MOVE.B    -(A0),(A1)
00002DE2  12E0                    3114      MOVE.B    -(A0),(A1)+
00002DE4  1320                    3115      MOVE.B    -(A0),-(A1)
00002DE6  3200                    3116      MOVE.W    D0,D1
00002DE8  3080                    3117      MOVE.W    D0,(A0)
00002DEA  30C0                    3118      MOVE.W    D0,(A0)+
00002DEC  3100                    3119      MOVE.W    D0,-(A0)
00002DEE  3008                    3120      MOVE.W    A0,D0
00002DF0  3288                    3121      MOVE.W    A0,(A1)
00002DF2  32C8                    3122      MOVE.W    A0,(A1)+
00002DF4  3308                    3123      MOVE.W    A0,-(A1)
00002DF6  3010                    3124      MOVE.W    (A0),D0
00002DF8  3290                    3125      MOVE.W    (A0),(A1)
00002DFA  32D0                    3126      MOVE.W    (A0),(A1)+
00002DFC  3310                    3127      MOVE.W    (A0),-(A1)
00002DFE  3018                    3128      MOVE.W    (A0)+,D0
00002E00  3298                    3129      MOVE.W    (A0)+,(A1)
00002E02  32D8                    3130      MOVE.W    (A0)+,(A1)+
00002E04  3318                    3131      MOVE.W    (A0)+,-(A1)
00002E06  3020                    3132      MOVE.W    -(A0),D0
00002E08  32A0                    3133      MOVE.W    -(A0),(A1)
00002E0A  32E0                    3134      MOVE.W    -(A0),(A1)+
00002E0C  3320                    3135      MOVE.W    -(A0),-(A1)
00002E0E  2200                    3136      MOVE.L    D0,D1
00002E10  2080                    3137      MOVE.L    D0,(A0)
00002E12  20C0                    3138      MOVE.L    D0,(A0)+
00002E14  2100                    3139      MOVE.L    D0,-(A0)
00002E16  2008                    3140      MOVE.L    A0,D0
00002E18  2288                    3141      MOVE.L    A0,(A1)
00002E1A  22C8                    3142      MOVE.L    A0,(A1)+
00002E1C  2308                    3143      MOVE.L    A0,-(A1)
00002E1E  2010                    3144      MOVE.L    (A0),D0
00002E20  2290                    3145      MOVE.L    (A0),(A1)
00002E22  22D0                    3146      MOVE.L    (A0),(A1)+
00002E24  2310                    3147      MOVE.L    (A0),-(A1)
00002E26  2018                    3148      MOVE.L    (A0)+,D0
00002E28  2298                    3149      MOVE.L    (A0)+,(A1)
00002E2A  22D8                    3150      MOVE.L    (A0)+,(A1)+
00002E2C  2318                    3151      MOVE.L    (A0)+,-(A1)
00002E2E  2020                    3152      MOVE.L    -(A0),D0
00002E30  22A0                    3153      MOVE.L    -(A0),(A1)
00002E32  22E0                    3154      MOVE.L    -(A0),(A1)+
00002E34  2320                    3155      MOVE.L    -(A0),-(A1)
00002E36  48A1 007F               3156      MOVEM.W   A1-A7,-(A1)
00002E3A  48E1 7F00               3157      MOVEM.L   D1-D7,-(A1)
00002E3E  48A1 0140               3158      MOVEM.W   A1/D7,-(A1)
00002E42  48E1 0140               3159      MOVEM.L   A1/D7,-(A1)
00002E46  4891 FE00               3160      MOVEM.W   A1-A7,(A1)
00002E4A  48D1 00FE               3161      MOVEM.L   D1-D7,(A1)
00002E4E  4891 0280               3162      MOVEM.W   A1/D7,(A1)
00002E52  48D1 0280               3163      MOVEM.L   A1/D7,(A1)
00002E56  4C99 FE00               3164      MOVEM.W   (A1)+,A1-A7
00002E5A  4CD9 00FE               3165      MOVEM.L   (A1)+,D1-D7
00002E5E  4C99 0280               3166      MOVEM.W   (A1)+,A1/D7
00002E62  4CD9 0280               3167      MOVEM.L   (A1)+,A1/D7
00002E66  4C91 FE00               3168      MOVEM.W   (A1),A1-A7
00002E6A  4CD1 00FE               3169      MOVEM.L   (A1),D1-D7
00002E6E  4C91 0280               3170      MOVEM.W   (A1),A1/D7
00002E72  4CD1 0280               3171      MOVEM.L   (A1),A1/D7
00002E76  3040                    3172      MOVEA.W    D0,A0
00002E78  3048                    3173      MOVEA.W    A0,A0
00002E7A  3050                    3174      MOVEA.W    (A0),A0
00002E7C  3058                    3175      MOVEA.W    (A0)+,A0
00002E7E  3060                    3176      MOVEA.W    -(A0),A0
00002E80  2040                    3177      MOVEA.L    D0,A0
00002E82  2048                    3178      MOVEA.L    A0,A0
00002E84  2050                    3179      MOVEA.L    (A0),A0
00002E86  2058                    3180      MOVEA.L    (A0)+,A0
00002E88  2060                    3181      MOVEA.L    -(A0),A0  
00002E8A  D401                    3182      ADD.B     D1,D2
00002E8C  D311                    3183      ADD.B     D1,(A1)
00002E8E  D319                    3184      ADD.B     D1,(A1)+
00002E90  D321                    3185      ADD.B     D1,-(A1)
00002E92  D211                    3186      ADD.B     (A1),D1
00002E94  D219                    3187      ADD.B     (A1)+,D1
00002E96  D221                    3188      ADD.B     -(A1),D1
00002E98  D441                    3189      ADD.W     D1,D2
00002E9A  D351                    3190      ADD.W     D1,(A1)
00002E9C  D359                    3191      ADD.W     D1,(A1)+
00002E9E  D361                    3192      ADD.W     D1,-(A1)
00002EA0  D251                    3193      ADD.W     (A1),D1
00002EA2  D259                    3194      ADD.W     (A1)+,D1
00002EA4  D261                    3195      ADD.W     -(A1),D1
00002EA6  D481                    3196      ADD.L     D1,D2
00002EA8  D391                    3197      ADD.L     D1,(A1)
00002EAA  D399                    3198      ADD.L     D1,(A1)+
00002EAC  D3A1                    3199      ADD.L     D1,-(A1)
00002EAE  D291                    3200      ADD.L     (A1),D1
00002EB0  D299                    3201      ADD.L     (A1)+,D1
00002EB2  D2A1                    3202      ADD.L     -(A1),D1
00002EB4  D4C1                    3203      ADDA.W        D1,A2
00002EB6  D4D1                    3204      ADDA.W        (A1),A2
00002EB8  D4D9                    3205      ADDA.W        (A1)+,A2
00002EBA  D4E1                    3206      ADDA.W        -(A1),A2
00002EBC  D5C1                    3207      ADDA.L        D1,A2
00002EBE  D5D1                    3208      ADDA.L        (A1),A2
00002EC0  D5D9                    3209      ADDA.L        (A1)+,A2
00002EC2  D5E1                    3210      ADDA.L        -(A1),A2
00002EC4  9401                    3211      SUB.B     D1,D2
00002EC6  9311                    3212      SUB.B     D1,(A1)
00002EC8  9319                    3213      SUB.B     D1,(A1)+
00002ECA  9321                    3214      SUB.B     D1,-(A1)
00002ECC  9211                    3215      SUB.B     (A1),D1
00002ECE  9219                    3216      SUB.B     (A1)+,D1
00002ED0  9221                    3217      SUB.B     -(A1),D1
00002ED2  9441                    3218      SUB.W     D1,D2
00002ED4  92C1                    3219      SUB.W     D1,A1
00002ED6  9351                    3220      SUB.W     D1,(A1)
00002ED8  9359                    3221      SUB.W     D1,(A1)+
00002EDA  9361                    3222      SUB.W     D1,-(A1)
00002EDC  9249                    3223      SUB.W     A1,D1
00002EDE  9251                    3224      SUB.W     (A1),D1
00002EE0  9259                    3225      SUB.W     (A1)+,D1
00002EE2  9261                    3226      SUB.W     -(A1),D1
00002EE4  9481                    3227      SUB.L     D1,D2
00002EE6  93C1                    3228      SUB.L     D1,A1
00002EE8  9391                    3229      SUB.L     D1,(A1)
00002EEA  9399                    3230      SUB.L     D1,(A1)+
00002EEC  93A1                    3231      SUB.L     D1,-(A1)
00002EEE  9289                    3232      SUB.L     A1,D1
00002EF0  9291                    3233      SUB.L     (A1),D1
00002EF2  9299                    3234      SUB.L     (A1)+,D1
00002EF4  92A1                    3235      SUB.L     -(A1),D1    
00002EF6  C3C0                    3236      MULS.W    D0,D1
00002EF8  C3D0                    3237      MULS.W    (A0),D1
00002EFA  C3E0                    3238      MULS.W    -(A0),D1
00002EFC  C3D8                    3239      MULS.W    (A0)+,D1
00002EFE  82C0                    3240      DIVU.W    D0,D1
00002F00  82D0                    3241      DIVU.W    (A0),D1
00002F02  82E0                    3242      DIVU.W    -(A0),D1
00002F04  82D8                    3243      DIVU.W    (A0)+,D1
00002F06  C401                    3244      AND.B     D1,D2
00002F08  C311                    3245      AND.B     D1,(A1)
00002F0A  C319                    3246      AND.B     D1,(A1)+
00002F0C  C321                    3247      AND.B     D1,-(A1)
00002F0E  C211                    3248      AND.B     (A1),D1
00002F10  C219                    3249      AND.B     (A1)+,D1
00002F12  C221                    3250      AND.B     -(A1),D1
00002F14  C441                    3251      AND.W     D1,D2
00002F16  C351                    3252      AND.W     D1,(A1)
00002F18  C359                    3253      AND.W     D1,(A1)+
00002F1A  C361                    3254      AND.W     D1,-(A1)
00002F1C  C251                    3255      AND.W     (A1),D1
00002F1E  C259                    3256      AND.W     (A1)+,D1
00002F20  C261                    3257      AND.W     -(A1),D1
00002F22  C481                    3258      AND.L     D1,D2
00002F24  C391                    3259      AND.L     D1,(A1)
00002F26  C399                    3260      AND.L     D1,(A1)+
00002F28  C3A1                    3261      AND.L     D1,-(A1)
00002F2A  C291                    3262      AND.L     (A1),D1
00002F2C  C299                    3263      AND.L     (A1)+,D1
00002F2E  C2A1                    3264      AND.L     -(A1),D1
00002F30  8401                    3265      OR.B     D1,D2
00002F32  8311                    3266      OR.B     D1,(A1)
00002F34  8319                    3267      OR.B     D1,(A1)+
00002F36  8321                    3268      OR.B     D1,-(A1)
00002F38  8211                    3269      OR.B     (A1),D1
00002F3A  8219                    3270      OR.B     (A1)+,D1
00002F3C  8221                    3271      OR.B     -(A1),D1
00002F3E  8441                    3272      OR.W     D1,D2
00002F40  8351                    3273      OR.W     D1,(A1)
00002F42  8359                    3274      OR.W     D1,(A1)+
00002F44  8361                    3275      OR.W     D1,-(A1)
00002F46  8251                    3276      OR.W     (A1),D1
00002F48  8259                    3277      OR.W     (A1)+,D1
00002F4A  8261                    3278      OR.W     -(A1),D1
00002F4C  8481                    3279      OR.L     D1,D2
00002F4E  8391                    3280      OR.L     D1,(A1)
00002F50  8399                    3281      OR.L     D1,(A1)+
00002F52  83A1                    3282      OR.L     D1,-(A1)
00002F54  8291                    3283      OR.L     (A1),D1
00002F56  8299                    3284      OR.L     (A1)+,D1
00002F58  82A1                    3285      OR.L     -(A1),D1
00002F5A  E32A                    3286      LSL.B     D1,D2
00002F5C  E36A                    3287      LSL.W     D1,D2
00002F5E  E3D1                    3288      LSL.W     (A1)
00002F60  E3D9                    3289      LSL.W     (A1)+
00002F62  E3E1                    3290      LSL.W     -(A1)
00002F64  E3AA                    3291      LSL.L     D1,D2
00002F66  E22A                    3292      LSR.B     D1,D2
00002F68  E26A                    3293      LSR.W     D1,D2
00002F6A  E2D1                    3294      LSR.W     (A1)
00002F6C  E2D9                    3295      LSR.W     (A1)+
00002F6E  E2E1                    3296      LSR.W     -(A1)
00002F70  E2AA                    3297      LSR.L     D1,D2    
00002F72  E222                    3298      ASR.B     D1,D2
00002F74  E262                    3299      ASR.W     D1,D2
00002F76  E0D1                    3300      ASR.W     (A1)
00002F78  E0D9                    3301      ASR.W     (A1)+
00002F7A  E0E1                    3302      ASR.W     -(A1)
00002F7C  E2A2                    3303      ASR.L     D1,D2
00002F7E  E322                    3304      ASL.B     D1,D2
00002F80  E362                    3305      ASL.W     D1,D2
00002F82  E1D1                    3306      ASL.W     (A1)
00002F84  E1D9                    3307      ASL.W     (A1)+
00002F86  E1E1                    3308      ASL.W     -(A1)
00002F88  E3A2                    3309      ASL.L     D1,D2  
00002F8A  6E30                    3310      BGT.B     label1
00002F8C  6E40                    3311      BGT.B     label2
00002F8E  6F2C                    3312      BLE.B     label1
00002F90  6F3C                    3313      BLE.B     label2
00002F92  6C28                    3314      BGE.B     label1
00002F94  6738                    3315      BEQ.B     label2
00002F96  6700 0024               3316      BEQ.W     label1
00002F9A  4E90                    3317      JSR       (A0)
00002F9C  4EB8 1234               3318      JSR       $1234
00002FA0  4EB9 12345678           3319      JSR       $12345678
00002FA6  4EB9 00002FBC           3320      JSR       label1
00002FAC  4EB9 00002FCE           3321      JSR       label2
00002FB2  4EB9 00002FD4           3322      JSR       label3
00002FB8  4E71                    3323      NOP
00002FBA  4E75                    3324      RTS
00002FBC                          3325  label1
00002FBC  4E71                    3326      NOP
00002FBE  4E75                    3327      RTS
00002FC0  41F8 0012               3328      LEA       $12,A0
00002FC4  41F8 1234               3329      LEA       $1234,A0
00002FC8  41F9 12345678           3330      LEA       $12345678,A0
00002FCE                          3331  label2
00002FCE  7000                    3332      MOVEQ     #$0,D0
00002FD0  7012                    3333      MOVEQ     #$12,D0
00002FD2  70FF                    3334      MOVEQ     #$FF,D0
00002FD4                          3335  label3
00002FD4  48B8 FE00 0012          3336      MOVEM.W   A1-A7,$12
00002FDA  48F8 00FE 0012          3337      MOVEM.L   D1-D7,$12
00002FE0  48B8 0280 0012          3338      MOVEM.W   A1/D7,$12
00002FE6  48F8 0280 0012          3339      MOVEM.L   A1/D7,$12
00002FEC  48B8 FE00 1234          3340      MOVEM.W   A1-A7,$1234
00002FF2  48F8 00FE 1234          3341      MOVEM.L   D1-D7,$1234
00002FF8  48B8 0280 1234          3342      MOVEM.W   A1/D7,$1234
00002FFE  48F8 0280 1234          3343      MOVEM.L   A1/D7,$1234
00003004  48B9 FE00 12345678      3344      MOVEM.W   A1-A7,$12345678
0000300C  48F9 00FE 12345678      3345      MOVEM.L   D1-D7,$12345678
00003014  48B9 0280 12345678      3346      MOVEM.W   A1/D7,$12345678
0000301C  48F9 0280 12345678      3347      MOVEM.L   A1/D7,$12345678
00003024  4CB8 FE00 0012          3348      MOVEM.W   $12,A1-A7
0000302A  4CF8 00FE 0012          3349      MOVEM.L   $12,D1-D7
00003030  4CB8 0280 0012          3350      MOVEM.W   $12,A1/D7
00003036  4CF8 0280 0012          3351      MOVEM.L   $12,A1/D7
0000303C  4CB8 FE00 1234          3352      MOVEM.W   $1234,A1-A7
00003042  4CF8 00FE 1234          3353      MOVEM.L   $1234,D1-D7
00003048  4CB8 0280 1234          3354      MOVEM.W   $1234,A1/D7
0000304E  4CF8 0280 1234          3355      MOVEM.L   $1234,A1/D7
00003054  4CB9 FE00 12345678      3356      MOVEM.W   $12345678,A1-A7
0000305C  4CF9 00FE 12345678      3357      MOVEM.L   $12345678,D1-D7
00003064  4CB9 0280 12345678      3358      MOVEM.W   $12345678,A1/D7
0000306C  4CF9 0280 12345678      3359      MOVEM.L   $12345678,A1/D7
00003074  D4F8 0012               3360      ADDA.W    $12,A2
00003078  D4F8 1234               3361      ADDA.W    $1234,A2
0000307C  D4F9 12345678           3362      ADDA.W    $12345678,A2
00003082  D4FC 1234               3363      ADDA.W    #$1234,A2
00003086  D5F8 0012               3364      ADDA.L    $12,A2
0000308A  D5F8 1234               3365      ADDA.L    $1234,A2
0000308E  D5F9 12345678           3366      ADDA.L    $12345678,A2
00003094  D5FC 12345678           3367      ADDA.L    #$12345678,A2
0000309A  C3F8 0012               3368      MULS.W    $12,D1
0000309E  C3F8 1234               3369      MULS.W    $1234,D1
000030A2  C3F9 12345678           3370      MULS.W    $12345678,D1
000030A8  C3FC 1234               3371      MULS.W    #$1234,D1
000030AC  82F8 0012               3372      DIVU.W    $12,D1
000030B0  82F8 1234               3373      DIVU.W    $1234,D1
000030B4  82F9 12345678           3374      DIVU.W    $12345678,D1
000030BA  82FC 1234               3375      DIVU.W    #$1234,D1
000030BE  C338 0012               3376      AND.B     D1,$12
000030C2  C338 1234               3377      AND.B     D1,$1234
000030C6  C339 12345678           3378      AND.B     D1,$12345678
000030CC  C238 0012               3379      AND.B     $12,D1
000030D0  C238 1234               3380      AND.B     $1234,D1
000030D4  C239 12345678           3381      AND.B     $12345678,D1
000030DA  C23C 0012               3382      AND.B     #$12,D1
000030DE  C378 0012               3383      AND.W     D1,$12
000030E2  C378 1234               3384      AND.W     D1,$1234
000030E6  C379 12345678           3385      AND.W     D1,$12345678
000030EC  C278 0012               3386      AND.W     $12,D1
000030F0  C278 1234               3387      AND.W     $1234,D1
000030F4  C279 12345678           3388      AND.W     $12345678,D1
000030FA  C27C 1234               3389      AND.W     #$1234,D1
000030FE  C3B8 0012               3390      AND.L     D1,$12
00003102  C3B8 1234               3391      AND.L     D1,$1234
00003106  C3B9 12345678           3392      AND.L     D1,$12345678
0000310C  C2B8 0012               3393      AND.L     $12,D1
00003110  C2B8 1234               3394      AND.L     $1234,D1
00003114  C2B9 12345678           3395      AND.L     $12345678,D1
0000311A  C2BC 12345678           3396      AND.L     #$12345678,D1
00003120  E30A                    3397      LSL.B     #$1,D2
00003122  E54A                    3398      LSL.W     #$2,D2
00003124  E78A                    3399      LSL.L     #$3,D2
00003126  E3F8 0012               3400      LSL.W     $12
0000312A  E3F8 1234               3401      LSL.W     $1234
0000312E  E3F9 12345678           3402      LSL.W     $12345678
00003134  E202                    3403      ASR.B     #$1,D2
00003136  E442                    3404      ASR.W     #$2,D2
00003138  E682                    3405      ASR.L     #$3,D2
0000313A  E0F8 0012               3406      ASR.W     $12
0000313E  E0F8 1234               3407      ASR.W     $1234
00003142  E0F9 12345678           3408      ASR.W     $12345678
00003148                          3409  label4
00003148  6EFE                    3410      BGT.B     label4
0000314A  6EFC                    3411      BGT.B     label4
0000314C  6EFA                    3412      BGT.B     label4
0000314E  6F00 FE6C               3413      BLE.W     label1
00003152  6F00 FE7A               3414      BLE.W     label2
00003156  6F00 FE7C               3415      BLE.W     label3
0000315A  6700 FE60               3416      BEQ.W     label1
0000315E  6700 FE6E               3417      BEQ.W     label2
00003162  6700 FE70               3418      BEQ.W     label3
00003166  4EB8 2FBC               3419      JSR       label1
0000316A  4EB8 2FCE               3420      JSR       label2
0000316E  4EB8 2FD4               3421      JSR       label3
00003172                          3422  
00003172                          3423  
00003172                          3424  
00003172                          3425  
00003172                          3426  
00003172                          3427  
00003172                          3428  
00003172                          3429  
00003172                          3430  
00003172                          3431  
00003172                          3432  
00003172                          3433  
00003172                          3434  
00003172                          3435  
00003172                          3436  
00003172                          3437  
00003172                          3438  
00003172                          3439  -------------------- end include --------------------
00003172                          3440  
00003172                          3441  
00003172                          3442  
00003172                          3443  
00003172                          3444      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_EA_DEST        26AE
ADDA_EA_IMM_LONG    267E
ADDA_EA_IMM_SOURCE  264C
ADDA_EA_IMM_WORD    2696
ADDA_EA_NON_IMM_SOURCE  262C
ADDA_EA_SIZE_AND_EA  25E4
ADDA_MSG            2CA0
ADDPM_EA            22A6
ADDPP_EA            225E
ADDP_EA             2222
ADDQ_ADD_COUNT_1_7  273E
ADDQ_ADD_COUNT_8    277E
ADDQ_EA_SIZE_AND_EA  26DE
ADDQ_MSG            2CA5
ADDR_EA             21FE
ADDR_REG            2CC1
ADD_MSG             2CAE
ADD_SUB_EA_EA       2812
ADD_SUB_EA_EA_IMM   283E
ADD_SUB_EA_EA_IMM_LONG  2876
ADD_SUB_EA_EA_IMM_WORD  2880
ADD_SUB_EA_REG      27E2
ADD_SUB_EA_SIZE     27B8
AND_MSG             2CD4
ASCII_DONE          10A4
ASL_MSG             2CE0
ASR_MSG             2CDC
A_MSG               2C7B
BCC_MSG             2D04
BEQ_MSG             2D0E
BGT_MSG             2D0A
BLE_MSG             2D06
BRA_MSG             2C8B
BR_BYTE_DISPLACEMENT  24E4
BR_EA_SIZE_AND_DISPLACEMENT  24CA
BR_WORD_DISPLACEMENT  2532
BYTE_MSG            2D12
BYTE_SIZE           1DC2
B_MSG               2C7D
CHECK_OPCODES       1206
CLOSE_PARENTHESIS_MSG  2D27
COMMA_MSG           2D1B
CONVERT_TO_ASCII    108C
CR                  D
C_MSG               2C7F
DATAR_EA            21DA
DATA_7_0            237E
DATA_MSG            2CFF
DATA_REG            2CBF
DECR_1_A            202C
DECR_1_B            2036
DECR_2              2040
DECR_2_A            204C
DECR_2_B            2056
DECR_3              2060
DECR_3_A            2070
DECR_3_B            2078
DECR_SWAP           201A
DESTINATION_11_6    1E3E
DEST_A_EA           1EA2
DEST_DATA_EA        1F92
DEST_PM_EA          1F4A
DEST_PP_EA          1F02
DEST_P_EA           1EC6
DIV_SIGN            2CC3
DOLLAR_MSG          2D1D
DONE                11F4
DONE_MSG            2B69
D_MSG               2C81
EA_ABS_LONG         2A22
EA_ABS_WORD         2A0A
EA_ADDR_REGISTER    290A
EA_DATA_REGISTER    28E2
EA_INDIRECT         2932
EA_INDIRECT_DECREMENT  29BE
EA_INDIRECT_INCREMENT  2972
EFFECTIVEADD_5_0    1DFE
EIGHT_MSG           2C77
ENDING_MSG          2B47
END_ADDR            2C3C
EXIT_LOOP_DECR      2000
EXIT_LOOP_INCR      20FC
E_MSG               2C83
FIVE_MSG            2C71
FORMAT_MSG          2B0E
FOUR_MSG            2C6F
F_MSG               2C85
GET_BIT             1CB0
GET_EA              288A
HASH_MSG            2D1F
IDATA               2322
IDATA_BYTE          2354
IDATA_EA            22EE
IDATA_WORD          235E
INCR_1_A            2128
INCR_1_B            2132
INCR_2              213C
INCR_2_A            2148
INCR_2_B            2152
INCR_3              215C
INCR_3_A            216C
INCR_3_B            2174
INCR_SWAP           2116
INSTRUCTION_DECODE_FAILURE  1CC4
INTRO_MSG           2AC4
INTRO_MSGS          1004
INVALID_INPUT       118A
INVALID_INPUT_MSG   2BF5
ISOLATE_15_11       12EE
ISOLATE_15_12       1270
ISOLATE_15_14       1300
ISOLATE_15_6        12CA
ISOLATE_15_8        12DC
ISOLATE_16          12BC
ISOLATE_8_6         1312
JSRMSG              2CC5
JSR_MSG             2CCA
LABEL1              2FBC
LABEL2              2FCE
LABEL3              2FD4
LABEL4              3148
LEA_EA              2588
LEA_MSG             2CD8
LETTER_ASCII        10BA
LF                  A
LONG_MSG            2D18
LONG_SIZE           1DEA
LSL_MSG             2CE8
LSR_MSG             2CE4
MEM_TO_REG          1472
MINUS_MSG           2D23
MOVEA_MSG           2C9A
MOVEM_MSG           2C94
MOVEQ_MSG           2CCE
MOVE_MSG            2C8F
MTR_1_A             14D0
MTR_1_B             14E2
NEG_BYTE_DISPLACEMENT  2520
NEG_WORD_DISPLACEMENT  2574
NEW_LINE            2D29
NINE_MSG            2C79
NOP_MSG             2CB6
NOT_MSG             2C87
NUMBER_ASCII        10A6
ONE_MSG             2C69
OPEN_PARENTHESIS_MSG  2D25
OPMODE_8_6          1D0C
OP_CODE_ADD         1934
OP_CODE_ADDA        17E2
OP_CODE_ADDQ        18A4
OP_CODE_ADD_SUB     1974
OP_CODE_ADD_SUB_DEST_REG  1A64
OP_CODE_ADD_SUB_SOURCE_REG  1994
OP_CODE_AND         1B84
OP_CODE_AND2        1BD2
OP_CODE_BCC         171C
OP_CODE_BEQ         179A
OP_CODE_BGT         1784
OP_CODE_BLE         176E
OP_CODE_BRA         17B0
OP_CODE_JSR         1C8C
OP_CODE_LEA         14F4
OP_CODE_LEA_PRINT   1574
OP_CODE_MEMORY_SHIFT_ROTATE  1624
OP_CODE_MOVE        1354
OP_CODE_MOVEA       1390
OP_CODE_MOVEM       13CC
OP_CODE_MOVEQ       1B2A
OP_CODE_NOP         16E8
OP_CODE_NOT         132A
OP_CODE_OR          1C08
OP_CODE_OR2         1C56
OP_CODE_REGISTER_SHIFT_ROTATE  15D2
OP_CODE_RTS         1702
OP_CODE_SHIFT_ROTATE  1596
OP_CODE_SUB         1954
OR_MSG              2CFC
PAUSE_SCAN          1164
PLUS_MSG            2D21
POST_INCR_LOOP_TRACK  20D4
POST_INCR_LOOP_TRACK_SECOND  20E2
POST_INCR_LOOP_UNTRACK  20E8
POST_INCR_MASK_FIELD  20C2
PREP_FOR_ROT        1D4A
PRESS_ENTER_MSG     2BD2
PRE_DECR_LOOP_TRACK  1FD8
PRE_DECR_LOOP_TRACK_SECOND  1FE6
PRE_DECR_LOOP_UNTRACK  1FEC
PRE_DECR_MASK_FIELD  1FC6
PRINT_A_DECR        20A0
PRINT_A_INCR        219C
PRINT_BYTE_VALUE    2A38
PRINT_BYTE_VALUE_LOOP  2A3E
PRINT_DESTINATION_DATA  1E7E
PRINT_DIV           21CC
PRINT_DONE          1188
PRINT_D_DECR        2080
PRINT_D_INCR        217C
PRINT_LONG_VALUE    2A92
PRINT_LONG_VALUE_LOOP  2A98
PRINT_LOOP          1136
PRINT_MEMORY_LOOP   10CE
PRINT_MINUS         21BE
PRINT_WORD_VALUE    2A64
PRINT_WORD_VALUE_LOOP  2A6A
REGISTER_11_9       1CF4
REG_TO_MEM          13FE
RESTART             11CA
RESTART_MSG         2B7D
RETURN              126E
REVERSE_DONE        11C8
REVERSE_LOOP        11AA
REVERSE_START       119A
ROL_MSG             2CF8
ROR_MSG             2CF4
ROXL_MSG            2CF0
ROXR_MSG            2CEC
RTM_1_A             143A
RTM_1_B             1446
RTM_2               1452
RTS_MSG             2CB2
SEVEN_MSG           2C75
SHIFT_ROTATE_COUNT_1_7  2482
SHIFT_ROTATE_COUNT_8  2498
SHIFT_ROTATE_EA_MEMORY  24A8
SHIFT_ROTATE_EA_REGISTER  23C4
SHIFT_ROTATE_EA_SIZE  2394
SHIFT_ROTATE_IMM_SOURCE  244C
SHIFT_ROTATE_REGISTER_DEST  2410
SHIFT_ROTATE_REGISTER_SOURCE  23DE
SIX_MSG             2C73
SIZE_13_12          1D52
SIZE_6              1DA2
SIZE_7_6            1D7A
SPACE_MSG           2C64
START               1000
STARTING_MSG        2AEA
STA_ADDR            2C14
SUB_MSG             2CAA
TEST                2D2C
TEST2               2DB4
THREE_MSG           2C6D
TOTAL_DECODE_FAILURE  1CC6
TWO_MSG             2C6B
TY_MSG              2BA5
WADDR               2368
WHITESPACE          2CBA
WHITESPACE_COM      2CBC
WORD_MSG            2D15
WORD_SIZE           1DD6
ZERO_MSG            2C67
