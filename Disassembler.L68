00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/10/2022 11:42:42 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Disassembler
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  
00001000                            12  *------LEA = Load effective address
00001000                            13  *------Running Trap #15 while the number 14 is in D0 will print out whatever data is in the address stored in A1
00001000                            14  
00001000  43F9 00001D52             15          LEA         INTRO_MSG,      A1
00001006  103C 000E                 16          MOVE.B      #14,            D0    
0000100A  4E4F                      17          TRAP        #15
0000100C                            18          
0000100C  43F9 00001D78             19          LEA         STARTING_MSG,   A1
00001012  103C 000E                 20          MOVE.B      #14,            D0   
00001016  4E4F                      21          TRAP        #15
00001018                            22          
00001018                            23  *----------------- 
00001018                            24  *       Running trap command 15 while the number 2 is in D0 
00001018                            25  *       Will ask the user to enter input
00001018                            26  *       after the user hits enter, the length of the input is stored in D1
00001018                            27  *       and the user data is stored in the space allocated by STA_ADDR repressented by ASSCI code
00001018                            28  *       IE 31 = 1, 32 = 2 etc etc
00001018                            29  *       If I store the number 1200, it will appear in memory as 31 32 30 30
00001018                            30  
00001018  43F9 00001DD2             31          LEA         STA_ADDR,       A1
0000101E  103C 0002                 32          MOVE.B      #2,             D0
00001022  4E4F                      33          TRAP        #15
00001024                            34          
00001024  4EB9 00001056             35          JSR         CONVERT_TO_ASCII
0000102A                            36          
0000102A                            37          * A3 now has our Starting Address
0000102A  2647                      38          MOVEA.L     D7,             A3
0000102C                            39          
0000102C  4282                      40          CLR.L       D2
0000102E  4287                      41          CLR.L       D7
00001030                            42          
00001030  43F9 00001D9C             43          LEA         ENDING_MSG,     A1
00001036  103C 000E                 44          MOVE.B      #14,            D0
0000103A  4E4F                      45          TRAP        #15
0000103C                            46          
0000103C  43F9 00001DFA             47          LEA         END_ADDR,       A1
00001042  103C 0002                 48          MOVE.B      #2,             D0
00001046  4E4F                      49          TRAP        #15
00001048                            50          
00001048  4EB9 00001056             51          JSR         CONVERT_TO_ASCII
0000104E                            52          * A4 now has our Ending Address
0000104E  2847                      53          MOVEA.L     D7,             A4
00001050                            54          
00001050                            55  
00001050  4EB9 00001098             56          JSR         PRINT_MEMORY_LOOP
00001056                            57          
00001056                            58          
00001056                            59          
00001056                            60          *BRA         DONE
00001056                            61          *   ASCII conversion
00001056                            62  *---------------------------------------        
00001056                            63  CONVERT_TO_ASCII:             
00001056  0C01 0000                 64          CMPI.B      #$0,            D1
0000105A  6700 0012                 65          BEQ         ASCII_DONE
0000105E  1419                      66          MOVE.B      (A1)+,          D2
00001060  103C 0039                 67          MOVE.B      #$39,           D0
00001064  B400                      68          CMP.B       D0,             D2
00001066  6F00 0008                 69          BLE         NUMBER_ASCII   
0000106A  6000 0018                 70          BRA         LETTER_ASCII  
0000106E                            71  
0000106E                            72  ASCII_DONE:
0000106E  4E75                      73          RTS
00001070                            74          
00001070                            75  NUMBER_ASCII:
00001070  5301                      76          SUBI.B      #$1,            D1
00001072  103C 0030                 77          MOVE.B      #$30,           D0
00001076  9400                      78          SUB.B       D0,             D2
00001078  DE02                      79          ADD.B       D2,             D7
0000107A  0C01 0000                 80          CMPI.B      #$0,            D1
0000107E  67EE                      81          BEQ         ASCII_DONE
00001080  E987                      82          ASL.L       #4,             D7
00001082  60D2                      83          BRA         CONVERT_TO_ASCII
00001084                            84  LETTER_ASCII:
00001084  5301                      85          SUBI.B      #$1,            D1
00001086  103C 0037                 86          MOVE.B      #$37,           D0
0000108A  9400                      87          SUB.B       D0,             D2
0000108C  DE02                      88          ADD.B       D2,             D7
0000108E  0C01 0000                 89          CMPI.B      #$0,            D1
00001092  67DA                      90          BEQ         ASCII_DONE
00001094  E987                      91          ASL.L       #4,             D7
00001096  60BE                      92          BRA         CONVERT_TO_ASCII
00001098                            93  *---------------------------------------        
00001098                            94          
00001098                            95          
00001098                            96          *   Printing data and addresses
00001098                            97  *---------------------------------------
00001098                            98  
00001098                            99  PRINT_MEMORY_LOOP:
00001098                           100          * add code here to compare current address with end address
00001098                           101          
00001098                           102          * if equal to, or further than ending address jump to DONE
00001098                           103          * SIMHALT
00001098  B9CB                     104          CMP.L       A3,             A4
0000109A  6700 00BC                105          BEQ         DONE
0000109E  6F00 00B8                106          BLE         DONE
000010A2                           107          
000010A2                           108          * We are goiong to keep track of the number of byts we have examined using D1
000010A2                           109          * Before printing the address we have to reverse the order
000010A2  4281                     110          CLR.L       D1
000010A4  4282                     111          CLR.L       D2
000010A6  123C 0008                112          MOVE.B      #$8,            D1
000010AA  260B                     113          MOVE.L      A3,             D3
000010AC  4EB9 00001128            114          JSR         REVERSE_START
000010B2                           115          
000010B2  2607                     116          MOVE.L      D7,             D3
000010B4  4281                     117          CLR.L       D1
000010B6  4282                     118          CLR.L       D2
000010B8  123C 0008                119          MOVE.B      #$8,            D1
000010BC  4EB9 000010F8            120          JSR         PRINT_LOOP
000010C2                           121          
000010C2                           122          
000010C2                           123          * space between address and data
000010C2  43F9 00001E22            124          LEA         SPACE_MSG,      A1
000010C8  103C 000E                125          MOVE.B      #14,            D0    
000010CC  4E4F                     126          TRAP        #15
000010CE                           127          
000010CE  4281                     128          CLR.L       D1
000010D0  4282                     129          CLR.L       D2
000010D2  123C 0008                130          MOVE.B      #$8,            D1
000010D6  361B                     131          MOVE.W      (A3)+,          D3
000010D8                           132          *JSR         REVERSE_START
000010D8                           133          
000010D8                           134          *MOVE.L      D7,             D3
000010D8  4281                     135          CLR.L       D1
000010DA  4282                     136          CLR.L       D2
000010DC                           137          *MOVE.B      #$8,            D1
000010DC                           138          *JSR         PRINT_LOOP
000010DC                           139          
000010DC                           140          * Jump to Function in another file
000010DC  4EB9 0000116A            141          JSR         CHECK_OPCODES
000010E2                           142          
000010E2                           143          
000010E2  4281                     144          CLR.L       D1
000010E4  4282                     145          CLR.L       D2
000010E6  4283                     146          CLR.L       D3
000010E8  4284                     147          CLR.L       D4
000010EA                           148          * new line
000010EA  43F9 00001E5C            149          LEA         NEW_LINE,       A1
000010F0  103C 000E                150          MOVE.B      #14,            D0    
000010F4  4E4F                     151          TRAP        #15
000010F6                           152  
000010F6                           153          * branch to the start of this method
000010F6  60A0                     154          BRA         PRINT_MEMORY_LOOP
000010F8                           155  
000010F8                           156  
000010F8                           157  PRINT_LOOP:
000010F8                           158  
000010F8                           159          
000010F8                           160          * When D1 == 0, we are done and exit this loop
000010F8  0C01 0000                161          CMPI.B      #$0,            D1
000010FC  6700 0028                162          BEQ         PRINT_DONE
00001100  5301                     163          SUBI.B      #$1,            D1
00001102                           164          
00001102  1403                     165          MOVE.B      D3,             D2
00001104                           166          * Bit shifting to isolate the right most digit
00001104                           167          * 1234 5678 => 8000 0000 => 0000 0008
00001104  103C 001C                168          MOVE.B      #28,            D0    
00001108  E1AA                     169          LSL.L       D0,             D2     
0000110A  E99A                     170          ROL.L       #4,             D2 
0000110C                           171          
0000110C                           172          * Bit shifting to prep the next digit
0000110C                           173          * 1234 4567 => 0123 4567
0000110C  E88B                     174          LSR.L       #4, D3
0000110E                           175          
0000110E                           176          *Assuming D4 is empty
0000110E                           177          
0000110E  1802                     178          MOVE.B       D2,            D4
00001110  43F9 00001E25            179          LEA          ZERO_MSG,      A1
00001116                           180          * load the address of Zero_msg
00001116                           181          * because all of the msgs are stored next to each other in order
00001116                           182          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001116                           183          * and then add it to the address starting at zero_msg
00001116  C8FC 0002                184          MULU         #2,            D4
0000111A  D3C4                     185          ADDA.L       D4,            A1
0000111C                           186          
0000111C                           187          * trap command 14 reads whatever address is in A1, and then spits out the data to the console
0000111C  103C 000E                188          MOVE.B       #14,           D0
00001120  4E4F                     189          TRAP         #15
00001122  60D4                     190          BRA          PRINT_LOOP
00001124  4644                     191          NOT          D4
00001126                           192          
00001126                           193  PRINT_DONE:
00001126  4E75                     194          RTS
00001128                           195          
00001128                           196      *   Reversing the address
00001128                           197  *---------------------------------------
00001128                           198  
00001128                           199  REVERSE_START:        
00001128  4281                     200          CLR.L       D1
0000112A  4287                     201          CLR.L       D7
0000112C  123C 0008                202          MOVE.B      #8,             D1
00001130  4EB9 00001138            203          JSR         REVERSE_LOOP
00001136  4E75                     204          RTS
00001138                           205          
00001138                           206  REVERSE_LOOP:
00001138                           207  
00001138                           208          
00001138  0C01 0000                209          CMPI.B      #$0,            D1
0000113C  6700 0018                210          BEQ         REVERSE_DONE
00001140  5301                     211          SUBI.B      #$1,            D1
00001142  E987                     212          ASL.L       #4,             D7
00001144                           213          
00001144  4285                     214          CLR.L       D5
00001146                           215          
00001146  1A03                     216          MOVE.B      D3,             D5
00001148                           217          
00001148  103C 001C                218          MOVE.B      #28,            D0    
0000114C  E1AD                     219          LSL.L       D0,             D5     
0000114E  E99D                     220          ROL.L       #4,             D5
00001150                           221          
00001150  DE05                     222          ADD.B       D5,             D7
00001152                           223          
00001152                           224          
00001152  E883                     225          ASR.L       #4,             D3
00001154                           226          
00001154  60E2                     227          BRA         REVERSE_LOOP
00001156                           228  
00001156                           229  REVERSE_DONE:
00001156  4E75                     230          RTS
00001158                           231  DONE:
00001158                           232  
00001158  43F9 00001DBE            233          LEA         GOODBYE_MSG,    A1
0000115E  103C 000E                234          MOVE.B      #14,            D0
00001162  4E4F                     235          TRAP        #15
00001164  103C 0009                236          MOVE.B      #9,             D0
00001168  4E4F                     237          TRAP        #15        
0000116A                           238          
0000116A                           239  
0000116A                           240      *SIMHALT             ; halt simulator
0000116A                           241  
0000116A                           242      INCLUDE         'Disassembler_OPCodes.x68'
0000116A                           243  
0000116A                           244  
0000116A                           245  
0000116A                           246  CHECK_OPCODES:
0000116A  4286                     247          CLR.L   D6
0000116C                           248  
0000116C  4EB9 0000120C            249          JSR     ISOLATE_16
00001172  BC3C 0001                250          CMP.B   #$1,    D6
00001176  6700 0058                251          BEQ     RETURN
0000117A                           252          
0000117A  4EB9 0000121E            253          JSR     ISOLATE_15_6
00001180  BC3C 0001                254          CMP.B   #$1,    D6
00001184  6700 004A                255          BEQ     RETURN
00001188                           256  
00001188  4EB9 00001230            257          JSR     ISOLATE_15_8
0000118E  BC3C 0001                258          CMP.B   #$1,    D6
00001192  6700 003C                259          BEQ     RETURN
00001196                           260          
00001196  4EB9 0000124A            261          JSR     ISOLATE_15_11
0000119C  BC3C 0001                262          CMP.B   #$1,    D6
000011A0  6700 002E                263          BEQ     RETURN
000011A4                           264          
000011A4  4EB9 000011D2            265          JSR     ISOLATE_15_12
000011AA  BC3C 0001                266          CMP.B   #$1,    D6
000011AE  6700 0020                267          BEQ     RETURN
000011B2                           268          
000011B2  4EB9 0000126E            269          JSR     ISOLATE_8_6
000011B8  BC3C 0001                270          CMP.B   #$1,    D6        
000011BC  6700 0012                271          BEQ     RETURN
000011C0                           272          
000011C0  4EB9 0000125C            273          JSR     ISOLATE_15_14    
000011C6  BC3C 0001                274          CMP.B   #$1,    D6
000011CA  6700 0004                275          BEQ     RETURN
000011CE                           276          
000011CE                           277  
000011CE  4E75                     278          RTS
000011D0                           279  RETURN:
000011D0  4E75                     280          RTS
000011D2                           281  
000011D2                           282  ISOLATE_15_12:
000011D2  3803                     283          MOVE.W      D3,     D4
000011D4  343C 000C                284          MOVE.W      #12,     D2
000011D8  E46C                     285          LSR.W       D2,     D4
000011DA                           286          
000011DA  B83C 000D                287          CMP.B       #$D,   D4
000011DE  6700 011A                288          BEQ         OP_CODE_ADD
000011E2                           289         ;CMP.W       #$D,   D4
000011E2                           290         ;BEQ         OP_CODE_ADDA
000011E2  B83C 0005                291          CMP.B       #$5,   D4
000011E6  6700 013C                292          BEQ         OP_CODE_ADDQ
000011EA  B83C 0009                293          CMP.B       #$9,   D4
000011EE  6700 0146                294          BEQ         OP_CODE_SUB
000011F2                           295          
000011F2  B83C 0007                296          CMP.B       #$7,    D4
000011F6  6700 017A                297          BEQ         OP_CODE_MOVEQ
000011FA  B83C 0008                298          CMP.B       #$8,    D4
000011FE  6700 0196                299          BEQ         OP_CODE_OR      *may get confused with DIVU + any other opcodes that start with 1000 (ones that we are not required to cover)
00001202  B83C 000C                300          CMP.B       #$C,    D4
00001206  6700 017C                301          BEQ         OP_CODE_AND
0000120A                           302  
0000120A  4E75                     303          RTS
0000120C                           304          
0000120C                           305  ISOLATE_16:
0000120C                           306  
0000120C  B67C 4E71                307          CMP.W       #$4E71, D3
00001210  6700 014E                308          BEQ         OP_CODE_NOP
00001214  B67C 4E75                309          CMP.W       #$4E75, D3
00001218  6700 0134                310          BEQ         OP_CODE_RTS
0000121C                           311  
0000121C  4E75                     312          RTS
0000121E                           313  
0000121E                           314  ISOLATE_15_6:
0000121E                           315          
0000121E  3803                     316          MOVE.W      D3,     D4
00001220  343C 0006                317          MOVE.W      #6,     D2
00001224  E46C                     318          LSR.W       D2,     D4
00001226                           319          
00001226  B87C 013A                320          CMP.W       #$13A,  D4
0000122A  6700 017C                321          BEQ         OP_CODE_JSR
0000122E                           322          
0000122E  4E75                     323          RTS
00001230                           324  
00001230                           325  ISOLATE_15_8:
00001230  3803                     326          MOVE.W      D3,     D4
00001232  343C 0008                327          MOVE.W      #8,     D2
00001236  E46C                     328          LSR.W       D2,     D4
00001238                           329          
00001238  B83C 0046                330          CMP.B       #$46,   D4
0000123C  6700 0050                331          BEQ         OP_CODE_NOT
00001240  B83C 0060                332          CMP.B       #$60,   D4
00001244  6700 005A                333          BEQ         OP_CODE_BRA
00001248                           334  
00001248  4E75                     335          RTS
0000124A                           336          
0000124A                           337  ISOLATE_15_11:
0000124A  3803                     338          MOVE.W      D3,     D4
0000124C  343C 000B                339          MOVE.W      #11,    D2
00001250  E46C                     340          LSR.W       D2,     D4
00001252                           341          
00001252  B83C 0009                342          CMP.B       #$9,    D4
00001256  6700 0090                343          BEQ         OP_CODE_MOVEM
0000125A                           344          
0000125A  4E75                     345          RTS
0000125C                           346          
0000125C                           347  ISOLATE_15_14:
0000125C  3803                     348          MOVE.W      D3,     D4
0000125E  343C 000E                349          MOVE.W      #14,    D2
00001262  E46C                     350          LSR.W       D2,     D4
00001264                           351          
00001264  B83C 0000                352          CMP.B       #$0,    D4
00001268  6700 005A                353          BEQ         OP_CODE_MOVE
0000126C                           354          
0000126C  4E75                     355          RTS
0000126E                           356          
0000126E                           357  ISOLATE_8_6:
0000126E  3803                     358          MOVE.W      D3,     D4
00001270  343C 0007                359          MOVE.W      #7,     D2
00001274  E56C                     360          LSL.W       D2,     D4
00001276  343C 000D                361          MOVE.W      #13,    D2
0000127A  E46C                     362          LSR.W       D2,     D4
0000127C                           363          
0000127C  B83C 0001                364          CMP.B       #$1,    D4
00001280  6700 0054                365          BEQ         OP_CODE_MOVEA
00001284  B83C 0007                366          CMP.B       #$7,    D4
00001288  6700 0028                367          BEQ         OP_CODE_LEA
0000128C                           368  
0000128C  4E75                     369          RTS
0000128E                           370  
0000128E                           371  
0000128E                           372  
0000128E                           373  OP_CODE_NOT:
0000128E  43F9 000013BA            374          LEA         NOT_MSG, A1
00001294  103C 000E                375          MOVE.B      #14, D0
00001298  4E4F                     376          TRAP        #15
0000129A                           377          
0000129A  1C3C 0001                378          MOVE.B      #1,      D6
0000129E                           379          
0000129E  4E75                     380          RTS 
000012A0                           381  OP_CODE_BRA:
000012A0  43F9 000013BE            382          LEA         BRA_MSG, A1
000012A6  103C 000E                383          MOVE.B      #14, D0
000012AA  4E4F                     384          TRAP        #15
000012AC                           385          
000012AC  1C3C 0001                386          MOVE.B      #1,      D6
000012B0                           387          *MOVE.W      (A3)+,   D7
000012B0                           388          
000012B0  4E75                     389          RTS
000012B2                           390          
000012B2                           391  OP_CODE_LEA:
000012B2  43F9 000013D3            392          LEA         LEA_MSG, A1
000012B8  103C 000E                393          MOVE.B      #14, D0
000012BC  4E4F                     394          TRAP        #15
000012BE                           395  
000012BE  1C3C 0001                396          MOVE.B      #1,      D6
000012C2                           397  
000012C2  4E75                     398          RTS        
000012C4                           399  OP_CODE_MOVE:
000012C4                           400  
000012C4  43F9 000013C2            401          LEA         MOVE_MSG, A1
000012CA  103C 000E                402          MOVE.B      #14, D0
000012CE  4E4F                     403          TRAP        #15
000012D0                           404  
000012D0  1C3C 0001                405          MOVE.B      #1,      D6
000012D4                           406  
000012D4  4E75                     407          RTS
000012D6                           408          
000012D6                           409  OP_CODE_MOVEA:
000012D6  43F9 000013CD            410          LEA         MOVEA_MSG, A1
000012DC  103C 000E                411          MOVE.B      #14, D0
000012E0  4E4F                     412          TRAP        #15
000012E2                           413  
000012E2  1C3C 0001                414          MOVE.B      #1,      D6
000012E6                           415  
000012E6  4E75                     416          RTS
000012E8                           417  
000012E8                           418  OP_CODE_MOVEM:
000012E8  43F9 000013C7            419          LEA         MOVEM_MSG, A1
000012EE  103C 000E                420          MOVE.B      #14, D0
000012F2  4E4F                     421          TRAP        #15
000012F4                           422  
000012F4  1C3C 0001                423          MOVE.B      #1,      D6
000012F8                           424  
000012F8  4E75                     425          RTS
000012FA                           426  OP_CODE_ADD:
000012FA  43F9 000013D7            427          LEA         ADD_MSG, A1
00001300  103C 000E                428          MOVE.B      #14, D0
00001304  4E4F                     429          TRAP        #15
00001306  4EB9 00001B6A            430          JSR         ADD_EA_SIZE_AND_EA
0000130C  1C3C 0001                431          MOVE.B      #1,     D6
00001310                           432          
00001310  4E75                     433          RTS
00001312                           434          
00001312                           435  OP_CODE_ADDA:
00001312  43F9 000013DB            436          LEA         ADDA_MSG, A1
00001318  103C 000E                437          MOVE.B      #14, D0
0000131C  4E4F                     438          TRAP        #15
0000131E                           439          
0000131E  1C3C 0001                440          MOVE.B      #1,      D6
00001322                           441          
00001322  4E75                     442          RTS
00001324                           443          
00001324                           444  OP_CODE_ADDQ:
00001324  43F9 000013E0            445          LEA         ADDQ_MSG, A1
0000132A  103C 000E                446          MOVE.B      #14, D0
0000132E  4E4F                     447          TRAP        #15
00001330                           448                  
00001330  1C3C 0001                449          MOVE.B      #1,      D6
00001334                           450          
00001334  4E75                     451          RTS
00001336                           452  
00001336                           453  OP_CODE_SUB:
00001336  43F9 000013E5            454          LEA         SUB_MSG, A1
0000133C  103C 000E                455          MOVE.B      #14, D0
00001340  4E4F                     456          TRAP        #15
00001342                           457          
00001342  4EB9 00001C5E            458          JSR         SUB_EA_SIZE_AND_EA
00001348  1C3C 0001                459          MOVE.B      #1,      D6
0000134C                           460  
0000134C  4E75                     461          RTS
0000134E                           462          
0000134E                           463  OP_CODE_RTS:
0000134E  43F9 000013E9            464          LEA         RTS_MSG, A1
00001354  103C 000E                465          MOVE.B      #14, D0
00001358  4E4F                     466          TRAP        #15
0000135A                           467          
0000135A  1C3C 0001                468          MOVE.B      #1,      D6
0000135E                           469          
0000135E  4E75                     470          RTS
00001360                           471          
00001360                           472  OP_CODE_NOP:
00001360  43F9 000013ED            473          LEA         NOP_MSG, A1
00001366  103C 000E                474          MOVE.B      #14, D0
0000136A  4E4F                     475          TRAP        #15
0000136C                           476          
0000136C  1C3C 0001                477          MOVE.B      #1,      D6
00001370                           478          
00001370  4E75                     479          RTS
00001372                           480          
00001372                           481  OP_CODE_MOVEQ:
00001372  43F9 000013F1            482          LEA         MOVEQ_MSG, A1
00001378  103C 000E                483          MOVE.B      #14, D0
0000137C  4E4F                     484          TRAP        #15
0000137E                           485          
0000137E  1C3C 0001                486          MOVE.B      #1,      D6
00001382                           487          
00001382  4E75                     488          RTS
00001384                           489          
00001384                           490  OP_CODE_AND:
00001384  43F9 000013F7            491          LEA         AND_MSG, A1
0000138A  103C 000E                492          MOVE.B      #14, D0
0000138E  4E4F                     493          TRAP        #15
00001390                           494          
00001390                           495  
00001390                           496          
00001390  1C3C 0001                497          MOVE.B      #1,      D6
00001394                           498          
00001394  4E75                     499          RTS
00001396                           500          
00001396                           501  OP_CODE_OR:
00001396  43F9 000013FB            502          LEA         OR_MSG, A1
0000139C  103C 000E                503          MOVE.B      #14, D0
000013A0  4E4F                     504          TRAP        #15
000013A2                           505          
000013A2                           506  
000013A2                           507          
000013A2  1C3C 0001                508          MOVE.B      #1,      D6
000013A6                           509          
000013A6  4E75                     510          RTS
000013A8                           511  
000013A8                           512  OP_CODE_JSR:
000013A8  43F9 000013FE            513          LEA         JSR_MSG, A1
000013AE  103C 000E                514          MOVE.B      #14, D0
000013B2  4E4F                     515          TRAP        #15
000013B4                           516          
000013B4  1C3C 0001                517          MOVE.B      #1,      D6
000013B8                           518          
000013B8  4E75                     519          RTS
000013BA                           520          
000013BA= 4E 4F 54 00              521  NOT_MSG:        DC.B        'NOT',0
000013BE= 42 52 41 00              522  BRA_MSG:        DC.B        'BRA',0
000013C2                           523  
000013C2= 4D 4F 56 45 00           524  MOVE_MSG:       DC.B        'MOVE',0
000013C7= 4D 4F 56 45 4D 00        525  MOVEM_MSG:      DC.B        'MOVEM',0
000013CD= 4D 4F 56 45 41 00        526  MOVEA_MSG:      DC.B        'MOVEA',0
000013D3= 4C 45 41 00              527  LEA_MSG:        DC.B        'LEA',0
000013D7                           528  
000013D7= 41 44 44 00              529  ADD_MSG:        DC.B        'ADD',0
000013DB= 41 44 44 41 00           530  ADDA_MSG:       DC.B        'ADDA',0
000013E0= 41 44 44 51 00           531  ADDQ_MSG:       DC.B        'ADDQ',0
000013E5= 53 55 42 00              532  SUB_MSG:        DC.B        'SUB',0
000013E9= 52 54 53 00              533  RTS_MSG:        DC.B        'RTS',0
000013ED= 4E 4F 50 00              534  NOP_MSG:        DC.B        'NOP',0
000013F1                           535  
000013F1= 4D 4F 56 45 51 00        536  MOVEQ_MSG:      DC.B        'MOVEQ',0
000013F7= 41 4E 44 00              537  AND_MSG:        DC.B        'AND',0
000013FB= 4F 52 00                 538  OR_MSG:         DC.B        'OR',0
000013FE= 4A 53 52 00              539  JSR_MSG:        DC.B        'JSR',0
00001402                           540  
00001402                           541  GET_BIT
00001402  4284                     542          CLR.L   D4
00001404  3803                     543          MOVE.W  D3, D4   
00001406                           544          *Shift it to left by 15-y to get rid of all the bits to the left of yth bit 
00001406                           545          *and then shift the bits such that the xth bit is the 0th bit
00001406  4486                     546          NEG.L   D6
00001408  0686 0000000F            547          ADDI.L  #15, D6
0000140E  DA86                     548          ADD.L   D6, D5
00001410  ED6C                     549          LSL.W   D6, D4
00001412  EA6C                     550          LSR.W   D5, D4
00001414  4E75                     551          RTS
00001416                           552  
00001416                           553          
00001416                           554  
00001416                           555  
00001416                           556  
00001416                           557  
00001416                           558  
00001416                           559  
00001416                           560  -------------------- end include --------------------
00001416                           561      INCLUDE         'demo_test.x68'
00001416                           562  
00001416                           563  
00001416                           564  
00001416                           565  
00001416                           566  NOP
00001416  4E75                     567      RTS
00001418  4E71                     568      NOP
0000141A  4E75                     569      RTS
0000141C  41D0                     570      LEA     (A0),A0
0000141E  41D5                     571      LEA     (A5),A0
00001420  41D7                     572      LEA     (A7),A0
00001422  4FD0                     573      LEA     (A0),A7
00001424  4FD5                     574      LEA     (A5),A7
00001426  4FD7                     575      LEA     (A7),A7
00001428  1200                     576      MOVE.B    D0,D1
0000142A  1080                     577      MOVE.B    D0,(A0)
0000142C  10C0                     578      MOVE.B    D0,(A0)+
0000142E  1100                     579      MOVE.B    D0,-(A0)
00001430  1010                     580      MOVE.B    (A0),D0
00001432  1290                     581      MOVE.B    (A0),(A1)
00001434  12D0                     582      MOVE.B    (A0),(A1)+
00001436  1310                     583      MOVE.B    (A0),-(A1)
00001438  1018                     584      MOVE.B    (A0)+,D0
0000143A  1298                     585      MOVE.B    (A0)+,(A1)
0000143C  12D8                     586      MOVE.B    (A0)+,(A1)+
0000143E  1318                     587      MOVE.B    (A0)+,-(A1)
00001440  1020                     588      MOVE.B    -(A0),D0
00001442  12A0                     589      MOVE.B    -(A0),(A1)
00001444  12E0                     590      MOVE.B    -(A0),(A1)+
00001446  1320                     591      MOVE.B    -(A0),-(A1)
00001448  3200                     592      MOVE.W    D0,D1
0000144A  3080                     593      MOVE.W    D0,(A0)
0000144C  30C0                     594      MOVE.W    D0,(A0)+
0000144E  3100                     595      MOVE.W    D0,-(A0)
00001450  3008                     596      MOVE.W    A0,D0
00001452  3288                     597      MOVE.W    A0,(A1)
00001454  32C8                     598      MOVE.W    A0,(A1)+
00001456  3308                     599      MOVE.W    A0,-(A1)
00001458  3010                     600      MOVE.W    (A0),D0
0000145A  3290                     601      MOVE.W    (A0),(A1)
0000145C  32D0                     602      MOVE.W    (A0),(A1)+
0000145E  3310                     603      MOVE.W    (A0),-(A1)
00001460  3018                     604      MOVE.W    (A0)+,D0
00001462  3298                     605      MOVE.W    (A0)+,(A1)
00001464  32D8                     606      MOVE.W    (A0)+,(A1)+
00001466  3318                     607      MOVE.W    (A0)+,-(A1)
00001468  3020                     608      MOVE.W    -(A0),D0
0000146A  32A0                     609      MOVE.W    -(A0),(A1)
0000146C  32E0                     610      MOVE.W    -(A0),(A1)+
0000146E  3320                     611      MOVE.W    -(A0),-(A1)
00001470  2200                     612      MOVE.L    D0,D1
00001472  2080                     613      MOVE.L    D0,(A0)
00001474  20C0                     614      MOVE.L    D0,(A0)+
00001476  2100                     615      MOVE.L    D0,-(A0)
00001478  2008                     616      MOVE.L    A0,D0
0000147A  2288                     617      MOVE.L    A0,(A1)
0000147C  22C8                     618      MOVE.L    A0,(A1)+
0000147E  2308                     619      MOVE.L    A0,-(A1)
00001480  2010                     620      MOVE.L    (A0),D0
00001482  2290                     621      MOVE.L    (A0),(A1)
00001484  22D0                     622      MOVE.L    (A0),(A1)+
00001486  2310                     623      MOVE.L    (A0),-(A1)
00001488  2018                     624      MOVE.L    (A0)+,D0
0000148A  2298                     625      MOVE.L    (A0)+,(A1)
0000148C  22D8                     626      MOVE.L    (A0)+,(A1)+
0000148E  2318                     627      MOVE.L    (A0)+,-(A1)
00001490  2020                     628      MOVE.L    -(A0),D0
00001492  22A0                     629      MOVE.L    -(A0),(A1)
00001494  22E0                     630      MOVE.L    -(A0),(A1)+
00001496  2320                     631      MOVE.L    -(A0),-(A1)
00001498  48A1 007F                632      MOVEM.W   A1-A7,-(A1)
0000149C  48E1 7F00                633      MOVEM.L   D1-D7,-(A1)
000014A0  48A1 0140                634      MOVEM.W   A1/D7,-(A1)
000014A4  48E1 0140                635      MOVEM.L   A1/D7,-(A1)
000014A8  4891 FE00                636      MOVEM.W   A1-A7,(A1)
000014AC  48D1 00FE                637      MOVEM.L   D1-D7,(A1)
000014B0  4891 0280                638      MOVEM.W   A1/D7,(A1)
000014B4  48D1 0280                639      MOVEM.L   A1/D7,(A1)
000014B8  4C99 FE00                640      MOVEM.W   (A1)+,A1-A7
000014BC  4CD9 00FE                641      MOVEM.L   (A1)+,D1-D7
000014C0  4C99 0280                642      MOVEM.W   (A1)+,A1/D7
000014C4  4CD9 0280                643      MOVEM.L   (A1)+,A1/D7
000014C8  4C91 FE00                644      MOVEM.W   (A1),A1-A7
000014CC  4CD1 00FE                645      MOVEM.L   (A1),D1-D7
000014D0  4C91 0280                646      MOVEM.W   (A1),A1/D7
000014D4  4CD1 0280                647      MOVEM.L   (A1),A1/D7
000014D8  3040                     648      MOVEA.W    D0,A0
000014DA  3048                     649      MOVEA.W    A0,A0
000014DC  3050                     650      MOVEA.W    (A0),A0
000014DE  3058                     651      MOVEA.W    (A0)+,A0
000014E0  3060                     652      MOVEA.W    -(A0),A0
000014E2  2040                     653      MOVEA.L    D0,A0
000014E4  2048                     654      MOVEA.L    A0,A0
000014E6  2050                     655      MOVEA.L    (A0),A0
000014E8  2058                     656      MOVEA.L    (A0)+,A0
000014EA  2060                     657      MOVEA.L    -(A0),A0  
000014EC  D401                     658      ADD.B     D1,D2
000014EE  D311                     659      ADD.B     D1,(A1)
000014F0  D319                     660      ADD.B     D1,(A1)+
000014F2  D321                     661      ADD.B     D1,-(A1)
000014F4  D211                     662      ADD.B     (A1),D1
000014F6  D219                     663      ADD.B     (A1)+,D1
000014F8  D221                     664      ADD.B     -(A1),D1
000014FA  D441                     665      ADD.W     D1,D2
000014FC  D351                     666      ADD.W     D1,(A1)
000014FE  D359                     667      ADD.W     D1,(A1)+
00001500  D361                     668      ADD.W     D1,-(A1)
00001502  D251                     669      ADD.W     (A1),D1
00001504  D259                     670      ADD.W     (A1)+,D1
00001506  D261                     671      ADD.W     -(A1),D1
00001508  D481                     672      ADD.L     D1,D2
0000150A  D391                     673      ADD.L     D1,(A1)
0000150C  D399                     674      ADD.L     D1,(A1)+
0000150E  D3A1                     675      ADD.L     D1,-(A1)
00001510  D291                     676      ADD.L     (A1),D1
00001512  D299                     677      ADD.L     (A1)+,D1
00001514  D2A1                     678      ADD.L     -(A1),D1
00001516  D4C1                     679      ADDA.W        D1,A2
00001518  D4D1                     680      ADDA.W        (A1),A2
0000151A  D4D9                     681      ADDA.W        (A1)+,A2
0000151C  D4E1                     682      ADDA.W        -(A1),A2
0000151E  D5C1                     683      ADDA.L        D1,A2
00001520  D5D1                     684      ADDA.L        (A1),A2
00001522  D5D9                     685      ADDA.L        (A1)+,A2
00001524  D5E1                     686      ADDA.L        -(A1),A2
00001526  9401                     687      SUB.B     D1,D2
00001528  9311                     688      SUB.B     D1,(A1)
0000152A  9319                     689      SUB.B     D1,(A1)+
0000152C  9321                     690      SUB.B     D1,-(A1)
0000152E  9211                     691      SUB.B     (A1),D1
00001530  9219                     692      SUB.B     (A1)+,D1
00001532  9221                     693      SUB.B     -(A1),D1
00001534  9441                     694      SUB.W     D1,D2
00001536  92C1                     695      SUB.W     D1,A1
00001538  9351                     696      SUB.W     D1,(A1)
0000153A  9359                     697      SUB.W     D1,(A1)+
0000153C  9361                     698      SUB.W     D1,-(A1)
0000153E  9249                     699      SUB.W     A1,D1
00001540  9251                     700      SUB.W     (A1),D1
00001542  9259                     701      SUB.W     (A1)+,D1
00001544  9261                     702      SUB.W     -(A1),D1
00001546  9481                     703      SUB.L     D1,D2
00001548  93C1                     704      SUB.L     D1,A1
0000154A  9391                     705      SUB.L     D1,(A1)
0000154C  9399                     706      SUB.L     D1,(A1)+
0000154E  93A1                     707      SUB.L     D1,-(A1)
00001550  9289                     708      SUB.L     A1,D1
00001552  9291                     709      SUB.L     (A1),D1
00001554  9299                     710      SUB.L     (A1)+,D1
00001556  92A1                     711      SUB.L     -(A1),D1    
00001558  C3C0                     712      MULS.W    D0,D1
0000155A  C3D0                     713      MULS.W    (A0),D1
0000155C  C3E0                     714      MULS.W    -(A0),D1
0000155E  C3D8                     715      MULS.W    (A0)+,D1
00001560  82C0                     716      DIVU.W    D0,D1
00001562  82D0                     717      DIVU.W    (A0),D1
00001564  82E0                     718      DIVU.W    -(A0),D1
00001566  82D8                     719      DIVU.W    (A0)+,D1
00001568  C401                     720      AND.B     D1,D2
0000156A  C311                     721      AND.B     D1,(A1)
0000156C  C319                     722      AND.B     D1,(A1)+
0000156E  C321                     723      AND.B     D1,-(A1)
00001570  C211                     724      AND.B     (A1),D1
00001572  C219                     725      AND.B     (A1)+,D1
00001574  C221                     726      AND.B     -(A1),D1
00001576  C441                     727      AND.W     D1,D2
00001578  C351                     728      AND.W     D1,(A1)
0000157A  C359                     729      AND.W     D1,(A1)+
0000157C  C361                     730      AND.W     D1,-(A1)
0000157E  C251                     731      AND.W     (A1),D1
00001580  C259                     732      AND.W     (A1)+,D1
00001582  C261                     733      AND.W     -(A1),D1
00001584  C481                     734      AND.L     D1,D2
00001586  C391                     735      AND.L     D1,(A1)
00001588  C399                     736      AND.L     D1,(A1)+
0000158A  C3A1                     737      AND.L     D1,-(A1)
0000158C  C291                     738      AND.L     (A1),D1
0000158E  C299                     739      AND.L     (A1)+,D1
00001590  C2A1                     740      AND.L     -(A1),D1
00001592  8401                     741      OR.B     D1,D2
00001594  8311                     742      OR.B     D1,(A1)
00001596  8319                     743      OR.B     D1,(A1)+
00001598  8321                     744      OR.B     D1,-(A1)
0000159A  8211                     745      OR.B     (A1),D1
0000159C  8219                     746      OR.B     (A1)+,D1
0000159E  8221                     747      OR.B     -(A1),D1
000015A0  8441                     748      OR.W     D1,D2
000015A2  8351                     749      OR.W     D1,(A1)
000015A4  8359                     750      OR.W     D1,(A1)+
000015A6  8361                     751      OR.W     D1,-(A1)
000015A8  8251                     752      OR.W     (A1),D1
000015AA  8259                     753      OR.W     (A1)+,D1
000015AC  8261                     754      OR.W     -(A1),D1
000015AE  8481                     755      OR.L     D1,D2
000015B0  8391                     756      OR.L     D1,(A1)
000015B2  8399                     757      OR.L     D1,(A1)+
000015B4  83A1                     758      OR.L     D1,-(A1)
000015B6  8291                     759      OR.L     (A1),D1
000015B8  8299                     760      OR.L     (A1)+,D1
000015BA  82A1                     761      OR.L     -(A1),D1
000015BC  E32A                     762      LSL.B     D1,D2
000015BE  E36A                     763      LSL.W     D1,D2
000015C0  E3D1                     764      LSL.W     (A1)
000015C2  E3D9                     765      LSL.W     (A1)+
000015C4  E3E1                     766      LSL.W     -(A1)
000015C6  E3AA                     767      LSL.L     D1,D2
000015C8  E22A                     768      LSR.B     D1,D2
000015CA  E26A                     769      LSR.W     D1,D2
000015CC  E2D1                     770      LSR.W     (A1)
000015CE  E2D9                     771      LSR.W     (A1)+
000015D0  E2E1                     772      LSR.W     -(A1)
000015D2  E2AA                     773      LSR.L     D1,D2    
000015D4  E222                     774      ASR.B     D1,D2
000015D6  E262                     775      ASR.W     D1,D2
000015D8  E0D1                     776      ASR.W     (A1)
000015DA  E0D9                     777      ASR.W     (A1)+
000015DC  E0E1                     778      ASR.W     -(A1)
000015DE  E2A2                     779      ASR.L     D1,D2
000015E0  E322                     780      ASL.B     D1,D2
000015E2  E362                     781      ASL.W     D1,D2
000015E4  E1D1                     782      ASL.W     (A1)
000015E6  E1D9                     783      ASL.W     (A1)+
000015E8  E1E1                     784      ASL.W     -(A1)
000015EA  E3A2                     785      ASL.L     D1,D2  
000015EC  6E30                     786      BGT.B     label1
000015EE  6E40                     787      BGT.B     label2
000015F0  6F2C                     788      BLE.B     label1
000015F2  6F3C                     789      BLE.B     label2
000015F4  6C28                     790      BGE.B     label1
000015F6  6738                     791      BEQ.B     label2
000015F8  6700 0024                792      BEQ.W     label1
000015FC  4E90                     793      JSR       (A0)
000015FE  4EB8 1234                794      JSR       $1234
00001602  4EB9 12345678            795      JSR       $12345678
00001608  4EB9 0000161E            796      JSR       label1
0000160E  4EB9 00001630            797      JSR       label2
00001614  4EB9 00001636            798      JSR       label3
0000161A  4E71                     799      NOP
0000161C  4E75                     800      RTS
0000161E                           801  label1
0000161E  4E71                     802      NOP
00001620  4E75                     803      RTS
00001622  41F8 0012                804      LEA       $12,A0
00001626  41F8 1234                805      LEA       $1234,A0
0000162A  41F9 12345678            806      LEA       $12345678,A0
00001630                           807  label2
00001630  7000                     808      MOVEQ     #$0,D0
00001632  7012                     809      MOVEQ     #$12,D0
00001634  70FF                     810      MOVEQ     #$FF,D0
00001636                           811  label3
00001636  48B8 FE00 0012           812      MOVEM.W   A1-A7,$12
0000163C  48F8 00FE 0012           813      MOVEM.L   D1-D7,$12
00001642  48B8 0280 0012           814      MOVEM.W   A1/D7,$12
00001648  48F8 0280 0012           815      MOVEM.L   A1/D7,$12
0000164E  48B8 FE00 1234           816      MOVEM.W   A1-A7,$1234
00001654  48F8 00FE 1234           817      MOVEM.L   D1-D7,$1234
0000165A  48B8 0280 1234           818      MOVEM.W   A1/D7,$1234
00001660  48F8 0280 1234           819      MOVEM.L   A1/D7,$1234
00001666  48B9 FE00 12345678       820      MOVEM.W   A1-A7,$12345678
0000166E  48F9 00FE 12345678       821      MOVEM.L   D1-D7,$12345678
00001676  48B9 0280 12345678       822      MOVEM.W   A1/D7,$12345678
0000167E  48F9 0280 12345678       823      MOVEM.L   A1/D7,$12345678
00001686  4CB8 FE00 0012           824      MOVEM.W   $12,A1-A7
0000168C  4CF8 00FE 0012           825      MOVEM.L   $12,D1-D7
00001692  4CB8 0280 0012           826      MOVEM.W   $12,A1/D7
00001698  4CF8 0280 0012           827      MOVEM.L   $12,A1/D7
0000169E  4CB8 FE00 1234           828      MOVEM.W   $1234,A1-A7
000016A4  4CF8 00FE 1234           829      MOVEM.L   $1234,D1-D7
000016AA  4CB8 0280 1234           830      MOVEM.W   $1234,A1/D7
000016B0  4CF8 0280 1234           831      MOVEM.L   $1234,A1/D7
000016B6  4CB9 FE00 12345678       832      MOVEM.W   $12345678,A1-A7
000016BE  4CF9 00FE 12345678       833      MOVEM.L   $12345678,D1-D7
000016C6  4CB9 0280 12345678       834      MOVEM.W   $12345678,A1/D7
000016CE  4CF9 0280 12345678       835      MOVEM.L   $12345678,A1/D7
000016D6  94F8 0012                836      SUB.W    $12,A2
000016DA  94F8 1234                837      SUB.W    $1234,A2
000016DE  94F9 12345678            838      SUB.W    $12345678,A2
000016E4  94FC 1234                839      SUB.W    #$1234,A2
000016E8  95F8 0012                840      SUB.L    $12,A2
000016EC  95F8 1234                841      SUB.L    $1234,A2
000016F0  95F9 12345678            842      SUB.L    $12345678,A2
000016F6  95FC 12345678            843      SUB.L    #$12345678,A2
000016FC  D4F8 0012                844      ADD.W    $12,A2
00001700  D4F8 1234                845      ADD.W    $1234,A2
00001704  D4F9 12345678            846      ADD.W    $12345678,A2
0000170A  D4FC 1234                847      ADD.W    #$1234,A2
0000170E  D5F8 0012                848      ADD.L    $12,A2
00001712  D5F8 1234                849      ADD.L    $1234,A2
00001716  D5F9 12345678            850      ADD.L    $12345678,A2
0000171C  D5FC 12345678            851      ADD.L    #$12345678,A2
00001722  C3F8 0012                852      MULS.W    $12,D1
00001726  C3F8 1234                853      MULS.W    $1234,D1
0000172A  C3F9 12345678            854      MULS.W    $12345678,D1
00001730  C3FC 1234                855      MULS.W    #$1234,D1
00001734  82F8 0012                856      DIVU.W    $12,D1
00001738  82F8 1234                857      DIVU.W    $1234,D1
0000173C  82F9 12345678            858      DIVU.W    $12345678,D1
00001742  82FC 1234                859      DIVU.W    #$1234,D1
00001746  C338 0012                860      AND.B     D1,$12
0000174A  C338 1234                861      AND.B     D1,$1234
0000174E  C339 12345678            862      AND.B     D1,$12345678
00001754  C238 0012                863      AND.B     $12,D1
00001758  C238 1234                864      AND.B     $1234,D1
0000175C  C239 12345678            865      AND.B     $12345678,D1
00001762  C23C 0012                866      AND.B     #$12,D1
00001766  C378 0012                867      AND.W     D1,$12
0000176A  C378 1234                868      AND.W     D1,$1234
0000176E  C379 12345678            869      AND.W     D1,$12345678
00001774  C278 0012                870      AND.W     $12,D1
00001778  C278 1234                871      AND.W     $1234,D1
0000177C  C279 12345678            872      AND.W     $12345678,D1
00001782  C27C 1234                873      AND.W     #$1234,D1
00001786  C3B8 0012                874      AND.L     D1,$12
0000178A  C3B8 1234                875      AND.L     D1,$1234
0000178E  C3B9 12345678            876      AND.L     D1,$12345678
00001794  C2B8 0012                877      AND.L     $12,D1
00001798  C2B8 1234                878      AND.L     $1234,D1
0000179C  C2B9 12345678            879      AND.L     $12345678,D1
000017A2  C2BC 12345678            880      AND.L     #$12345678,D1
000017A8  E30A                     881      LSL.B     #$1,D2
000017AA  E54A                     882      LSL.W     #$2,D2
000017AC  E78A                     883      LSL.L     #$3,D2
000017AE  E3F8 0012                884      LSL.W     $12
000017B2  E3F8 1234                885      LSL.W     $1234
000017B6  E3F9 12345678            886      LSL.W     $12345678
000017BC  E202                     887      ASR.B     #$1,D2
000017BE  E442                     888      ASR.W     #$2,D2
000017C0  E682                     889      ASR.L     #$3,D2
000017C2  E0F8 0012                890      ASR.W     $12
000017C6  E0F8 1234                891      ASR.W     $1234
000017CA  E0F9 12345678            892      ASR.W     $12345678
000017D0                           893  label4
000017D0  6EFE                     894      BGT.B     label4
000017D2  6EFC                     895      BGT.B     label4
000017D4  6EFA                     896      BGT.B     label4
000017D6  6F00 FE46                897      BLE.W     label1
000017DA  6F00 FE54                898      BLE.W     label2
000017DE  6F00 FE56                899      BLE.W     label3
000017E2  6700 FE3A                900      BEQ.W     label1
000017E6  6700 FE48                901      BEQ.W     label2
000017EA  6700 FE4A                902      BEQ.W     label3
000017EE  4EB8 161E                903      JSR       label1
000017F2  4EB8 1630                904      JSR       label2
000017F6  4EB8 1636                905      JSR       label3
000017FA                           906  
000017FA                           907  
000017FA                           908  
000017FA                           909  
000017FA                           910  
000017FA                           911  
000017FA                           912  
000017FA                           913  
000017FA                           914  
000017FA                           915  
000017FA                           916  
000017FA                           917  
000017FA                           918  
000017FA                           919  
000017FA                           920  
000017FA                           921  
000017FA                           922  
000017FA                           923  
000017FA                           924  -------------------- end include --------------------
000017FA                           925      INCLUDE         'Disassembler_EA.x68'
000017FA                           926      
000017FA                           927  SHIFT_ROTATE_EA_SIZE
000017FA  48E7 0600                928      MOVEM.L    D5-D6, -(A7)
000017FE  7A06                     929      MOVE.L     #6, D5
00001800  7C07                     930      MOVE.L     #7, D6
00001802  4EB8 1402                931      JSR        GET_BIT
00001806  4CDF 0060                932      MOVEM.L    (A7)+, D5-D6
0000180A  43F9 00001E45            933      LEA        BYTE_MSG, A1
00001810  C8FC 0003                934      MULU       #3, D4
00001814  D3C4                     935      ADDA.L       D4,  A1
00001816  103C 000E                936      MOVE.B      #14, D0
0000181A  4E4F                     937      TRAP        #15
0000181C  43F9 00001E22            938      LEA         SPACE_MSG,      A1
00001822  103C 000E                939      MOVE.B      #14,            D0    
00001826  4E4F                     940      TRAP        #15
00001828  4E75                     941      RTS
0000182A                           942  
0000182A                           943  
0000182A                           944  
0000182A                           945  
0000182A                           946  SHIFT_ROTATE_EA_REGISTER
0000182A  48E7 0600                947      MOVEM.L    D5-D6, -(A7)
0000182E  7A05                     948      MOVE.L     #5, D5
00001830  7C05                     949      MOVE.L     #5, D6
00001832  4EB8 1402                950      JSR        GET_BIT
00001836  4CDF 0060                951      MOVEM.L    (A7)+, D5-D6
0000183A  B8BC 00000001            952      CMP.L      #1,  D4
00001840  6600 0070                953      BNE        SHIFT_ROTATE_IMM_SOURCE
00001844                           954  
00001844                           955  SHIFT_ROTATE_REGISTER_SOURCE
00001844  43F9 00001E3F            956      LEA        D_MSG, A1
0000184A  103C 000E                957      MOVE.B      #14,   D0    
0000184E  4E4F                     958      TRAP        #15
00001850  48E7 0600                959      MOVEM.L    D5-D6, -(A7)
00001854  7A09                     960      MOVE.L     #9, D5
00001856  7C0B                     961      MOVE.L     #11, D6
00001858  4EB8 1402                962      JSR        GET_BIT
0000185C  4CDF 0060                963      MOVEM.L    (A7)+, D5-D6
00001860  43F9 00001E25            964      LEA       ZERO_MSG, A1
00001866  C8FC 0002                965      MULU      #2, D4    
0000186A  D3C4                     966      ADDA.L    D4, A1
0000186C  103C 000E                967      MOVE.B      #14,   D0    
00001870  4E4F                     968      TRAP        #15
00001872  6000 0002                969      BRA       SHIFT_ROTATE_REGISTER_DEST
00001876                           970  
00001876                           971  SHIFT_ROTATE_REGISTER_DEST
00001876  43F9 00001E4E            972      LEA        COMMA_MSG, A1    
0000187C  103C 000E                973      MOVE.B      #14,   D0    
00001880  4E4F                     974      TRAP        #15
00001882  43F9 00001E3F            975      LEA        D_MSG, A1
00001888  103C 000E                976      MOVE.B      #14,   D0    
0000188C  4E4F                     977      TRAP        #15
0000188E  48E7 0600                978      MOVEM.L    D5-D6, -(A7)
00001892  7A00                     979      MOVE.L     #0, D5
00001894  7C02                     980      MOVE.L     #2, D6
00001896  4EB8 1402                981      JSR        GET_BIT
0000189A  4CDF 0060                982      MOVEM.L    (A7)+, D5-D6
0000189E  43F9 00001E25            983      LEA       ZERO_MSG, A1
000018A4  C8FC 0002                984      MULU      #2, D4    
000018A8  D3C4                     985      ADDA.L    D4, A1
000018AA  103C 000E                986      MOVE.B      #14,   D0    
000018AE  4E4F                     987      TRAP        #15
000018B0  4E75                     988      RTS
000018B2                           989  
000018B2                           990  SHIFT_ROTATE_IMM_SOURCE
000018B2  43F9 00001E52            991      LEA        HASH_MSG, A1
000018B8  103C 000E                992      MOVE.B      #14,   D0    
000018BC  4E4F                     993      TRAP        #15
000018BE  43F9 00001E50            994      LEA        DOLLAR_MSG, A1
000018C4  103C 000E                995      MOVE.B      #14,   D0    
000018C8  4E4F                     996      TRAP        #15
000018CA  48E7 0600                997      MOVEM.L    D5-D6, -(A7)
000018CE  7A09                     998      MOVE.L     #9, D5
000018D0  7C0B                     999      MOVE.L     #11, D6
000018D2  4EB8 1402               1000      JSR        GET_BIT
000018D6  4CDF 0060               1001      MOVEM.L    (A7)+, D5-D6
000018DA  B8BC 00000000           1002      CMP.L      #0, D4
000018E0  6700 001C               1003      BEQ       SHIFT_ROTATE_COUNT_8
000018E4  6000 0002               1004      BRA       SHIFT_ROTATE_COUNT_1_7
000018E8                          1005   
000018E8                          1006  SHIFT_ROTATE_COUNT_1_7
000018E8  43F9 00001E25           1007      LEA       ZERO_MSG, A1
000018EE  C8FC 0002               1008      MULU      #2, D4    
000018F2  D3C4                    1009      ADDA.L    D4, A1
000018F4  103C 000E               1010      MOVE.B      #14,   D0    
000018F8  4E4F                    1011      TRAP        #15
000018FA  6000 FF7A               1012      BRA       SHIFT_ROTATE_REGISTER_DEST
000018FE                          1013  
000018FE                          1014  SHIFT_ROTATE_COUNT_8
000018FE  43F9 00001E35           1015      LEA       EIGHT_MSG, A1
00001904  103C 000E               1016      MOVE.B      #14,   D0    
00001908  4E4F                    1017      TRAP        #15
0000190A  6000 FF6A               1018      BRA       SHIFT_ROTATE_REGISTER_DEST
0000190E                          1019  
0000190E                          1020  
0000190E                          1021  
0000190E                          1022  
0000190E                          1023  
0000190E                          1024  SHIFT_ROTATE_EA_MEMORY
0000190E  48E7 0600               1025      MOVEM.L    D5-D6, -(A7)
00001912  7A00                    1026      MOVE.L     #0, D5
00001914  7C05                    1027      MOVE.L     #5, D6
00001916  4EB8 1402               1028      JSR        GET_BIT
0000191A  4CDF 0060               1029      MOVEM.L    (A7)+, D5-D6
0000191E  48E7 1600               1030      MOVEM.L    D3/D5-D6, -(A7)
00001922  2604                    1031      MOVE.L     D4, D3
00001924  4EB9 00001930           1032      JSR        GET_EA
0000192A  4CDF 0068               1033      MOVEM.L    (A7)+, D3/D5-D6
0000192E  4E75                    1034      RTS
00001930                          1035      
00001930                          1036  GET_EA
00001930  7A03                    1037      MOVE.L     #3, D5
00001932  7C05                    1038      MOVE.L     #5, D6
00001934  4EB8 1402               1039      JSR        GET_BIT
00001938  B8BC 00000000           1040      CMP.L      #0, D4
0000193E  6700 0048               1041      BEQ        EA_DATA_REGISTER
00001942  B8BC 00000001           1042      CMP.L      #1, D4
00001948  6700 0066               1043      BEQ        EA_ADDR_REGISTER
0000194C  B8BC 00000002           1044      CMP.L      #2, D4
00001952  6700 0084               1045      BEQ        EA_INDIRECT
00001956  B8BC 00000003           1046      CMP.L      #3, D4
0000195C  6700 00BA               1047      BEQ        EA_INDIRECT_INCREMENT
00001960  B8BC 00000004           1048      CMP.L      #4, D4
00001966  6700 00FC               1049      BEQ        EA_INDIRECT_DECREMENT
0000196A                          1050      *101, and 110 mode bits should be detected in disassembler_OPCodes 
0000196A  7A00                    1051      MOVE.L     #0, D5
0000196C  7C02                    1052      MOVE.L     #2, D6
0000196E  4EB8 1402               1053      JSR        GET_BIT
00001972  B8BC 00000000           1054      CMP.L      #0, D4
00001978  6700 0136               1055      BEQ        EA_ABS_WORD
0000197C  B8BC 00000001           1056      CMP.L      #1, D4
00001982  6700 0144               1057      BEQ        EA_ABS_LONG
00001986                          1058      *Unreachable
00001986  4E75                    1059      RTS
00001988                          1060      
00001988                          1061  
00001988                          1062  EA_DATA_REGISTER
00001988  43F9 00001E3F           1063      LEA   D_MSG, A1
0000198E  103C 000E               1064      MOVE.B   #14,  D0    
00001992  4E4F                    1065      TRAP     #15
00001994  43F9 00001E25           1066      LEA    ZERO_MSG, A1
0000199A  7A00                    1067      MOVE.L     #0, D5
0000199C  7C02                    1068      MOVE.L     #2, D6
0000199E  4EB8 1402               1069      JSR        GET_BIT
000019A2  C8FC 0002               1070      MULU       #2, D4
000019A6  D3C4                    1071      ADDA.L     D4, A1
000019A8  103C 000E               1072      MOVE.B   #14,  D0    
000019AC  4E4F                    1073      TRAP     #15
000019AE  4E75                    1074      RTS
000019B0                          1075  
000019B0                          1076  
000019B0                          1077  EA_ADDR_REGISTER
000019B0  43F9 00001E39           1078      LEA   A_MSG, A1
000019B6  103C 000E               1079      MOVE.B   #14,  D0    
000019BA  4E4F                    1080      TRAP     #15
000019BC  43F9 00001E25           1081      LEA    ZERO_MSG, A1
000019C2  7A00                    1082      MOVE.L     #0, D5
000019C4  7C02                    1083      MOVE.L     #2, D6
000019C6  4EB8 1402               1084      JSR        GET_BIT
000019CA  C8FC 0002               1085      MULU       #2, D4
000019CE  D3C4                    1086      ADDA.L     D4, A1
000019D0  103C 000E               1087      MOVE.B   #14,  D0    
000019D4  4E4F                    1088      TRAP     #15
000019D6  4E75                    1089      RTS
000019D8                          1090  
000019D8                          1091  
000019D8                          1092  EA_INDIRECT
000019D8  43F9 00001E58           1093      LEA   OPEN_PARENTHESIS_MSG, A1
000019DE  103C 000E               1094      MOVE.B   #14,  D0    
000019E2  4E4F                    1095      TRAP     #15
000019E4  43F9 00001E39           1096      LEA   A_MSG, A1
000019EA  103C 000E               1097      MOVE.B   #14,  D0    
000019EE  4E4F                    1098      TRAP     #15
000019F0  43F9 00001E25           1099      LEA    ZERO_MSG, A1
000019F6  7A00                    1100      MOVE.L     #0, D5
000019F8  7C02                    1101      MOVE.L     #2, D6
000019FA  4EB8 1402               1102      JSR        GET_BIT
000019FE  C8FC 0002               1103      MULU       #2, D4
00001A02  D3C4                    1104      ADDA.L     D4, A1
00001A04  103C 000E               1105      MOVE.B   #14,  D0    
00001A08  4E4F                    1106      TRAP     #15
00001A0A  43F9 00001E5A           1107      LEA   CLOSE_PARENTHESIS_MSG, A1
00001A10  103C 000E               1108      MOVE.B   #14,  D0    
00001A14  4E4F                    1109      TRAP     #15
00001A16  4E75                    1110      RTS
00001A18                          1111  
00001A18                          1112  
00001A18                          1113  
00001A18                          1114  EA_INDIRECT_INCREMENT
00001A18  43F9 00001E58           1115      LEA   OPEN_PARENTHESIS_MSG, A1
00001A1E  103C 000E               1116      MOVE.B   #14,  D0    
00001A22  4E4F                    1117      TRAP     #15
00001A24  43F9 00001E39           1118      LEA   A_MSG, A1
00001A2A  103C 000E               1119      MOVE.B   #14,  D0    
00001A2E  4E4F                    1120      TRAP     #15
00001A30  43F9 00001E25           1121      LEA    ZERO_MSG, A1
00001A36  7A00                    1122      MOVE.L     #0, D5
00001A38  7C02                    1123      MOVE.L     #2, D6
00001A3A  4EB8 1402               1124      JSR        GET_BIT
00001A3E  C8FC 0002               1125      MULU       #2, D4
00001A42  D3C4                    1126      ADDA.L     D4, A1
00001A44  103C 000E               1127      MOVE.B   #14,  D0    
00001A48  4E4F                    1128      TRAP     #15
00001A4A  43F9 00001E5A           1129      LEA   CLOSE_PARENTHESIS_MSG, A1
00001A50  103C 000E               1130      MOVE.B   #14,  D0    
00001A54  4E4F                    1131      TRAP     #15
00001A56  43F9 00001E54           1132      LEA   PLUS_MSG, A1
00001A5C  103C 000E               1133      MOVE.B   #14,  D0    
00001A60  4E4F                    1134      TRAP     #15
00001A62  4E75                    1135      RTS
00001A64                          1136  
00001A64                          1137  
00001A64                          1138  EA_INDIRECT_DECREMENT
00001A64  43F9 00001E56           1139      LEA   MINUS_MSG, A1
00001A6A  103C 000E               1140      MOVE.B   #14,  D0    
00001A6E  4E4F                    1141      TRAP     #15
00001A70  43F9 00001E58           1142      LEA   OPEN_PARENTHESIS_MSG, A1
00001A76  103C 000E               1143      MOVE.B   #14,  D0    
00001A7A  4E4F                    1144      TRAP     #15
00001A7C  43F9 00001E39           1145      LEA   A_MSG, A1
00001A82  103C 000E               1146      MOVE.B   #14,  D0    
00001A86  4E4F                    1147      TRAP     #15
00001A88  43F9 00001E25           1148      LEA    ZERO_MSG, A1
00001A8E  7A00                    1149      MOVE.L     #0, D5
00001A90  7C02                    1150      MOVE.L     #2, D6
00001A92  4EB8 1402               1151      JSR        GET_BIT
00001A96  C8FC 0002               1152      MULU       #2, D4
00001A9A  D3C4                    1153      ADDA.L     D4, A1
00001A9C  103C 000E               1154      MOVE.B   #14,  D0    
00001AA0  4E4F                    1155      TRAP     #15
00001AA2  43F9 00001E5A           1156      LEA   CLOSE_PARENTHESIS_MSG, A1
00001AA8  103C 000E               1157      MOVE.B   #14,  D0    
00001AAC  4E4F                    1158      TRAP     #15
00001AAE  4E75                    1159      RTS
00001AB0                          1160  
00001AB0                          1161  
00001AB0                          1162  
00001AB0                          1163  EA_ABS_WORD
00001AB0  4284                    1164      CLR.L      D4
00001AB2  381B                    1165      MOVE.W     (A3)+, D4
00001AB4  43F9 00001E50           1166      LEA        DOLLAR_MSG,       A1
00001ABA  103C 000E               1167      MOVE.B      #14,            D0    
00001ABE  4E4F                    1168      TRAP        #15
00001AC0  4EB9 00001B0A           1169      JSR        PRINT_WORD_VALUE
00001AC6  4E75                    1170      RTS
00001AC8                          1171  
00001AC8                          1172  EA_ABS_LONG
00001AC8  281B                    1173      MOVE.L    (A3)+, D4
00001ACA  43F9 00001E50           1174      LEA        DOLLAR_MSG,       A1
00001AD0  103C 000E               1175      MOVE.B      #14,            D0    
00001AD4  4E4F                    1176      TRAP        #15
00001AD6  4EB9 00001B38           1177      JSR        PRINT_LONG_VALUE
00001ADC  4E75                    1178      RTS
00001ADE                          1179  
00001ADE                          1180  
00001ADE                          1181  
00001ADE                          1182  
00001ADE                          1183  PRINT_BYTE_VALUE
00001ADE  48E7 0600               1184          MOVEM.L    D5-D6, -(A7)
00001AE2  7C02                    1185          MOVE.L     #2, D6
00001AE4                          1186  PRINT_BYTE_VALUE_LOOP
00001AE4                          1187          *Gets the most significant bit basically
00001AE4                          1188          *Could use GET_BIT subroutine but it is 
00001AE4                          1189          *costly in terms of registers used
00001AE4  1A04                    1190          MOVE.B     D4, D5
00001AE6  E80D                    1191          LSR.B      #4, D5
00001AE8  E90C                    1192          LSL.B      #4, D4
00001AEA  43F9 00001E25           1193          LEA        ZERO_MSG,      A1
00001AF0                          1194          * load the address of Zero_msg
00001AF0                          1195          * because all of the msgs are stored next to each other in order
00001AF0                          1196          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001AF0                          1197          * and then add it to the address starting at zero_msg
00001AF0  CAFC 0002               1198          MULU         #2,            D5
00001AF4  D3C5                    1199          ADDA.L       D5,            A1
00001AF6  103C 000E               1200          MOVE.B      #14, D0
00001AFA  4E4F                    1201          TRAP        #15
00001AFC  5386                    1202          SUBI.L      #1, D6
00001AFE  BC3C 0000               1203          CMP.B       #0, D6
00001B02  66E0                    1204          BNE         PRINT_BYTE_VALUE_LOOP
00001B04  4CDF 0060               1205          MOVEM.L    (A7)+, D5-D6
00001B08  4E75                    1206          RTS
00001B0A                          1207  
00001B0A                          1208  
00001B0A                          1209  
00001B0A                          1210  PRINT_WORD_VALUE
00001B0A  48E7 0600               1211          MOVEM.L    D5-D6, -(A7)
00001B0E  7C04                    1212          MOVE.L     #4, D6
00001B10                          1213  PRINT_WORD_VALUE_LOOP
00001B10                          1214          *Gets the most significant bit basically
00001B10                          1215          *Could use GET_BIT subroutine but it is 
00001B10                          1216          *costly in terms of registers used
00001B10  3A04                    1217          MOVE.W     D4, D5
00001B12  EC4D                    1218          LSR.W      #6, D5
00001B14  EC4D                    1219          LSR.W      #6, D5
00001B16  E94C                    1220          LSL.W      #4, D4
00001B18  43F9 00001E25           1221          LEA        ZERO_MSG,      A1
00001B1E                          1222          * load the address of Zero_msg
00001B1E                          1223          * because all of the msgs are stored next to each other in order
00001B1E                          1224          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001B1E                          1225          * and then add it to the address starting at zero_msg
00001B1E  CAFC 0002               1226          MULU         #2,            D5
00001B22  D3C5                    1227          ADDA.L       D5,            A1
00001B24  103C 000E               1228          MOVE.B      #14, D0
00001B28  4E4F                    1229          TRAP        #15
00001B2A  5386                    1230          SUBI.L      #1, D6
00001B2C  BC3C 0000               1231          CMP.B       #0, D6
00001B30  66DE                    1232          BNE         PRINT_WORD_VALUE_LOOP
00001B32  4CDF 0060               1233          MOVEM.L    (A7)+, D5-D6
00001B36  4E75                    1234          RTS
00001B38                          1235  
00001B38                          1236  
00001B38                          1237  PRINT_LONG_VALUE
00001B38  48E7 0600               1238          MOVEM.L    D5-D6, -(A7)
00001B3C  7C08                    1239          MOVE.L     #8, D6
00001B3E                          1240  PRINT_LONG_VALUE_LOOP
00001B3E                          1241          *Gets the most significant bit basically
00001B3E                          1242          *Could use GET_BIT subroutine but it is 
00001B3E                          1243          *costly in terms of registers used
00001B3E  2A04                    1244          MOVE.L     D4, D5
00001B40  E08D                    1245          LSR.L      #8, D5
00001B42  E08D                    1246          LSR.L      #8, D5
00001B44  E08D                    1247          LSR.L      #8, D5
00001B46  E88D                    1248          LSR.L      #4, D5
00001B48  E98C                    1249          LSL.L      #4, D4
00001B4A  43F9 00001E25           1250          LEA        ZERO_MSG,      A1
00001B50                          1251          * load the address of Zero_msg
00001B50                          1252          * because all of the msgs are stored next to each other in order
00001B50                          1253          * we can simply take the value isolated from the number, multiply it by 2 (msg's take up 2 bytes)
00001B50                          1254          * and then add it to the address starting at zero_msg
00001B50  CAFC 0002               1255          MULU         #2,            D5
00001B54  D3C5                    1256          ADDA.L       D5,            A1
00001B56  103C 000E               1257          MOVE.B      #14, D0
00001B5A  4E4F                    1258          TRAP        #15
00001B5C  5386                    1259          SUBI.L      #1, D6
00001B5E  BC3C 0000               1260          CMP.B       #0, D6
00001B62  66DA                    1261          BNE         PRINT_LONG_VALUE_LOOP
00001B64  4CDF 0060               1262          MOVEM.L    (A7)+, D5-D6
00001B68  4E75                    1263          RTS
00001B6A                          1264          
00001B6A                          1265          
00001B6A                          1266          
00001B6A                          1267  
00001B6A                          1268  ADD_EA_SIZE_AND_EA 
00001B6A  48E7 0600               1269      MOVEM.L     D5-D6, -(A7)
00001B6E  7A08                    1270      MOVE.L      #8, D5
00001B70  7C08                    1271      MOVE.L      #8, D6
00001B72  4EB8 1402               1272      JSR         GET_BIT
00001B76  4CDF 0060               1273      MOVEM.L     (A7)+, D5-D6
00001B7A  43F9 00001E48           1274      LEA         WORD_MSG, A1
00001B80  C8FC 0003               1275      MULU        #3, D4
00001B84  D3C4                    1276      ADDA.L      D4, A1
00001B86  103C 000E               1277      MOVE.B      #14, D0
00001B8A  4E4F                    1278      TRAP        #15
00001B8C                          1279  
00001B8C  43F9 00001E22           1280      LEA         SPACE_MSG,   A1
00001B92  103C 000E               1281      MOVE.B      #14,   D0    
00001B96  4E4F                    1282      TRAP        #15
00001B98                          1283  
00001B98  48E7 0600               1284      MOVEM.L     D5-D6, -(A7)
00001B9C  7A00                    1285      MOVE.L      #0, D5
00001B9E  7C05                    1286      MOVE.L      #5, D6
00001BA0  4EB8 1402               1287      JSR         GET_BIT
00001BA4  4CDF 0060               1288      MOVEM.L     (A7)+, D5-D6
00001BA8  B8BC 0000003C           1289      CMP.L       #%111100, D4
00001BAE  6700 0020               1290      BEQ         ADD_EA_IMM_SOURCE
00001BB2                          1291      
00001BB2                          1292  ADD_EA_NON_IMM_SOURCE
00001BB2  48E7 1600               1293      MOVEM.L     D3/D5-D6, -(A7)
00001BB6  2604                    1294      MOVE.L      D4, D3     
00001BB8  4EB8 1930               1295      JSR         GET_EA
00001BBC  43F9 00001E4E           1296      LEA         COMMA_MSG,   A1
00001BC2  103C 000E               1297      MOVE.B      #14,   D0    
00001BC6  4E4F                    1298      TRAP        #15
00001BC8  4CDF 0068               1299      MOVEM.L     (A7)+, D3/D5-D6
00001BCC  6000 0060               1300      BRA         ADD_EA_DEST
00001BD0                          1301      
00001BD0                          1302  ADD_EA_IMM_SOURCE
00001BD0  43F9 00001E52           1303      LEA         HASH_MSG, A1
00001BD6  103C 000E               1304      MOVE.B      #14,   D0    
00001BDA  4E4F                    1305      TRAP        #15
00001BDC  43F9 00001E50           1306      LEA         DOLLAR_MSG, A1
00001BE2  103C 000E               1307      MOVE.B      #14,   D0    
00001BE6  4E4F                    1308      TRAP        #15
00001BE8  48E7 0600               1309      MOVEM.L     D5-D6, -(A7)
00001BEC  7A06                    1310      MOVE.L      #6, D5
00001BEE  7C08                    1311      MOVE.L      #8, D6
00001BF0  4EB8 1402               1312      JSR         GET_BIT
00001BF4  4CDF 0060               1313      MOVEM.L     (A7)+, D5-D6
00001BF8  B8BC 00000003           1314      CMP.L       #%011, D4
00001BFE  6700 0018               1315      BEQ         ADD_EA_IMM_WORD
00001C02                          1316      
00001C02                          1317  ADD_EA_IMM_LONG
00001C02  281B                    1318      MOVE.L      (A3)+, D4
00001C04  4EB8 1B38               1319      JSR         PRINT_LONG_VALUE
00001C08                          1320  
00001C08  43F9 00001E4E           1321      LEA         COMMA_MSG,   A1
00001C0E  103C 000E               1322      MOVE.B      #14,   D0    
00001C12  4E4F                    1323      TRAP        #15
00001C14  6000 0018               1324      BRA         ADD_EA_DEST
00001C18                          1325      
00001C18                          1326  ADD_EA_IMM_WORD
00001C18  381B                    1327      MOVE.W      (A3)+, D4
00001C1A  4EB8 1B0A               1328      JSR         PRINT_WORD_VALUE
00001C1E                          1329  
00001C1E  43F9 00001E4E           1330      LEA         COMMA_MSG,   A1
00001C24  103C 000E               1331      MOVE.B      #14,   D0    
00001C28  4E4F                    1332      TRAP        #15
00001C2A  6000 0002               1333      BRA         ADD_EA_DEST
00001C2E                          1334  
00001C2E                          1335  ADD_EA_DEST
00001C2E  48E7 0600               1336      MOVEM.L     D5-D6, -(A7)
00001C32  7A09                    1337      MOVE.L      #9, D5
00001C34  7C0B                    1338      MOVE.L      #11, D6
00001C36  4EB8 1402               1339      JSR         GET_BIT
00001C3A  4CDF 0060               1340      MOVEM.L     (A7)+, D5-D6
00001C3E  43F9 00001E39           1341      LEA         A_MSG, A1
00001C44  103C 000E               1342      MOVE.B      #14,  D0    
00001C48  4E4F                    1343      TRAP        #15
00001C4A  43F9 00001E25           1344      LEA         ZERO_MSG, A1
00001C50  C8FC 0002               1345      MULU        #2, D4
00001C54  D3C4                    1346      ADDA.L      D4, A1
00001C56  103C 000E               1347      MOVE.B      #14,  D0    
00001C5A  4E4F                    1348      TRAP        #15
00001C5C  4E75                    1349      RTS
00001C5E                          1350      
00001C5E                          1351      
00001C5E                          1352  
00001C5E                          1353  SUB_EA_SIZE_AND_EA 
00001C5E  48E7 0600               1354      MOVEM.L     D5-D6, -(A7)
00001C62  7A08                    1355      MOVE.L      #8, D5
00001C64  7C08                    1356      MOVE.L      #8, D6
00001C66  4EB8 1402               1357      JSR         GET_BIT
00001C6A  4CDF 0060               1358      MOVEM.L     (A7)+, D5-D6
00001C6E  43F9 00001E48           1359      LEA         WORD_MSG, A1
00001C74  C8FC 0003               1360      MULU        #3, D4
00001C78  D3C4                    1361      ADDA.L      D4, A1
00001C7A  103C 000E               1362      MOVE.B      #14, D0
00001C7E  4E4F                    1363      TRAP        #15
00001C80                          1364  
00001C80  43F9 00001E22           1365      LEA         SPACE_MSG,   A1
00001C86  103C 000E               1366      MOVE.B      #14,   D0    
00001C8A  4E4F                    1367      TRAP        #15
00001C8C                          1368  
00001C8C  48E7 0600               1369      MOVEM.L     D5-D6, -(A7)
00001C90  7A00                    1370      MOVE.L      #0, D5
00001C92  7C05                    1371      MOVE.L      #5, D6
00001C94  4EB8 1402               1372      JSR         GET_BIT
00001C98  4CDF 0060               1373      MOVEM.L     (A7)+, D5-D6
00001C9C  B8BC 0000003C           1374      CMP.L       #%111100, D4
00001CA2  6700 0020               1375      BEQ         SUB_EA_IMM_SOURCE
00001CA6                          1376      
00001CA6                          1377  SUB_EA_NON_IMM_SOURCE
00001CA6  48E7 1600               1378      MOVEM.L     D3/D5-D6, -(A7)
00001CAA  2604                    1379      MOVE.L      D4, D3     
00001CAC  4EB8 1930               1380      JSR         GET_EA
00001CB0  43F9 00001E4E           1381      LEA         COMMA_MSG,   A1
00001CB6  103C 000E               1382      MOVE.B      #14,   D0    
00001CBA  4E4F                    1383      TRAP        #15
00001CBC  4CDF 0068               1384      MOVEM.L     (A7)+, D3/D5-D6
00001CC0  6000 0060               1385      BRA         SUB_EA_DEST
00001CC4                          1386      
00001CC4                          1387  SUB_EA_IMM_SOURCE
00001CC4  43F9 00001E52           1388      LEA         HASH_MSG, A1
00001CCA  103C 000E               1389      MOVE.B      #14,   D0    
00001CCE  4E4F                    1390      TRAP        #15
00001CD0  43F9 00001E50           1391      LEA         DOLLAR_MSG, A1
00001CD6  103C 000E               1392      MOVE.B      #14,   D0    
00001CDA  4E4F                    1393      TRAP        #15
00001CDC  48E7 0600               1394      MOVEM.L     D5-D6, -(A7)
00001CE0  7A06                    1395      MOVE.L      #6, D5
00001CE2  7C08                    1396      MOVE.L      #8, D6
00001CE4  4EB8 1402               1397      JSR         GET_BIT
00001CE8  4CDF 0060               1398      MOVEM.L     (A7)+, D5-D6
00001CEC  B8BC 00000003           1399      CMP.L       #%011, D4
00001CF2  6700 0018               1400      BEQ         SUB_EA_IMM_WORD
00001CF6                          1401  
00001CF6                          1402  SUB_EA_IMM_LONG
00001CF6  281B                    1403      MOVE.L      (A3)+, D4
00001CF8  4EB8 1B38               1404      JSR         PRINT_LONG_VALUE
00001CFC                          1405  
00001CFC  43F9 00001E4E           1406      LEA         COMMA_MSG,   A1
00001D02  103C 000E               1407      MOVE.B      #14,   D0    
00001D06  4E4F                    1408      TRAP        #15
00001D08  6000 0018               1409      BRA         SUB_EA_DEST
00001D0C                          1410      
00001D0C                          1411  SUB_EA_IMM_WORD
00001D0C  381B                    1412      MOVE.W      (A3)+, D4
00001D0E  4EB8 1B0A               1413      JSR         PRINT_WORD_VALUE
00001D12                          1414  
00001D12  43F9 00001E4E           1415      LEA         COMMA_MSG,   A1
00001D18  103C 000E               1416      MOVE.B      #14,   D0    
00001D1C  4E4F                    1417      TRAP        #15
00001D1E  6000 0002               1418      BRA         SUB_EA_DEST
00001D22                          1419  
00001D22                          1420  SUB_EA_DEST   
00001D22  48E7 0600               1421      MOVEM.L     D5-D6, -(A7)
00001D26  7A09                    1422      MOVE.L      #9, D5
00001D28  7C0B                    1423      MOVE.L      #11, D6
00001D2A  4EB8 1402               1424      JSR         GET_BIT
00001D2E  4CDF 0060               1425      MOVEM.L     (A7)+, D5-D6
00001D32  43F9 00001E39           1426      LEA         A_MSG, A1
00001D38  103C 000E               1427      MOVE.B      #14,  D0    
00001D3C  4E4F                    1428      TRAP        #15
00001D3E  43F9 00001E25           1429      LEA         ZERO_MSG, A1
00001D44  C8FC 0002               1430      MULU        #2, D4
00001D48  D3C4                    1431      ADDA.L      D4, A1
00001D4A  103C 000E               1432      MOVE.B      #14,  D0    
00001D4E  4E4F                    1433      TRAP        #15
00001D50  4E75                    1434      RTS
00001D52                          1435      
00001D52                          1436      
00001D52                          1437  
00001D52                          1438  
00001D52                          1439  
00001D52                          1440  
00001D52                          1441  
00001D52                          1442  -------------------- end include --------------------
00001D52                          1443  
00001D52                          1444  
00001D52                          1445  * Put variables and constants here
00001D52                          1446  
00001D52= 57 65 6C 63 6F 6D ...   1447  INTRO_MSG:       DC.B       'Welcome to Team Cools Disassembler!',CR,LF,0
00001D78= 50 6C 65 61 73 65 ...   1448  STARTING_MSG:    DC.B       'Please enter the Starting Address',CR,LF,0
00001D9C= 50 6C 65 61 73 65 ...   1449  ENDING_MSG:      DC.B       'Please enter the Ending Address',CR,LF,0
00001DBE= 44 6F 6E 65 20 52 ...   1450  GOODBYE_MSG:     DC.B       'Done Reading data',CR,LF,0
00001DD2                          1451  * CR and LF for strings above because we want to go to next line after printing message
00001DD2                          1452  
00001DD2                          1453  STA_ADDR         DS.B        40
00001DFA                          1454  END_ADDR         DS.B        40
00001E22                          1455  
00001E22                          1456  * no CR and LF for strings below because we want to print each number and letter
00001E22                          1457  
00001E22= 20 20 00                1458  SPACE_MSG:       DC.B        '  ',0
00001E25                          1459  
00001E25= 30 00                   1460  ZERO_MSG:        DC.B        '0',0
00001E27= 31 00                   1461  ONE_MSG:         DC.B        '1',0
00001E29= 32 00                   1462  TWO_MSG:         DC.B        '2',0
00001E2B= 33 00                   1463  THREE_MSG:       DC.B        '3',0
00001E2D= 34 00                   1464  FOUR_MSG:        DC.B        '4',0
00001E2F= 35 00                   1465  FIVE_MSG:        DC.B        '5',0
00001E31= 36 00                   1466  SIX_MSG:         DC.B        '6',0
00001E33= 37 00                   1467  SEVEN_MSG:       DC.B        '7',0
00001E35= 38 00                   1468  EIGHT_MSG:       DC.B        '8',0
00001E37= 39 00                   1469  NINE_MSG:        DC.B        '9',0
00001E39= 41 00                   1470  A_MSG:           DC.B        'A',0
00001E3B= 42 00                   1471  B_MSG:           DC.B        'B',0
00001E3D= 43 00                   1472  C_MSG:           DC.B        'C',0
00001E3F= 44 00                   1473  D_MSG:           DC.B        'D',0
00001E41= 45 00                   1474  E_MSG:           DC.B        'E',0
00001E43= 46 00                   1475  F_MSG:           DC.B        'F',0 
00001E45                          1476  
00001E45= 2E 42 00                1477  BYTE_MSG        DC.B        '.B',0
00001E48= 2E 57 00                1478  WORD_MSG        DC.B        '.W',0
00001E4B= 2E 4C 00                1479  LONG_MSG        DC.B        '.L',0
00001E4E                          1480  
00001E4E= 2C 00                   1481  COMMA_MSG       DC.B        ',',0
00001E50= 24 00                   1482  DOLLAR_MSG      DC.B        '$',0
00001E52= 23 00                   1483  HASH_MSG        DC.B        '#',0
00001E54= 2B 00                   1484  PLUS_MSG        DC.B        '+',0
00001E56= 2D 00                   1485  MINUS_MSG       DC.B        '-',0
00001E58= 28 00                   1486  OPEN_PARENTHESIS_MSG  DC.B  '(',0
00001E5A= 29 00                   1487  CLOSE_PARENTHESIS_MSG DC.B  ')',0
00001E5C                          1488  *-----Carriage Return
00001E5C  =0000000D               1489  CR              EQU          $0D
00001E5C                          1490  *-----------Line Feed
00001E5C  =0000000A               1491  LF              EQU          $0A
00001E5C                          1492  
00001E5C= 0D 0A 00                1493  NEW_LINE:       DC.B         '',CR,LF,0
00001E5F                          1494  
00001E5F                          1495      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            13DB
ADDQ_MSG            13E0
ADD_EA_DEST         1C2E
ADD_EA_IMM_LONG     1C02
ADD_EA_IMM_SOURCE   1BD0
ADD_EA_IMM_WORD     1C18
ADD_EA_NON_IMM_SOURCE  1BB2
ADD_EA_SIZE_AND_EA  1B6A
ADD_MSG             13D7
AND_MSG             13F7
ASCII_DONE          106E
A_MSG               1E39
BRA_MSG             13BE
BYTE_MSG            1E45
B_MSG               1E3B
CHECK_OPCODES       116A
CLOSE_PARENTHESIS_MSG  1E5A
COMMA_MSG           1E4E
CONVERT_TO_ASCII    1056
CR                  D
C_MSG               1E3D
DOLLAR_MSG          1E50
DONE                1158
D_MSG               1E3F
EA_ABS_LONG         1AC8
EA_ABS_WORD         1AB0
EA_ADDR_REGISTER    19B0
EA_DATA_REGISTER    1988
EA_INDIRECT         19D8
EA_INDIRECT_DECREMENT  1A64
EA_INDIRECT_INCREMENT  1A18
EIGHT_MSG           1E35
ENDING_MSG          1D9C
END_ADDR            1DFA
E_MSG               1E41
FIVE_MSG            1E2F
FOUR_MSG            1E2D
F_MSG               1E43
GET_BIT             1402
GET_EA              1930
GOODBYE_MSG         1DBE
HASH_MSG            1E52
INTRO_MSG           1D52
ISOLATE_15_11       124A
ISOLATE_15_12       11D2
ISOLATE_15_14       125C
ISOLATE_15_6        121E
ISOLATE_15_8        1230
ISOLATE_16          120C
ISOLATE_8_6         126E
JSR_MSG             13FE
LABEL1              161E
LABEL2              1630
LABEL3              1636
LABEL4              17D0
LEA_MSG             13D3
LETTER_ASCII        1084
LF                  A
LONG_MSG            1E4B
MINUS_MSG           1E56
MOVEA_MSG           13CD
MOVEM_MSG           13C7
MOVEQ_MSG           13F1
MOVE_MSG            13C2
NEW_LINE            1E5C
NINE_MSG            1E37
NOP                 1416
NOP_MSG             13ED
NOT_MSG             13BA
NUMBER_ASCII        1070
ONE_MSG             1E27
OPEN_PARENTHESIS_MSG  1E58
OP_CODE_ADD         12FA
OP_CODE_ADDA        1312
OP_CODE_ADDQ        1324
OP_CODE_AND         1384
OP_CODE_BRA         12A0
OP_CODE_JSR         13A8
OP_CODE_LEA         12B2
OP_CODE_MOVE        12C4
OP_CODE_MOVEA       12D6
OP_CODE_MOVEM       12E8
OP_CODE_MOVEQ       1372
OP_CODE_NOP         1360
OP_CODE_NOT         128E
OP_CODE_OR          1396
OP_CODE_RTS         134E
OP_CODE_SUB         1336
OR_MSG              13FB
PLUS_MSG            1E54
PRINT_BYTE_VALUE    1ADE
PRINT_BYTE_VALUE_LOOP  1AE4
PRINT_DONE          1126
PRINT_LONG_VALUE    1B38
PRINT_LONG_VALUE_LOOP  1B3E
PRINT_LOOP          10F8
PRINT_MEMORY_LOOP   1098
PRINT_WORD_VALUE    1B0A
PRINT_WORD_VALUE_LOOP  1B10
RETURN              11D0
REVERSE_DONE        1156
REVERSE_LOOP        1138
REVERSE_START       1128
RTS_MSG             13E9
SEVEN_MSG           1E33
SHIFT_ROTATE_COUNT_1_7  18E8
SHIFT_ROTATE_COUNT_8  18FE
SHIFT_ROTATE_EA_MEMORY  190E
SHIFT_ROTATE_EA_REGISTER  182A
SHIFT_ROTATE_EA_SIZE  17FA
SHIFT_ROTATE_IMM_SOURCE  18B2
SHIFT_ROTATE_REGISTER_DEST  1876
SHIFT_ROTATE_REGISTER_SOURCE  1844
SIX_MSG             1E31
SPACE_MSG           1E22
START               1000
STARTING_MSG        1D78
STA_ADDR            1DD2
SUB_EA_DEST         1D22
SUB_EA_IMM_LONG     1CF6
SUB_EA_IMM_SOURCE   1CC4
SUB_EA_IMM_WORD     1D0C
SUB_EA_NON_IMM_SOURCE  1CA6
SUB_EA_SIZE_AND_EA  1C5E
SUB_MSG             13E5
THREE_MSG           1E2B
TWO_MSG             1E29
WORD_MSG            1E48
ZERO_MSG            1E25
